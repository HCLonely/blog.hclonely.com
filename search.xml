<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>公主连结 Re:Dive 中文输入法词库</title>
      <link href="/posts/19a06541/"/>
      <url>/posts/19a06541/</url>
      
        <content type="html"><![CDATA[<p>本文介绍一个适用于多种输入法的关于<code>公主连结Re:Dive</code>的词库<a href="https://github.com/HCLonely/pcr-dict">pcr-dict</a>。</p><h2 id="特色"><a class="markdownIt-Anchor" href="#特色"></a> 特色</h2><ul><li>支持多种输入法：<ul><li>搜狗拼音 txt</li><li>QQ 拼音</li><li>QQ 五笔</li><li>百度拼音</li><li>小小输入法</li><li>谷歌拼音</li><li>Gboard</li><li>拼音加加</li><li>Win10 微软拼音（自定义短语）</li><li>Win10 微软五笔（自定义短语）</li><li>Win10 微软拼音（自学习词库）</li><li>微软拼音</li><li>必应输入法</li><li>FIT 输入法</li><li>Mac 简体拼音</li><li>Rime 中州韵</li><li>华宇紫光拼音</li><li>libpinyin</li><li>Chinese-pyim</li><li>手心输入法</li><li>新浪拼音</li><li>极点五笔</li><li>极点郑码</li><li>小鸭五笔</li><li>雅虎奇摩</li><li>五笔 86 版</li><li>五笔 98 版</li><li>仓颉平台</li><li>百度手机或 Mac 版百度拼音</li><li>QQ 手机</li><li>讯飞输入法</li></ul></li><li>全面吃鱼更新的词汇：<ul><li>包括角色名，别名，公会名，声优名，装备名，专武名，技能名称等等</li><li>每周更新一次</li></ul></li></ul><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><ul><li>到<a href="https://github.com/HCLonely/pcr-dict/releases">github releases</a>页面下载<code>pcr-dict.zip</code>文件，解压后导入即可。</li><li><a href="https://hclonely.lanzous.com/b01c999ne">蓝奏云下载</a> 密码:h1wg</li></ul><h2 id="数据来源"><a class="markdownIt-Anchor" href="#数据来源"></a> 数据来源</h2><ul><li>角色&amp;别名&amp;公会&amp;声优: <a href="https://github.com/Ice-Cirno/HoshinoBot">HoshinoBot</a></li><li>装备&amp;专武&amp;技能: <a href="https://wiki.biligame.com/pcr/%E9%A6%96%E9%A1%B5">公主连结 WIKI</a></li></ul><h2 id="词库转换工具"><a class="markdownIt-Anchor" href="#词库转换工具"></a> 词库转换工具</h2><ul><li><a href="https://github.com/studyzy/imewlconverter">imewlconverter</a></li></ul><h2 id="license"><a class="markdownIt-Anchor" href="#license"></a> LICENSE</h2><p><a href="https://github.com/HCLonely/pcr-dict/blob/master/LICENSE">MIT LICENSE</a></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
          <category> 手机游戏 </category>
          
          <category> 公主连结 Re:Dive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手机游戏 </tag>
            
            <tag> 公主连结 Re:Dive </tag>
            
            <tag> pcr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 NodeJs 的 live2d 后端 Api 服务器</title>
      <link href="/posts/f19bd1b6/"/>
      <url>/posts/f19bd1b6/</url>
      
        <content type="html"><![CDATA[<p>适用于<a href="https://blog.hclonely.com/posts/f09c9fef/">live2d.user.js</a>,<a href="https://blog.hclonely.com/posts/e1f9f17c/">live2d_demo</a>的基于 Nodejs 的后端 Api.</p><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ol><li>安装<a href="https://nodejs.org/en/">NodeJs</a>,<a href="https://git-scm.com/">Git</a></li><li>克隆本项目<code>git clone https://github.com/HCLonely/live2dNodeApi.git</code></li><li>定位到项目目录<code>cd live2dNodeApi</code></li><li>安装依赖<code>npm i -S</code>或<code>cnpm i -S</code></li><li>启动服务器<code>npm start</code></li></ol><h2 id="命令"><a class="markdownIt-Anchor" href="#命令"></a> 命令</h2><table><thead><tr><th>命令</th><th>功能</th><th>额外说明</th></tr></thead><tbody><tr><td><code>npm start</code></td><td>启动 api 服务器</td><td></td></tr><tr><td><code>npm run update</code></td><td>重新生成<code>modelList.json</code>文件</td><td>用于增加或删除模型后更新模型列表</td></tr><tr><td><code>npm run check</code></td><td>检测模型的主配置文件格式及模型文件的完整性</td><td></td></tr><tr><td><code>npm run screenshot</code></td><td>生成模型的预览图，放在<code>preview</code>文件夹</td><td></td></tr><tr><td><code>npm run pre</code></td><td>在网页上查看模型的预览图，需要先生成</td><td></td></tr></tbody></table><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>修改<code>config.json</code>文件进行配置：</p><pre class="highlight"><code class="json">&#123;  <span class="hljs-attr">"port"</span>: <span class="hljs-number">2333</span>, <span class="hljs-comment">// 监听端口，默认2333</span>  <span class="hljs-attr">"ssl"</span>:&#123;    <span class="hljs-attr">"enable"</span>:<span class="hljs-literal">false</span>, <span class="hljs-comment">// 是否启用ssl</span>    <span class="hljs-attr">"privateCrt"</span>:<span class="hljs-string">""</span>, <span class="hljs-comment">// ssl证书文件路径</span>    <span class="hljs-attr">"privateKey"</span>:<span class="hljs-string">""</span> <span class="hljs-comment">// ssl私钥文件路径</span>  &#125;&#125;</code></pre><h2 id="模型目录结构"><a class="markdownIt-Anchor" href="#模型目录结构"></a> 模型目录结构</h2><pre class="highlight"><code class="shell">models├─模型文件夹 # 同一角色不同皮肤，不同皮肤共用一个index.json文件│  ├─index.json # 必须，或model.json│  └─...├─模型文件夹 # 同一角色不同皮肤，每个皮肤都有各自的index.json文件│  ├─模型文件夹 # 单个模型│  │  ├─index.json # 必须，或model.json│  │  └─...│  └─模型文件夹 # 单个模型│      ├─index.json # 必须，或model.json│      └─...└─模型文件夹 # 单个模型    ├─index.json # 必须，或model.json    └─...</code></pre><blockquote><p>详情请参考<a href="https://github.com/HCLonely/live2dNodeApi/tree/master/models">models</a>目录</p></blockquote><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><h3 id="依赖安装慢"><a class="markdownIt-Anchor" href="#依赖安装慢"></a> 依赖安装慢</h3><p><a href="https://www.baidu.com/s?ie=utf-8&amp;wd=npm%E5%AE%89%E8%A3%85%E6%85%A2">npm 安装慢</a></p><p><a href="https://www.baidu.com/s?ie=utf-8&amp;wd=puppeteer%E5%AE%89%E8%A3%85%E6%85%A2">下载 Chromium 慢</a></p><h3 id="更新模型后顺序乱了"><a class="markdownIt-Anchor" href="#更新模型后顺序乱了"></a> 更新模型后顺序乱了</h3><p>请重命名模型文件夹进行排序，参考<a href="https://github.com/HCLonely/live2dNodeApi/tree/master/models">models</a>目录。</p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
          <category> NodeJs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2d </tag>
            
            <tag> 看板娘 </tag>
            
            <tag> NodeJs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度分析和谷歌分析适配 pjax</title>
      <link href="/posts/9b0e1025/"/>
      <url>/posts/9b0e1025/</url>
      
        <content type="html"><![CDATA[<p>现在有很多网站使用 pjax, 包括本站也是。本站主题是从 Typecho 的 hansome 主题移植过来的，在移植过程中就遇到了这个问题：<br /><strong>开启 pjax 后百度分析和谷歌分析之统计首次访问的页面，之后的页面都不会统计。</strong><br />下面来说一下我是如何解决的。</p><h2 id="百度分析"><a class="markdownIt-Anchor" href="#百度分析"></a> 百度分析</h2><p>在<code>pjax:complete</code>添加以下回调：</p><pre class="highlight"><code class="javascript"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> _hmt !== <span class="hljs-string">"undefined"</span> &amp;&amp; <span class="hljs-keyword">typeof</span> _hmt.push === <span class="hljs-string">"function"</span>) _hmt.push([<span class="hljs-string">'_trackPageview'</span>,<span class="hljs-built_in">window</span>.location.pathname]);</code></pre><h2 id="谷歌分析"><a class="markdownIt-Anchor" href="#谷歌分析"></a> 谷歌分析</h2><p>谷歌分析似乎有两种，请根据你引用的 js 库修改：</p><ul><li>ga: 使用<code>https://www.google-analytics.com/analytics.js</code></li><li>gtag: 使用<code>https://www.googletagmanager.com/gtag/js?id=UA-*******</code></li></ul><h3 id="ga"><a class="markdownIt-Anchor" href="#ga"></a> ga</h3><p>在<code>pjax:complete</code>添加以下回调：</p><pre class="highlight"><code class="javascript"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> ga === <span class="hljs-string">"function"</span>) ga(<span class="hljs-string">'send'</span>, <span class="hljs-string">'pageview'</span>, <span class="hljs-built_in">window</span>.location.href);</code></pre><h3 id="gtag"><a class="markdownIt-Anchor" href="#gtag"></a> gtag</h3><p>在<code>pjax:complete</code>添加以下回调(感谢<a href="https://www.fghrsh.net/">@FGHRSH</a>)：</p><pre class="highlight"><code class="javascript"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> gtag === <span class="hljs-string">"function"</span>) gtag(<span class="hljs-string">'event'</span>, <span class="hljs-string">'pageview'</span>, &#123;<span class="hljs-attr">page_location</span>: <span class="hljs-built_in">window</span>.location.href&#125;);</code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> pjax </tag>
            
            <tag> 百度分析 </tag>
            
            <tag> 谷歌分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-calendar 活动日历插件</title>
      <link href="/posts/bdd7db89/"/>
      <url>/posts/bdd7db89/</url>
      
        <content type="html"><![CDATA[<p>在博客中插入类似 Github contributions 的活动日历。</p><div class="tip inlineBlock warning">            <p>注意：此插件会和<code>hexo g</code>命令冲突，请使用<code>hexo ge</code>或<code>hexo generate</code>替代<code>hexo g</code>命令！</p>          </div><h2 id="前提条件"><a class="markdownIt-Anchor" href="#前提条件"></a> 前提条件</h2><div class="tip inlineBlock error">            <p>注意：不满足前提条件的无法使用此插件，在不满足前提条件的情况下安装此插件出现的问题不予以处理，如何实现以下前提条件的问题不予以处理！</p>          </div><ol><li>Node.js &gt;= 12.0</li><li>使用<a href="https://git-scm.com/">Git</a>对博客**源码（不是使用 git 部署）**进行管理；</li><li>在博客根目录使用<code>git log -1 --date=iso --pretty=format:&quot;%ad&quot;</code>命令能够输出一个日期；</li><li>如何确定第一项是否符合：<ol><li>博客根目录含有<code>.git</code>文件夹，这是一个隐藏文件夹；</li><li>符合上面的第三项。</li></ol></li></ol><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><pre class="highlight"><code class="shell">npm i hexo-calendar -S</code></pre><p>or</p><pre class="highlight"><code class="shell">cnpm i hexo-calendar -S</code></pre><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><h3 id="作为辅助函数在主题模板中使用"><a class="markdownIt-Anchor" href="#作为辅助函数在主题模板中使用"></a> 作为辅助函数在主题模板中使用</h3><pre class="highlight"><code class="ejs">&lt;%- calendar(&#123;monthLang: 'cn', dayLang: 'cn', title: '活动日历'&#125;) %&gt;</code></pre><h3 id="作为标签在-md-文件中使用"><a class="markdownIt-Anchor" href="#作为标签在-md-文件中使用"></a> 作为标签在 md 文件中使用</h3><div class="tip inlineBlock warning">            <p>注意：这种方法请使用严格的 JSON 格式！</p>          </div><pre class="highlight"><code class="Nunjucks">&#123;% calendar %&#125;&#123;"monthLang": "cn", "dayLang": "cn", "title": "活动日历"&#125;&#123;% endcalendar %&#125;</code></pre><h3 id="如果你使用了自动部署"><a class="markdownIt-Anchor" href="#如果你使用了自动部署"></a> 如果你使用了自动部署</h3><p>如果你使用了<code>Travis CI</code>, <code>Github Action</code>之类的自动部署，那么你需要在推送源码之前使用<code>hexo gc -w=40</code>命令生成一个<code>calendar.json</code>文件。<code>-w=40</code>代表显示 40 周之前至今的活动记录。</p><h2 id="选项"><a class="markdownIt-Anchor" href="#选项"></a> 选项</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">类型</th><th style="text-align:center">默认值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">width</td><td style="text-align:center"><code>String</code></td><td style="text-align:center"><code>&quot;600&quot;</code></td><td style="text-align:center">日历宽度，单位：<code>px</code></td></tr><tr><td style="text-align:center">height</td><td style="text-align:center"><code>String</code></td><td style="text-align:center"><code>&quot;165&quot;</code></td><td style="text-align:center">日历高度，单位：<code>px</code></td></tr><tr><td style="text-align:center">id</td><td style="text-align:center"><code>String</code></td><td style="text-align:center"><code>&quot;calendar&quot;</code></td><td style="text-align:center">日历元素 id</td></tr><tr><td style="text-align:center">monthLang</td><td style="text-align:center"><code>String</code> or <code>Array</code></td><td style="text-align:center"><code>&quot;en&quot;</code></td><td style="text-align:center">月份语言，可选：<code>en</code>, <code>cn</code>或<a href="https://echarts.apache.org/zh/option.html#calendar.monthLabel.nameMap">自定义</a></td></tr><tr><td style="text-align:center">dayLang</td><td style="text-align:center"><code>String</code> or <code>Array</code></td><td style="text-align:center"><code>&quot;en&quot;</code></td><td style="text-align:center">一周中每一天的语言，可选：<code>en</code>, <code>cn</code>或<a href="https://echarts.apache.org/zh/option.html#calendar.dayLabel.nameMap">自定义</a></td></tr><tr><td style="text-align:center">weeks</td><td style="text-align:center"><code>Number</code></td><td style="text-align:center"><code>40</code></td><td style="text-align:center">显示多少周之前至今的活动记录</td></tr><tr><td style="text-align:center">title</td><td style="text-align:center"><code>String</code></td><td style="text-align:center"><code>&quot;calendar&quot;</code></td><td style="text-align:center">日历标题</td></tr><tr><td style="text-align:center">insertScript</td><td style="text-align:center"><code>Boolean</code></td><td style="text-align:center"><code>true</code></td><td style="text-align:center">是否自动插入<code>echarts</code>库。如果你已全局引入<code>echarts</code>库，请将此项设为<code>false</code>；如果你的站点启用了<code>pjax</code>，请将此项设为<code>false</code>，并全局引用<code>echarts</code>库。</td></tr></tbody></table><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/hexo-calendar@latest/example.png" alt="示例" /></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> Hexo </tag>
            
            <tag> tag </tag>
            
            <tag> 日历 </tag>
            
            <tag> helper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 免密、免 SSH 进行 push &amp; pull</title>
      <link href="/posts/8585e79a/"/>
      <url>/posts/8585e79a/</url>
      
        <content type="html"><![CDATA[<p>本文介绍了如何不使用帐号密码，不配置 SSH 对 git 远程仓库进行拉取(pull)和推送(push), 如果你需要经常换电脑或使用公共电脑的话使用此方法比较安全。这里主要介绍 Github, Coding, 码云这三个比较主流的托管平台的配置方法。</p><h2 id="github"><a class="markdownIt-Anchor" href="#github"></a> Github</h2><ol><li>登录 Github, 点击右上角的头像-&gt;<code>Settings</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Github-1.webp" alt="Github-1" /></p><ol start="2"><li>点击<code>Developer settings</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Github-2.webp" alt="Github-2" /></p><ol start="3"><li>点击<code>Personal access tokens</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Github-3.webp" alt="Github-3" /></p><ol start="4"><li>点击<code>Generate new token</code>创建一个<code>token</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Github-4.webp" alt="Github-4" /></p><ol start="5"><li><code>Note</code>随便填就行，<code>Select scopes</code>勾选<code>repo</code>给与 repo 操作权限，然后拉到最下面点击<code>Generate token</code>即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Github-5.webp" alt="Github-5" /></p><ol start="6"><li>记住这个 token(我这里加密了，实际上是一串字母数字)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Github-6.webp" alt="Github-6" /></p><ol start="7"><li><p>以<code>https://github.com/user/repo.git</code>仓库为例，只需要在仓库前面添加<code>x-access-token:**************@</code>即可，<code>************</code>替换成上一步的 token</p><pre class="highlight"><code class="code">https://x-access-token:**************@github.com/user/repo.git</code></pre></li></ol><h2 id="coding"><a class="markdownIt-Anchor" href="#coding"></a> Coding</h2><ol><li>登录 Coding, 点击右上角的头像-&gt;<code>个人设置</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Coding-1.webp" alt="Coding-1" /></p><ol start="2"><li>点击<code>访问令牌</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Coding-2.webp" alt="Coding-2" /></p><ol start="3"><li>点击<code>新建令牌</code>创建一个<code>令牌</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Coding-3.webp" alt="Coding-3" /></p><ol start="4"><li><code>令牌描述</code>随便填就行，<code>选择权限</code>勾选<code>project:depot</code>给与仓库操作权限，然后拉到最下面点击<code>创建令牌</code>即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Coding-4.webp" alt="Coding-4" /></p><ol start="6"><li>记住这个用户名和令牌(我这里加密了，实际上是一串字母数字)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Coding-5.webp" alt="Coding-5" /></p><ol start="7"><li><p>以<code>https://e.coding.net/user/project/repo.git</code>仓库为例，只需要在仓库前面添加<code>用户名:令牌@</code>即可,<code>用户名</code>和<code>令牌</code>替换成上一步的用户名和令牌</p><pre class="highlight"><code class="code">https://*****:***********@e.coding.net/user/project/repo.git</code></pre></li></ol><h2 id="码云"><a class="markdownIt-Anchor" href="#码云"></a> 码云</h2><ol><li>登录码云, 点击右上角的头像-&gt;<code>设置</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Gitee-1.webp" alt="Gitee-1" /></p><ol start="2"><li>点击<code>私人令牌</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Gitee-2.webp" alt="Gitee-2" /></p><ol start="3"><li>点击<code>生成新令牌</code>创建一个<code>令牌</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Gitee-3.webp" alt="Gitee-3" /></p><ol start="4"><li><code>私人令牌描述</code>随便填就行，<code>请选择将要生成的私人令牌所拥有的权限</code>勾选<code>projects</code>给与仓库操作权限，如果弄需要<code>Pull Requests</code>那就把下面的<code>pull_requests</code>也勾选上，然后拉到最下面点击<code>提交</code>即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Gitee-4.webp" alt="Gitee-4" /></p><ol start="6"><li>记住这个令牌(我这里加密了，实际上是一串字母数字)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/8585e79a/Gitee-5.webp" alt="Gitee-5" /></p><ol start="7"><li><p>以<code>https://gitee.com/user/repo.git</code>仓库为例，只需要在仓库前面添加<code>oauth2:**********</code>即可,<code>**********</code>替换成上一步的令牌</p><pre class="highlight"><code class="code">https://oauth2:**********@gitee.com/user/repo.git</code></pre></li></ol><div class="tip inlineBlock warning">            <p>安全起见，如果你使用公共电脑进行仓库的 push&amp;pull 操作，请在离开时删除你的代码仓库，如果你之后还要用不想删除代码仓库，请使用<code>git remote rm</code>命令把仓库链接删掉！</p>          </div>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
            <tag> Coding </tag>
            
            <tag> 码云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一款基于 webstack 的 hexo 主题</title>
      <link href="/posts/3cd4fb34/"/>
      <url>/posts/3cd4fb34/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一款基于<a href="https://github.com/WebStackPage/WebStackPage.github.io">WebStackPage</a>的 Hexo 主题。<a href="https://webstack.hclonely.com/">Demo</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/hexo-theme-webstack@latest/screenshot/screenshot.png" alt="screenshot" /></p><div id="badge-container-HCLonely-hexo-theme-webstack-fc2ec5e" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-hexo-theme-webstack-fc2ec5e", "HCLonely", "hexo-theme-webstack", "fc2ec5e", false);</script><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><pre class="highlight"><code class="shell">git clone https://github.com/HCLonely/hexo-theme-webstack themes/webstack</code></pre><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><h3 id="favicon"><a class="markdownIt-Anchor" href="#favicon"></a> favicon</h3><blockquote><p>网站图标</p></blockquote><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">favicon:</span> <span class="hljs-string">/favicon.ico</span></code></pre><h3 id="banner"><a class="markdownIt-Anchor" href="#banner"></a> banner</h3><blockquote><p>[可选]分享网站到 twitter 和 facebook 时的图片。</p></blockquote><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">banner:</span> <span class="hljs-string">/images/webstack_banner_cn.png</span></code></pre><h3 id="logo"><a class="markdownIt-Anchor" href="#logo"></a> logo</h3><blockquote><p>网站 logo</p></blockquote><ul><li><code>expanded</code>: 侧边栏展开时左上角的 logo<br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/expanded.webp" alt="expanded" /></li><li><code>collapsed</code>: 侧边栏收起时左上角的 logo<br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/collapsed.webp" alt="collapsed" /></li><li><code>dark</code>: 顶栏为暗色时左上角的 logo, 仅 <code>about</code> 页面生效<br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/dark.webp" alt="dark" /></li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">logo:</span>  <span class="hljs-attr">expanded:</span> <span class="hljs-string">/images/logo@2x.png</span>  <span class="hljs-attr">collapsed:</span> <span class="hljs-string">/images/logo-collapsed@2x.png</span>  <span class="hljs-attr">dark:</span> <span class="hljs-string">/images/logo_dark@2x.png</span></code></pre><h3 id="flag"><a class="markdownIt-Anchor" href="#flag"></a> flag</h3><blockquote><p>语言标识，多语言请配合<a href="#%E5%AD%90%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE">子页面</a>使用</p></blockquote><ul><li>icon: 语言图标，默认仅有<code>flag-cn</code>和<code>flag-us</code>, 其他图标自行寻找存放于<code>主题目录/source/images/flags/</code></li><li>name: 语言名称</li><li>default: 该语言是否为默认语言</li><li>index: 页面链接</li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">flag:</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chinese</span>    <span class="hljs-attr">default:</span> <span class="hljs-literal">true</span>    <span class="hljs-attr">icon:</span> <span class="hljs-string">flag-cn</span>    <span class="hljs-attr">index:</span> <span class="hljs-string">/index.html</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/flag.webp" alt="flag" /></p><h3 id="search"><a class="markdownIt-Anchor" href="#search"></a> search</h3><blockquote><p>是否显示搜索框</p></blockquote><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">search:</span> <span class="hljs-literal">true</span></code></pre><h3 id="userdefinedsearchdata"><a class="markdownIt-Anchor" href="#userdefinedsearchdata"></a> userDefinedSearchData</h3><blockquote><p>自定义搜索引擎</p></blockquote><ul><li>custom: 是否启用自定义配置</li><li>thisSearch: 当前搜索引擎的搜索链接</li><li>thisSearchIcon: 当前搜索引擎的图标链接，格式为<code>url(图片链接)</code></li><li>hotStatus: 是否启用搜热词功能</li><li>data: 多搜索引擎配置<ul><li>name: 搜索引擎名字<br />img: 搜索引擎的搜索链接<br />url: 搜索引擎的图标链接，格式为<code>url(图片链接)</code></li></ul></li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">userDefinedSearchData:</span>  <span class="hljs-attr">custom:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">thisSearch:</span> <span class="hljs-string">https://www.baidu.com/s?wd=</span>  <span class="hljs-attr">thisSearchIcon:</span> <span class="hljs-string">url(https://www.baidu.com/favicon.ico)</span>  <span class="hljs-attr">hotStatus:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">data:</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">百度</span>      <span class="hljs-attr">img:</span> <span class="hljs-string">url(https://www.baidu.com/favicon.ico)</span>      <span class="hljs-attr">url:</span> <span class="hljs-string">https://www.baidu.com/s?wd=</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">谷歌</span>      <span class="hljs-attr">img:</span> <span class="hljs-string">url(https://www.google.com/favicon.ico)</span>      <span class="hljs-attr">url:</span> <span class="hljs-string">https://www.google.com/search?q=</span></code></pre><h3 id="githubcorner"><a class="markdownIt-Anchor" href="#githubcorner"></a> githubCorner</h3><blockquote><p>右上角的 <a href="http://tholman.com/github-corners/">github corner</a></p></blockquote><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">githubCorner:</span> <span class="hljs-string">'&lt;a href="https://github.com/HCLonely/hexo-theme-webstack" class="github-corner" aria-label="View source on GitHub"&gt;&lt;svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"&gt;&lt;path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"&gt;&lt;/path&gt;&lt;path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"&gt;&lt;/path&gt;&lt;path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100<span class="hljs-template-variable">%&#123;transform:rotate(0)&#125;</span>20%,60<span class="hljs-template-variable">%&#123;transform:rotate(-25deg)&#125;</span>40%,80<span class="hljs-template-variable">%&#123;transform:rotate(10deg)&#125;</span>&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;'</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/github.webp" alt="github" /></p><h3 id="since"><a class="markdownIt-Anchor" href="#since"></a> since</h3><blockquote><p>建站年份，显示在页面底部</p></blockquote><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">since:</span> <span class="hljs-number">2020</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/since.webp" alt="since" /></p><h3 id="menu"><a class="markdownIt-Anchor" href="#menu"></a> menu</h3><blockquote><p><strong>[主要]侧边栏菜单设置</strong></p></blockquote><ul><li>name: 分组名</li><li>icon: 分组图标</li><li>config: [主要]分组内容(详细设置查看<a href="#config">Config</a>)，如果有二级菜单则不需要此项！</li><li>submenu: 二级菜单，如果有二级菜单则不需要<code>config</code>, 此选项内容包含<code>name</code>, <code>icon</code>, <code>config</code>选项</li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">menu:</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">常用工具</span>    <span class="hljs-attr">icon:</span> <span class="hljs-string">far</span> <span class="hljs-string">fa-star</span>    <span class="hljs-attr">config:</span> <span class="hljs-string">hotTools</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">其他工具</span>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-tools</span>    <span class="hljs-attr">submenu:</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">开发工具</span>        <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-tools</span>        <span class="hljs-attr">config:</span> <span class="hljs-string">devTools</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">我的博客</span>        <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-blog</span>        <span class="hljs-attr">config:</span> <span class="hljs-string">myBlog</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/menu.webp" alt="menu" /></p><h3 id="expandall"><a class="markdownIt-Anchor" href="#expandall"></a> expandAll</h3><blockquote><p>是否将侧边栏全部展开</p></blockquote><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">expandAll:</span> <span class="hljs-literal">true</span></code></pre><h3 id="about"><a class="markdownIt-Anchor" href="#about"></a> about</h3><blockquote><p>侧边栏的关于本站</p></blockquote><ul><li>url: 关于页面链接</li><li>name: 在侧边栏显示的文字</li><li>icon: 图标</li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">about:</span>  <span class="hljs-attr">url:</span> <span class="hljs-string">/about/</span>  <span class="hljs-attr">icon:</span> <span class="hljs-string">far</span> <span class="hljs-string">fa-heart</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">关于本站</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/about.webp" alt="about" /></p><h3 id="aboutpage"><a class="markdownIt-Anchor" href="#aboutpage"></a> aboutPage</h3><blockquote><p>关于页面设置</p></blockquote><ol><li>生成关于页面</li></ol><pre class="highlight"><code class="shell">hexo new page about</code></pre><ol start="2"><li>编辑<code>source/about/index.md</code>, 添加<code>type: 'about'</code></li></ol><pre class="highlight"><code class="yml"><span class="hljs-meta">---</span><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><span class="hljs-attr">date:</span> <span class="hljs-number">2020</span><span class="hljs-number">-06</span><span class="hljs-number">-04</span> <span class="hljs-number">18</span><span class="hljs-string">:11:54</span><span class="hljs-attr">type:</span> <span class="hljs-string">'about'</span><span class="hljs-meta">---</span></code></pre><ol start="3"><li>编辑主题配置文件的<code>aboutPage</code></li></ol><ul><li>website: 关于本站内容<ul><li>head: 标题</li><li>html: 内容，支持<code>html</code>语法</li></ul></li><li>webmaster: 关于站长内容<ul><li>head: 标题</li><li>name: 站长名字</li><li>url: 链接</li><li>img: 头像</li><li>description: 描述</li><li>html: 其他内容，支持<code>html</code>语法</li></ul></li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">aboutPage:</span>  <span class="hljs-attr">website:</span>    <span class="hljs-attr">head:</span> <span class="hljs-string">关于本站</span>    <span class="hljs-attr">html:</span> <span class="hljs-string">'&lt;blockquote&gt;&lt;p&gt;本站是hexo主题&lt;a href="https://github.com/HCLonely/hexo-theme-webstack"&gt;hexo-theme-webstack&lt;/a&gt;的demo站。&lt;/p&gt;&lt;/blockquote&gt;'</span>  <span class="hljs-attr">webmaster:</span>    <span class="hljs-attr">head:</span> <span class="hljs-string">关于站长</span>    <span class="hljs-attr">name:</span> <span class="hljs-string">HCLonely</span>    <span class="hljs-attr">url:</span> <span class="hljs-string">https://blog.hclonely.com/</span>    <span class="hljs-attr">img:</span> <span class="hljs-string">/images/logos/myblog.png</span>    <span class="hljs-attr">description:</span> <span class="hljs-string">懒人一个</span>    <span class="hljs-attr">html:</span> <span class="hljs-string">'&lt;br /&gt;&lt;blockquote&gt;&lt;p&gt;本站是&lt;a href="https://github.com/HCLonely"&gt;HCLonely&lt;/a&gt;基于&lt;a href="https://github.com/WebStackPage/WebStackPage.github.io"&gt;WebStackPage&lt;/a&gt;项目做的一款&lt;a href="https://hexo.io/"&gt;Hexo&lt;/a&gt;主题。&lt;/p&gt;&lt;/blockquote&gt;'</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/aboutPage.webp" alt="aboutPage" /></p><h3 id="busuanzi"><a class="markdownIt-Anchor" href="#busuanzi"></a> busuanzi</h3><blockquote><p>不蒜子统计</p></blockquote><ul><li>enable: 是否启用不蒜子统计</li><li>position: 访问量显示位置, <code>footer</code>显示在页脚, <code>sidebar</code>显示在侧边栏</li><li>pv: 访问量显示的内容, <code>$pv</code>会被替换为访问量</li><li>uv: 访客数显示的内容, <code>$uv</code>会被替换为访客数</li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">busuanzi:</span>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">position:</span> <span class="hljs-string">sidebar</span>  <span class="hljs-attr">pv:</span> <span class="hljs-string">本站总访问量$pv</span>  <span class="hljs-attr">uv:</span> <span class="hljs-string">本站总访客数$uv</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/sidebar.webp" alt="sidebar" /><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/3cd4fb34/footer.webp" alt="footer" /></p><h3 id="custom"><a class="markdownIt-Anchor" href="#custom"></a> custom</h3><blockquote><p>自定义<code>html</code>内容</p></blockquote><ul><li>head: 插入到<code>&lt;head&gt;&lt;/head&gt;</code>标签内的内容</li><li>body: 插入到<code>&lt;/body&gt;</code>标签之前的内容</li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">custom:</span>  <span class="hljs-attr">head:</span> <span class="hljs-string">|-</span> <span class="hljs-comment"># 以下内容插入到&lt;head&gt;&lt;/head&gt;标签内，可设置多行，注意每行开头至少四个空格</span>    <span class="hljs-string">&lt;link</span> <span class="hljs-string">rel="stylesheet"</span> <span class="hljs-string">type="text/css"</span> <span class="hljs-string">href="custom.css"&gt;</span>    <span class="hljs-string">&lt;script</span> <span class="hljs-string">src="custom.js"&gt;&lt;/script&gt;</span>  <span class="hljs-attr">body:</span> <span class="hljs-string">|-</span> <span class="hljs-comment"># 以下内容插入到&lt;/body&gt;标签之前，可设置多行，注意每行开头至少四个空格</span>    <span class="hljs-string">&lt;div&gt;custom</span> <span class="hljs-string">text&lt;/div&gt;</span>    <span class="hljs-string">&lt;script</span> <span class="hljs-string">src="custom.js"&gt;&lt;/script&gt;</span></code></pre><h2 id="config"><a class="markdownIt-Anchor" href="#config"></a> config</h2><blockquote><p>[主要]网站内容设置</p></blockquote><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h3><ul><li>name: 网站名称</li><li>url: 网站链接</li><li>img: 网站图标</li><li>description: 网站描述</li></ul><p>示例：</p><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HCLonely</span> <span class="hljs-string">Blog</span>  <span class="hljs-attr">url:</span> <span class="hljs-string">https://blog.hclonely.com/</span>  <span class="hljs-attr">img:</span> <span class="hljs-string">/images/logos/myBlog.png</span>  <span class="hljs-attr">description:</span> <span class="hljs-string">一个懒人的博客。</span></code></pre><h3 id="关联设置名称并添加网站"><a class="markdownIt-Anchor" href="#关联设置名称并添加网站"></a> 关联设置名称并添加网站</h3><p>在<code>menu</code>和<code>submenu</code>中设置的<code>config</code>的内容为此选项的名称。</p><p>例<code>menu</code>：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">menu:</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">常用工具</span>    <span class="hljs-attr">icon:</span> <span class="hljs-string">far</span> <span class="hljs-string">fa-star</span>    <span class="hljs-attr">config:</span> <span class="hljs-string">hotTools</span></code></pre><p>则<code>常用工具</code>分组里的网站有以下两种添加方式：</p><ul><li>在主题的<code>_config.yml</code>里添加：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-attr">hotTools:</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HCLonely</span> <span class="hljs-string">Blog</span>    <span class="hljs-attr">url:</span> <span class="hljs-string">https://blog.hclonely.com/</span>    <span class="hljs-attr">img:</span> <span class="hljs-string">/images/logos/myBlog.png</span>    <span class="hljs-attr">description:</span> <span class="hljs-string">一个懒人的博客。</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Github</span>    <span class="hljs-attr">url:</span> <span class="hljs-string">https://github.com/</span>    <span class="hljs-attr">img:</span> <span class="hljs-string">/images/logos/github.png</span>    <span class="hljs-attr">description:</span> <span class="hljs-string">面向开源及私有软件项目的托管平台。</span></code></pre><ul><li>在<code>站点根目录/source/_data/</code>(没有自行创建)内新建<code>hotTools.yml</code>文件，文件内容如下：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HCLonely</span> <span class="hljs-string">Blog</span>  <span class="hljs-attr">url:</span> <span class="hljs-string">https://blog.hclonely.com/</span>  <span class="hljs-attr">img:</span> <span class="hljs-string">/images/logos/myBlog.png</span>  <span class="hljs-attr">description:</span> <span class="hljs-string">一个懒人的博客。</span><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Github</span>  <span class="hljs-attr">url:</span> <span class="hljs-string">https://github.com/</span>  <span class="hljs-attr">img:</span> <span class="hljs-string">/images/logos/github.png</span>  <span class="hljs-attr">description:</span> <span class="hljs-string">面向开源及私有软件项目的托管平台。</span></code></pre><p>以上两种方式任选一种即可，建议使用第二种。</p><h2 id="子页面配置"><a class="markdownIt-Anchor" href="#子页面配置"></a> 子页面配置</h2><h3 id="创建子页面"><a class="markdownIt-Anchor" href="#创建子页面"></a> 创建子页面</h3><p>使用<code>hexo new page xxx</code>创建子页面，这里包括下面的说明都以<code>hexo new page child</code>为例。</p><h3 id="修改子页面配置文件"><a class="markdownIt-Anchor" href="#修改子页面配置文件"></a> 修改子页面配置文件</h3><p>使用上面的命令生成子页面后，打开<code>根目录/source/child/index.md</code>文件（子页面配置文件），在两个<code>---</code>之间添加一行<code>type: 'child'</code>使此配置文件生效，子页面默认使用主页的配置，子页面优先使用子页面配置文件两个<code>---</code>之间的配置，各配置项和主页的配置功能相同。</p><p>示例请看<a href="https://github.com/HCLonely/hexo-theme-webstack/tree/gh-pages/source/child/index.md">https://github.com/HCLonely/hexo-theme-webstack/tree/gh-pages/source/child/index.md</a></p><blockquote><p>由于子页面在很久之前就基本做完了，后来比较忙就鸽了，可能有些配置或 bug 给忘了，有问题请及时反馈！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 cron-job 解决 LeanCloud 因流控原因自动唤醒失败的问题</title>
      <link href="/posts/ac04080d/"/>
      <url>/posts/ac04080d/</url>
      
        <content type="html"><![CDATA[<p>Valine-admin 由于 Leancloud 流控原因，自动唤醒任务可能会失败，详情：<a href="https://forum.leancloud.cn/t/topic/22595">https://forum.leancloud.cn/t/topic/22595</a></p><p>所以这里介绍一个使用第三方计划任务网站进行定时唤醒 Valine-admin 的方法。</p><h2 id="注册cron-job帐号"><a class="markdownIt-Anchor" href="#注册cron-job帐号"></a> 注册<a href="https://cron-job.org/">cron-job</a>帐号</h2><p>注册地址：<a href="https://cron-job.org/en/signup/">https://cron-job.org/en/signup/</a></p><div class="tip inlineBlock warning">            <p>注册时的时区请选择<code>Asia/Shanghai</code></p>          </div><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/ac04080d/1.webp" alt="注册" /></p><h2 id="添加一个计划任务"><a class="markdownIt-Anchor" href="#添加一个计划任务"></a> 添加一个计划任务</h2><ol><li><p>登陆之后依次点击<code>Members</code>,<code>cronjobs</code>,<code>Create cronjob</code></p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/ac04080d/2.webp" alt="First" /></p></li><li><p>Title, Address</p><ul><li><code>Title</code>可以随便填一个</li><li><code>Address</code>填写你的云引擎环境变量的<code>ADMIN_URL</code>，也就是 Leancloud 的<code>Web 主机域名</code>。如果你用的我<a href="/posts/409d3090/">Valine 添加博主标签及评论微信、QQ 通知</a>文章里的最新版的仓库，还需要在后面加上<code>/start</code>，当然也可以不加，加上会有唤醒日志。</li></ul></li><li><p>Schedule</p><ul><li>选择<code>User-defined</code>进行自定义设置</li><li><code>Days of month</code>: 全选</li><li><code>Days of week</code>: 全选</li><li><code>Months</code>: 全选</li><li><code>Hours</code>: 你需要在哪个时间段唤醒就选择什么</li><li><code>Minutes</code>: 选择<code>0</code>,<code>20</code>,<code>40</code></li><li>按住<kbd>Ctrl</kbd>可多选</li></ul></li><li><p>Notifications</p><ul><li>可以不用修改，也可以根据自己的需要修改</li></ul></li><li><p>Common</p><ul><li>勾选<code>Save responses</code>, 保存唤醒日志</li></ul></li><li><p>点击<code>Create cronjob</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Valine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine 添加验证码、博主标签及评论微信、QQ 通知</title>
      <link href="/posts/409d3090/"/>
      <url>/posts/409d3090/</url>
      
        <content type="html"><![CDATA[<div class="tip inlineBlock success">            <p>本教程介绍了如何给 Valine 评论系统添加<code>博主</code>、<code>小伙伴</code>、 <code>访客</code>标签，添加<code>浏览器</code>及<code>操作系统图标</code>，以及评论<code>微信</code>及<code>QQ</code>通知。</p>          </div><div class="tip inlineBlock warning">            <p>建议有一定 JS 基础的用户根据本教程进行自定义修改，至少能够自己找到为什么会报错，否则不建议修改！</p>          </div><h2 id="添加标签及图标"><a class="markdownIt-Anchor" href="#添加标签及图标"></a> 添加标签及图标</h2><div class="tip inlineBlock warning">            <p>基于<a href="https://github.com/xCss/Valine">https://github.com/xCss/Valine</a>修改。</p><p>由于 1.4.0 以后 Valine 作者不再发布源码，所以这里不说如何修改了，只放出我修改好的 js 链接及使用方法。</p>          </div><div class="tip inlineBlock error">            <p>参数如何添加请查看 Demo 站源码的<a href="https://github.com/HCLonely/hexo-demo/blob/master/source/_data/butterfly.yml">butterfly.yml 文件</a>和<a href="https://github.com/HCLonely/hexo-demo/blob/master/themes/Butterfly/layout/includes/comments/valine.pug">valine.pug 文件</a></p>          </div><h3 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h3><p><a href="https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js">https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js</a></p><h3 id="与原版相比"><a class="markdownIt-Anchor" href="#与原版相比"></a> 与原版相比</h3><ul><li>添加<code>博主</code>，<code>小伙伴</code>，<code>访客</code>标签</li><li>添加<code>浏览器</code>和<code>操作系统</code>图标，需<code>fontawesomeV5</code>支持</li><li>邮箱检测更严格</li><li><code>meta placeholder</code>可自定义</li></ul><h3 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h3><div class="tip inlineBlock warning">            <p>基本方法同原版相同，请先查看<a href="https://valine.js.org/">原版使用文档</a>并配置好。</p><p>Butterfly 主题可以根据<a href="/posts/57bd67ce/#valine%E8%AF%84%E8%AE%BA%E6%B7%BB%E5%8A%A0%E5%8D%9A%E4%B8%BB%E7%AD%89%E6%A0%87%E7%AD%BE(%E4%BB%85Butterfly%E4%B8%BB%E9%A2%98)">这篇文章</a>修改，其他主题请自行修改！</p>          </div><p>本版比原版多了以下参数：</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">类型</th><th style="text-align:center">说明</th><th style="text-align:center">默认</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">tagMeta</td><td style="text-align:center">Array</td><td style="text-align:center">标签要显示的文字</td><td style="text-align:center">[“博主”,“小伙伴”,“访客”]</td><td style="text-align:center">[“博主”,“小伙伴”,“访客”]</td></tr><tr><td style="text-align:center">master</td><td style="text-align:center">Array/String</td><td style="text-align:center">md5 加密后的博主邮箱</td><td style="text-align:center">[]</td><td style="text-align:center">[“fe01ce2a7fbac8fafaed7c982a04e229”]</td></tr><tr><td style="text-align:center">friends</td><td style="text-align:center">Array</td><td style="text-align:center">md5 加密后的小伙伴邮箱</td><td style="text-align:center">[]</td><td style="text-align:center">[“fe01ce2a7fbac8fafaed7c982a04e229”]</td></tr><tr><td style="text-align:center">metaPlaceholder</td><td style="text-align:center">Object</td><td style="text-align:center">meta placeholder 内容</td><td style="text-align:center">{}</td><td style="text-align:center">{“nick”:“昵称/QQ 号”,“mail”:“邮箱(必填)”}</td></tr></tbody></table><h3 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h3><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/409d3090/bz.webp" alt="博主" /><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/409d3090/xhb.webp" alt="小伙伴" /><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/409d3090/fk.webp" alt="访客" /></p><h2 id="评论微信通知及-qq-通知"><a class="markdownIt-Anchor" href="#评论微信通知及-qq-通知"></a> 评论微信通知及 QQ 通知</h2><div class="tip inlineBlock warning">            <p>基于<a href="https://github.com/DesertsP/Valine-Admin">https://github.com/DesertsP/Valine-Admin</a>修改。</p><p>修改方法不在多说，直接使用我的源码即可，如果你有一定的 NodeJS 知识，可以参考我的源码自行修改。</p>          </div><div class="tip inlineBlock error">            <p>注意！由于 leancloud 的原因，自动唤醒任务可能会失败！</p><p>详情：<a href="https://forum.leancloud.cn/t/topic/22595">https://forum.leancloud.cn/t/topic/22595</a></p><p>解决办法: <a href="https://blog.hclonely.com/posts/ac04080d/">https://blog.hclonely.com/posts/ac04080d/</a></p>          </div><h3 id="仓库地址"><a class="markdownIt-Anchor" href="#仓库地址"></a> 仓库地址</h3><p><a href="https://github.com/HCLonely/Valine-Admin.git">https://github.com/HCLonely/Valine-Admin.git</a></p><h3 id="与原版相比-2"><a class="markdownIt-Anchor" href="#与原版相比-2"></a> 与原版相比</h3><ul><li>添加微信提醒功能</li><li>添加 QQ 提醒功能</li><li>添加禁止邮件提醒功能</li></ul><h3 id="使用方法-2"><a class="markdownIt-Anchor" href="#使用方法-2"></a> 使用方法</h3><div class="tip inlineBlock warning">            <p>基本方法同原版相同，请先查看<a href="https://github.com/DesertsP/Valine-Admin">原版使用文档</a>并配置好。</p>          </div><p>本版比原版多了以下参数：</p><table><thead><tr><th>变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>SERVER_KEY</td><td>SCUxxxxxxxx</td><td>[可选]<a href="http://sc.ftqq.com/">Server酱</a> SCKEY 用于微信通知</td></tr><tr><td>SERVER_TURBO_KEY</td><td>SCTxxxxxxxx</td><td>[可选]<a href="https://sct.ftqq.com/">Server酱·Turbo版</a> SendKey 用于微信通知</td></tr><tr><td>SERVER_TURBO_MD</td><td>true</td><td>[可选]使用<a href="https://sct.ftqq.com/">Server酱·Turbo版</a>通知时是否使用 MD 模板，默认为<code>false</code></td></tr><tr><td>QMSG_KEY</td><td>xxxxxxxx</td><td>[可选]<a href="https://qmsg.zendee.cn/">Qmsg</a> key 用于 QQ 通知</td></tr><tr><td>QQ_SHAKE(已失效)</td><td>true</td><td>[可选]QQ 通知时发送<code>戳一戳</code></td></tr><tr><td>DISABLE_EMAIL</td><td>true</td><td>[可选]禁止邮件通知<strong>博主</strong>，@仍然会提醒</td></tr><tr><td>TEMPLATE_NAME</td><td>rainbow</td><td>[可选]<code>rainbow</code>或<code>default</code>邮件通知模板</td></tr></tbody></table><h3 id="邮件通知模板模板变量与原版不同"><a class="markdownIt-Anchor" href="#邮件通知模板模板变量与原版不同"></a> 邮件通知模板(模板变量与原版不同)</h3><p>邮件通知模板在云引擎环境变量中设定，可自定义通知邮件标题及内容模板。</p><table><thead><tr><th>环境变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>MAIL_SUBJECT</td><td><code>$&#123;PARENT_NICK&#125;，您在$&#123;SITE_NAME&#125;上的评论收到了回复</code></td><td>[可选]@通知邮件主题（标题）模板</td></tr><tr><td>MAIL_TEMPLATE</td><td>见下文</td><td>[可选]@通知邮件内容模板</td></tr><tr><td>MAIL_SUBJECT_ADMIN</td><td><code>$&#123;SITE_NAME&#125;上有新评论了</code></td><td>[可选]博主邮件通知主题模板</td></tr><tr><td>MAIL_TEMPLATE_ADMIN</td><td>见下文</td><td>[可选]博主邮件通知内容模板</td></tr></tbody></table><p>邮件通知包含两种，分别是被@通知和博主通知，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。</p><p>默认被@通知邮件内容模板如下：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 99.8%;height:99.8% "</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;"</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #ffffff;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"&lt;%=siteUrl%&gt;"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">%=siteName%</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的留言有新回复啦！ <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"margin:40px auto;width:90%"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=pname%</span>&gt;</span> 同学，您曾在文章上发表评论：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%-ptext%</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=name%</span>&gt;</span> 给您的回复如下：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%-text%</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击 <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"&lt;%=url%&gt;"</span>&gt;</span>查看回复的完整內容 <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>，欢迎再次光临 <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"&lt;%=siteUrl%&gt;"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">%=siteName%</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span><span class="css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>@通知模板中的可用变量如下（注，这是邮件模板变量，请勿与云引擎环境变量混淆）：</p><table><thead><tr><th>模板变量</th><th>说明</th></tr></thead><tbody><tr><td>&lt;%=siteName%&gt;</td><td>博客名称</td></tr><tr><td>&lt;%=siteUrl%&gt;</td><td>博客首页地址</td></tr><tr><td>&lt;%=url%&gt;</td><td>文章地址（完整路径）</td></tr><tr><td>&lt;%=pname%&gt;</td><td>收件人昵称（被@者，父级评论人）</td></tr><tr><td>&lt;%-ptext%&gt;</td><td>父级评论内容</td></tr><tr><td>&lt;%=name%&gt;</td><td>新评论者昵称</td></tr><tr><td>&lt;%-text%&gt;</td><td>新评论内容</td></tr></tbody></table><p>默认博主通知邮件内容模板如下：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"> <span class="hljs-selector-class">.wrap</span> <span class="hljs-selector-tag">span</span> &#123; <span class="hljs-attribute">display</span>: inline-block; &#125; <span class="hljs-selector-class">.w260</span>&#123; <span class="hljs-attribute">width</span>: <span class="hljs-number">260px</span>;&#125; <span class="hljs-selector-class">.w20</span>&#123; <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;&#125; <span class="hljs-selector-class">.wauto</span>&#123; <span class="hljs-attribute">width</span>: auto;&#125; </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 99.8%;height:99.8% "</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;"</span>&gt;</span>您的<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #ffffff;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"&lt;%=siteUrl%&gt;"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">%=siteName%</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上有新的评论啦！ <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"margin:40px auto;width:90%"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=name%</span>&gt;</span> 发表评论：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%-text%</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"&lt;%=url%&gt;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>[查看评论]<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span><span class="css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>博主通知邮件模板中的可用变量与@通知中的基本一致，<strong><code>&lt;%=pname%&gt;</code>和 <code>&lt;%-ptext%&gt;</code>变量不再可用。</strong></p><h3 id="示例-2"><a class="markdownIt-Anchor" href="#示例-2"></a> 示例</h3><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/409d3090/wechat.webp" alt="微信" /><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/409d3090/qq.webp" alt="QQ" /></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Valine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Cloud Studio 在线搭建、编辑、部署 Hexo</title>
      <link href="/posts/a7676fbe/"/>
      <url>/posts/a7676fbe/</url>
      
        <content type="html"><![CDATA[<h2 id="创建工作空间"><a class="markdownIt-Anchor" href="#创建工作空间"></a> 创建工作空间</h2><ol><li><p>前往<a href="https://coding.net/">Coding</a>注册一个帐号</p></li><li><p>登录后点击右上角的<code>Cloud Studio</code></p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/a7676fbe/1.webp" alt="Cloud Studio" /></p></li><li><p>点击设置，将 ssh 公钥添加到<code>Coding</code>或<code>Github</code>或者其他的 Git 仓库的个人公钥列表</p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/a7676fbe/2.webp" alt="SSH" /></p></li><li><p>点击工作空间，新建工作空间</p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/a7676fbe/3.webp" alt="工作空间" /></p></li></ol><h2 id="从零开始搭建-hexo"><a class="markdownIt-Anchor" href="#从零开始搭建-hexo"></a> 从零开始搭建 Hexo</h2><ol><li><p><code>工作空间名称</code>能自己看懂就行，<code>运行环境</code>选择<code>预置环境</code>、<code>Node.js</code>，<code>代码来源</code>选<code>空</code>，然后创建</p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/a7676fbe/4.webp" alt="从零开始" /></p></li><li><p>点击刚刚创建的工作空间</p></li><li><p>按下键盘<kbd>Ctrl</kbd>+<kbd>~</kbd>打开终端</p></li><li><p>按照官方教程依次输入以下命令就可以了</p><pre class="highlight"><code class="shell">npm install hexo-cli -ghexo init blogcd blognpm install</code></pre></li><li><p>到这里一个博客就基本搭建完成了，其他的去看<a href="https://hexo.io/zh-cn/">Hexo 官方文档</a>就可以了</p></li></ol><h2 id="已经搭建好了-hexo"><a class="markdownIt-Anchor" href="#已经搭建好了-hexo"></a> 已经搭建好了 Hexo</h2><ol><li><p><code>工作空间名称</code>能自己看懂就行，<code>运行环境</code>选择<code>预置环境</code>、<code>Node.js</code>，<code>代码来源</code>选<code>仓库</code>，并在下面输入你源码仓库的<code>SSH</code>地址，然后创建</p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/a7676fbe/5.webp" alt="我已经搭建好了" /></p></li><li><p>点击刚刚创建的工作空间，它会自动克隆你的源码，你只需要运行<code>npm install</code>命令安装所需依赖就可以了</p></li></ol><h2 id="预览"><a class="markdownIt-Anchor" href="#预览"></a> 预览</h2><p>我们在本地只需运行<code>hexo server</code>就可以在<code>http://localhost:4000</code>预览了，不过用<code>Cloud Studio</code>的话运行<code>hexo server</code>命令后，需要<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd>打开命令面板，输入<code>preview</code>,选择<code>Preview: Open Preview Tab</code>输入端口号（默认 4000）回车就可以了</p><h2 id="插件可选"><a class="markdownIt-Anchor" href="#插件可选"></a> 插件（可选）</h2><blockquote><p>如果你用过 Vscode, 下面可以不用看了，安装你喜欢的插件就可以了</p></blockquote><p>点击左边的<code>Extensions</code>可以安装扩展，这里推荐几个适用于编辑 Hexo 的插件</p><h3 id="javascript-支持"><a class="markdownIt-Anchor" href="#javascript-支持"></a> JavaScript 支持</h3><p>在<code>欢迎使用</code>页面点击安装对<code>JavaScript</code>的支持，右下角会有弹窗，确定即可</p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/a7676fbe/6.webp" alt="Extensions" /></p><h3 id="markdown-preview-enhanced"><a class="markdownIt-Anchor" href="#markdown-preview-enhanced"></a> Markdown Preview Enhanced</h3><p>Markdown 预览插件</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Cloud Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给你的网页添加一个 moc3 格式的 Live2d 模型</title>
      <link href="/posts/8a7f7919/"/>
      <url>/posts/8a7f7919/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><blockquote><p>之前搞网页 Live2d 模型的时候在网上找了很多文章，但大部分都只支持<code>moc</code>格式的模型，不支持<code>moc3</code>格式的模型。</p></blockquote><blockquote><p>如果你的模型是<code>moc</code>格式，请参考<a href="https://blog.hclonely.com/posts/e1f9f17c/">给网页添加一个 Live2D 看板娘（前端）</a></p></blockquote><blockquote><p>最近在<a href="https://github.com/">Github</a>上看到这个项目<a href="https://github.com/Yukariin/AzurLaneL2DViewer">AzurLaneL2DViewer</a>, 根据这个项目做成了 JS 库。</p></blockquote><div class="tip inlineBlock warning">            <p>使用前请查看<code>live2dcubismcore</code>的<a href="https://www.live2d.com/download/cubism-sdk/download-web/">许可协议</a></p>          </div><div id="badge-container-HCLonely-Live2dV3-021efa5" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-Live2dV3-021efa5", "HCLonely", "Live2dV3", "021efa5", false);</script><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ol><li><p>在<code>&lt;body&gt;</code>标签内添加如下内容：</p><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!-- 用于存放Live2d的元素，可自定义 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Canvas"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"position: fixed; right: 10px; bottom: 10px;z-index: 99999999"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"L2dCanvas"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></li><li><p>在<code>&lt;/body&gt;</code>之前添加以下内容：</p><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!------ 位置可自定义 ------&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Canvas"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"position: fixed; right: 10px; bottom: 10px;z-index: 99999999"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"L2dCanvas"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-comment">&lt;!------ 依赖 JS ------&gt;</span><span class="hljs-comment">&lt;!---- 可选 ----&gt;</span><span class="hljs-comment">&lt;!-- 兼容低版本浏览器 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js"</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- 音频播放兼容 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/howler@2.1.3/dist/howler.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!---- 必需 ----&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/pixi.js@4.6.1/dist/pixi.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- live2dv3.js --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/live2dv3@1.2.2/live2dv3.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!------ 加载Live2d模型 ------&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;    <span class="hljs-keyword">new</span> l2dViewer(&#123;        <span class="hljs-attr">el</span>: <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'L2dCanvas'</span>), <span class="hljs-comment">// 要添加Live2d的元素, 支持dom选择器和jq选择器</span>        <span class="hljs-attr">basePath</span>: <span class="hljs-string">'https://cdn.jsdelivr.net/gh/HCLonely/Live2dV3/assets'</span>, <span class="hljs-comment">// 模型根目录</span>        <span class="hljs-attr">modelName</span>: <span class="hljs-string">'biaoqiang_3'</span>, <span class="hljs-comment">// 模型名称</span>        <span class="hljs-attr">sounds</span>: [ <span class="hljs-comment">// 触摸播放声音</span>            <span class="hljs-string">'sounds/demo.mp3'</span>, <span class="hljs-comment">// 相对路径是相对于模型文件夹</span>            <span class="hljs-string">'https://cdn.jsdelivr.net/npm/live2dv3@latest/assets/biaoqiang_3/sounds/demo.mp3'</span> <span class="hljs-comment">// 也可以是网址</span>        ]    &#125;)&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></li></ol><h2 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h2><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">类型</th><th style="text-align:center">描述</th><th style="text-align:center">默认</th></tr></thead><tbody><tr><td style="text-align:center"><code>el</code></td><td style="text-align:center">[必需] DOM 对象或 jQuery 对象</td><td style="text-align:center">要挂载 Live2d 模型的元素, 支持 DOM 选择器和 jQuery 选择器，例：<code>document.getElementById('L2dCanvas')</code>或<code>document.querySelector('#L2dCanvas')</code>或<code>$('#L2dCanvas')</code></td><td style="text-align:center"><code>null</code></td></tr><tr><td style="text-align:center"><code>basePath</code></td><td style="text-align:center">[必需] String</td><td style="text-align:center">模型根目录</td><td style="text-align:center"><code>null</code></td></tr><tr><td style="text-align:center"><code>modelName</code></td><td style="text-align:center">[必需] String</td><td style="text-align:center">模型目录</td><td style="text-align:center"><code>null</code></td></tr><tr><td style="text-align:center"><code>width</code></td><td style="text-align:center">[可选] Number</td><td style="text-align:center">Canvas 宽度，单位: <code>px</code></td><td style="text-align:center"><code>500</code></td></tr><tr><td style="text-align:center"><code>height</code></td><td style="text-align:center">[可选] Number</td><td style="text-align:center">Canvas 高度，单位: <code>px</code></td><td style="text-align:center"><code>300</code></td></tr><tr><td style="text-align:center"><code>sizeLimit</code></td><td style="text-align:center">[可选] Boolean</td><td style="text-align:center">当窗口大小小于设置的宽或高时不加载模型</td><td style="text-align:center"><code>false</code></td></tr><tr><td style="text-align:center"><code>mobileLimit</code></td><td style="text-align:center">[可选] Boolean</td><td style="text-align:center">移动端不加载模型</td><td style="text-align:center"><code>false</code></td></tr><tr><td style="text-align:center"><code>sounds</code></td><td style="text-align:center">[可选] Array</td><td style="text-align:center">触摸播放声音， 留空则不播放</td><td style="text-align:center"><code>null</code></td></tr></tbody></table><h2 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h2><h3 id="loadmodelmodelname"><a class="markdownIt-Anchor" href="#loadmodelmodelname"></a> loadModel(<code>modelName</code>?)</h3><p>重新加载/更换模型</p><h2 id="demo"><a class="markdownIt-Anchor" href="#demo"></a> Demo</h2><p><a href="https://live2dv3demo.hclonely.com/">https://live2dv3demo.hclonely.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2d </tag>
            
            <tag> 看板娘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-tag-steamgame 插件</title>
      <link href="/posts/94295339/"/>
      <url>/posts/94295339/</url>
      
        <content type="html"><![CDATA[<p><img src="https://nodei.co/npm/hexo-tag-steamgame.png?downloads=true&amp;downloadRank=true&amp;stars=true" alt="" /></p><div class="badge"></div><p><img src="https://img.shields.io/github/stars/HClonely/hexo-tag-steamgame?style=flat" alt="GitHub stars" /><img src="https://img.shields.io/github/languages/count/HCLonely/hexo-tag-steamgame" alt="GitHub language count" /><img src="https://img.shields.io/github/languages/top/HClonely/hexo-tag-steamgame" alt="GitHub top language" /><img src="https://img.shields.io/github/repo-size/HCLonely/hexo-tag-steamgame" alt="GitHub repo size" /><img src="https://img.shields.io/github/languages/code-size/HClonely/hexo-tag-steamgame" alt="GitHub code size in bytes" /><img src="https://img.shields.io/bundlephobia/min/hexo-tag-steamgame" alt="npm bundle size" /><img src="https://img.shields.io/npm/dw/hexo-tag-steamgame" alt="npm" /><img src="https://img.shields.io/github/issues/HClonely/hexo-tag-steamgame" alt="GitHub issues" /><img src="https://img.shields.io/github/commit-activity/m/HClonely/hexo-tag-steamgame" alt="GitHub commit activity" /><img src="https://img.shields.io/github/last-commit/HClonely/hexo-tag-steamgame" alt="GitHub last commit" /><img src="https://img.shields.io/npm/v/hexo-tag-steamgame" alt="npm" /><img src="https://img.shields.io/npm/l/hexo-tag-steamgame" alt="NPM" /></p><div id="badge-container-HCLonely-hexo-tag-steamgame-eb96928" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-hexo-tag-steamgame-eb96928", "HCLonely", "hexo-tag-steamgame", "eb96928", false);</script><p>用于在 Hexo 博客中嵌入 steam 游戏。</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><pre class="highlight"><code class="shell">npm install hexo-tag-steamgame --save</code></pre><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ul><li>嵌入单个游戏</li></ul><pre class="highlight"><code class="Nunjucks">&#123;% steamgame appid description %&#125;```* 批量嵌入游戏```Nunjucks&#123;% steamgames %&#125;appidappidappidappidappidappid&#123;% endsteamgames %&#125;</code></pre><h2 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h2><pre class="highlight"><code class="code">appid: Steam 游戏 id.description(可选): 用于替换默认游戏简介。</code></pre><h2 id="demo"><a class="markdownIt-Anchor" href="#demo"></a> Demo</h2><pre class="highlight"><code class="Nunjucks">&#123;% steamgame 1057090 %&#125;```&#123;% steamgame 1057090 %&#125;```Nunjucks&#123;% steamgame 1057090 "I like it." %&#125;```&#123;% steamgame 1057090 "I like it." %&#125;```Nunjucks&#123;% steamgames %&#125;2615701057090&#123;% endsteamgames %&#125;</code></pre><iframe src="https://store.steampowered.com/widget/261570/" frameborder="0" width="100%" height="190"></iframe><iframe src="https://store.steampowered.com/widget/1057090/" frameborder="0" width="100%" height="190"></iframe><h2 id="license"><a class="markdownIt-Anchor" href="#license"></a> License</h2><p><a href="https://github.com/HCLonely/hexo-tag-steamgame/blob/master/LICENSE">MIT</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> Hexo </tag>
            
            <tag> steam </tag>
            
            <tag> tag </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-online-server 在线编辑发布文章插件</title>
      <link href="/posts/ebe9edfc/"/>
      <url>/posts/ebe9edfc/</url>
      
        <content type="html"><![CDATA[<div class="tip inlineBlock error">            <p>本项目不再维护，在线编辑建议使用<a href="https://github.com/cdr/code-server">code-server</a>!</p>          </div><div id="badge-container-HCLonely-hexo-online-server-079d0a2" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-hexo-online-server-079d0a2", "HCLonely", "hexo-online-server", "079d0a2", false);</script><p>本插件已实现以下功能:</p><ul><li>在线新建，编辑，删除 post 和 page(默认路径)</li><li><code>hexo clean</code>,<code>hexo server</code>,<code>hexo deploy</code></li><li>源码同步</li></ul><h2 id="需求"><a class="markdownIt-Anchor" href="#需求"></a> 需求</h2><ul><li><a href="http://nodejs.org/">Node.js</a> &gt;= 10.0</li><li><a href="https://hexo.io/">Hexo</a> 4.X(只测试了 4.X)</li><li><a href="http://git-scm.com/">Git</a></li><li>mac 系统<code>close server</code>功能无法使用(我没有 mac 设备，无法测试)</li></ul><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><ul><li>将<strong>源码</strong>托管到 Git 仓库(建议使用私人仓库, 只在本地使用可无视)</li><li>配置好 git, 确认可以使用以下默认命令进行同步:<ul><li><code>git pull</code></li><li><code>git add --all .</code></li><li><code>git commit -m &quot;...&quot;</code></li><li><code>git push</code></li></ul></li></ul><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><pre class="highlight"><code class="shell">npm install hexo-online-server</code></pre><h3 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h3><ol><li><p>新建<code>config.json</code>文件, 内容如下(注释删掉):</p><pre class="highlight"><code class="json">&#123;    <span class="hljs-attr">"indexPath"</span>:<span class="hljs-string">"/"</span>,<span class="hljs-comment">// 自定义主页路径, 以"/"结尾</span>    <span class="hljs-attr">"port"</span>: <span class="hljs-number">4001</span>,<span class="hljs-comment">// http监听端口</span>    <span class="hljs-attr">"wsPort"</span>: <span class="hljs-number">4002</span>,<span class="hljs-comment">//websocke监听端口</span>    <span class="hljs-attr">"secret"</span>:<span class="hljs-string">""</span>,<span class="hljs-comment">//用来签名session ID cookie,https://www.npmjs.com/package/express-session#secret</span>    <span class="hljs-attr">"user"</span>:<span class="hljs-string">""</span>,<span class="hljs-comment">//登录用户名</span>    <span class="hljs-attr">"passwordHash"</span>: <span class="hljs-string">""</span>,<span class="hljs-comment">//密码加密后的字符串</span>    <span class="hljs-attr">"autoSave"</span>: <span class="hljs-number">300000</span>,<span class="hljs-comment">//编辑文章时自动保存时间, 单位:ms, 0为不自动保存</span>    <span class="hljs-attr">"noticeUrl"</span>:<span class="hljs-string">""</span>,<span class="hljs-comment">//当有用户登录时向`此链接+message`发送get请求，留空则不通知</span>    <span class="hljs-attr">"pull"</span>:[<span class="hljs-string">"git pull"</span>],<span class="hljs-comment">//从git同步命令</span>    <span class="hljs-attr">"push"</span>:[<span class="hljs-string">"git add --all ."</span>,<span class="hljs-string">"git commit -m 'Update at &#123;time&#125;'"</span>,<span class="hljs-string">"git push"</span>],<span class="hljs-comment">//同步到git命令</span>    <span class="hljs-attr">"ssl"</span>:<span class="hljs-literal">false</span>,<span class="hljs-comment">//是否启用SSL</span>    <span class="hljs-attr">"private"</span>:&#123;<span class="hljs-comment">//启用ssl需配置此项</span>        <span class="hljs-attr">"key"</span>:<span class="hljs-string">""</span>,<span class="hljs-comment">//SSL证书key路径</span>        <span class="hljs-attr">"crt"</span>:<span class="hljs-string">""</span><span class="hljs-comment">//SSL证书路径</span>    &#125;&#125;</code></pre><p><strong>注意把后面的注释删掉！</strong></p></li><li><p>把<code>config.json</code>文件保存到你的博客目录以外的地方, 在<code>_config.yml</code>中添加:</p><pre class="highlight"><code class="yml"><span class="hljs-attr">onlineConfigPath:</span> <span class="hljs-string">'../config.json'</span> <span class="hljs-comment">#`config.json`文件路径</span></code></pre></li><li><p>使用以下命令获取加密密码, 将得到的<code>passwordHash</code>添加到<code>config.json</code>文件:</p><pre class="highlight"><code class="shell"><span class="hljs-meta">&gt;</span><span class="bash"> hexo bcrypt 你的密码</span></code></pre></li><li><p>运行<code>hexo online</code>, 浏览器打开<code>http://localhost:4001/</code></p></li></ol><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><h3 id="源码同步"><a class="markdownIt-Anchor" href="#源码同步"></a> 源码同步</h3><ul><li>如果你只在本地或只在服务器使用，可以选择不进行同步，</li><li>如果你本地和服务器都使用，每次编辑前请<code>从git同步</code>，编辑完成后<code>同步到git</code></li></ul><h3 id="部署"><a class="markdownIt-Anchor" href="#部署"></a> 部署</h3><p>如果你使用的自动部署，直接将源码同步到 git 仓库即可，不用<code>hexo deploy</code></p><h2 id="license"><a class="markdownIt-Anchor" href="#license"></a> LICENSE</h2><p><a href="https://github.com/HCLonely/hexo-online-server/blob/master/LICENSE">MIT</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> Hexo </tag>
            
            <tag> online </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 博客美化</title>
      <link href="/posts/57bd67ce/"/>
      <url>/posts/57bd67ce/</url>
      
        <content type="html"><![CDATA[<div class="tip inlineBlock warning">            <p>注意，本文方法主要用于 Butterfly 主题，其他主题需要有一定的前端知识 ！！！<br />DIY 前请先备份！！！</p>          </div><div class="tip inlineBlock error">            <p>本文基于 Butterfly 主题 3.0.0 之前的版本修改！<br />3.0.0 版本之后的部分内容可能需要调整！</p>          </div><div class="tip inlineBlock error">            <p>对前端及自己使用的主题不太了解的话建议不要随意修改！</p>          </div><div class="tip inlineBlock success">            <p>本文介绍的所有修改效果都可以在<a href="https://demo.hclonely.com">Demo 网站</a>中查看！<br />如果修改过程中出现问题请先查看<a href="https://github.com/HCLonely/hexo-demo">Demo 网站源码</a>对比一下有没有错误！</p>          </div><h2 id="pixiv-日榜"><a class="markdownIt-Anchor" href="#pixiv-日榜"></a> Pixiv 日榜</h2><h3 id="butterfly-主题"><a class="markdownIt-Anchor" href="#butterfly-主题"></a> Butterfly 主题</h3><ol><li><p>在<code>themes\Butterfly\layout\includes\widget</code>文件夹新建<code>card_pixiv.pug</code>文件，文件内容如下：</p><pre class="highlight"><code class="pug">.card-widget.card-pixiv  .card-content    .item-headline      i.fa.fa-image(aria-hidden=&quot;true&quot;)      span= _p('aside.card_pixiv')    iframe(src=&quot;https://cloud.mokeyjay.com/pixiv&quot; frameborder=&quot;0&quot; style=&quot;width:99%;height:380px;margin:0;&quot;)</code></pre><blockquote><p><code>https://cloud.mokeyjay.com/pixiv</code>使用的是<a href="https://www.mokeyjay.com/">超能小紫</a>提供的服务，也可以自行搭建，搭建方式请看<a href="https://www.mokeyjay.com/archives/1063">这里</a></p></blockquote></li><li><p>编辑<code>themes\Butterfly\layout\includes\widget\index.pug</code>文件，在你想要显示的位置插入以下代码：</p><pre class="highlight"><code class="pug">if theme.aside.card_pixiv  include ./card_pixiv.pug</code></pre></li><li><p>编辑<code>butterfly.yml</code>文件，在<code>card_webinfo</code>下面添加一行<code>card_pixiv: true</code></p></li><li><p>编辑<code>themes\Butterfly\languages\zh-CN.yml</code>文件(请根据你的网站语言选择)，找到<code>card_announcement: 公告</code>, 在下面添加一行<code>card_pixiv: Pixiv日榜Top50</code>(后面的文本可自定义)</p></li><li><p>如果不想显示，直接把<code>butterfly.yml</code>文件的<code>card_pixiv: true</code>改为<code>card_pixiv: false</code>即可</p></li></ol><h3 id="其他主题"><a class="markdownIt-Anchor" href="#其他主题"></a> 其他主题</h3><p>将以下内容插入到需要显示的地方：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cloud.mokeyjay.com/pixiv"</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width:100%;height:380px;margin:0;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></code></pre><h2 id="访客地图"><a class="markdownIt-Anchor" href="#访客地图"></a> 访客地图</h2><h3 id="butterfly-主题-2"><a class="markdownIt-Anchor" href="#butterfly-主题-2"></a> Butterfly 主题</h3><ol><li><p>前往<a href="https://clustrmaps.com/">clustrmaps</a>网站注册一个帐号</p></li><li><p>找到<code>Free Tools</code>下面的<code>Website Widget</code>, 点击<code>Get Map Widget</code></p></li><li><p>输入你的博客网址，点击<code>Next</code></p></li><li><p>根据你自己的喜好选择样式<code>Map widget</code>或<code>Globe Widget</code></p></li><li><p>找到如下代码，记住 src(<code>******</code>的部分):</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"clstr_globe"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"**********************"</span>&gt;</span></code></pre></li><li><p>在<code>themes\Butterfly\layout\includes\widget</code>文件夹新建<code>card_map.pug</code>文件，文件内容如下：</p><pre class="highlight"><code class="pug">.card-widget.card-map  .card-content    .item-headline      i.fas.fa-globe-asia(aria-hidden=&quot;true&quot;)      span= _p('aside.card_map')    //- 下面这行适用于3D地图(Globe Widget)    script#clstr_globe(type=&quot;text/javascript&quot; defer=&quot;defer&quot; src=&quot;******************&quot;)    //- 下面这行适用于平面地图(Map Widget)    script#clustrmaps(type=&quot;text/javascript&quot; defer=&quot;defer&quot; src=&quot;******************&quot;)</code></pre><blockquote><p><code>******</code>部分填写上面的 src, 3D 地图和平面地图任选一个，不用的把代码删掉</p></blockquote></li><li><p>编辑<code>themes\Butterfly\layout\includes\widget\index.pug</code>文件，在你想要显示的位置插入以下代码：</p><pre class="highlight"><code class="pug">if theme.aside.card_map  include ./card_map.pug</code></pre></li><li><p>编辑<code>butterfly.yml</code>文件，在<code>card_webinfo</code>下面添加一行<code>card_map: true</code></p></li><li><p>编辑<code>themes\Butterfly\languages\zh-CN.yml</code>文件(请根据你的网站语言选择)，找到<code>card_announcement: 公告</code>, 在下面添加一行<code>card_map: 访客地图</code>(后面的文本可自定义)</p></li><li><p>如果不想显示，直接把<code>butterfly.yml</code>文件的<code>card_map: true</code>改为<code>card_map: false</code>即可</p></li></ol><h3 id="其他主题-2"><a class="markdownIt-Anchor" href="#其他主题-2"></a> 其他主题</h3><p>将上面第 5 步中的代码插入到需要显示的地方。</p><h2 id="文章日历"><a class="markdownIt-Anchor" href="#文章日历"></a> 文章日历</h2><div class="tip inlineBlock warning">            <p>本方法只适用于 Butterfly 主题！</p>          </div><ol><li><p>安装<code>hexo-generator-calendar</code>插件</p><pre class="highlight"><code class="shell">npm install --save git://github.com/howiefh/hexo-generator-calendar.git</code></pre></li><li><p>下载<code>calendar.js</code>和<code>languages.js</code>文件，保存到<code>themes\Butterfly\source\js</code>目录</p><ul><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/calendar.js">calendar.js</a></li><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/languages.js">languages.js</a></li></ul></li><li><p>编辑<code>calendar.js</code>文件，在文件最后<code>&#125;(jQuery));</code>之前添加:</p><pre class="highlight"><code class="javascript">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    $(<span class="hljs-string">'#calendar'</span>).aCalendar(<span class="hljs-string">'zh-CN'</span>);<span class="hljs-comment">//'zh-CN'请根据自己博客的语言选择</span>&#125;);</code></pre></li><li><p>编辑<code>butterfly.yml</code>文件, 以下两个你<code>butterfly.yml</code>文件里有哪个就用那个，不要都用！</p><ul><li>在<code>CDN_USE-&gt;js</code>下面添加如下内容：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-string">/js/calendar.js</span><span class="hljs-bullet">-</span> <span class="hljs-string">/js/languages.js</span></code></pre><ul><li>在<code>inject-&gt;bottom</code>下面添加如下内容：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-string">&lt;script</span> <span class="hljs-string">src="/js/calendar.js"&gt;&lt;/script&gt;</span><span class="hljs-bullet">-</span> <span class="hljs-string">&lt;script</span> <span class="hljs-string">src="/js/languages.js"&gt;&lt;/script&gt;</span></code></pre></li><li><p>下载<a href="https://github.com/HCLonely/images/raw/master/others/calendar.styl">calendar.styl</a>文件，保存到<code>themes\Butterfly\source\css\_layout</code>目录</p></li><li><p>在<code>themes\Butterfly\layout\includes\widget</code>文件夹新建<code>card_calendar.pug</code>文件，文件内容如下：</p><pre class="highlight"><code class="pug">.card-widget.card-calendar  .card-content    .item-headline      i.far.fa-calendar-alt(aria-hidden=&quot;true&quot;)      span= _p('aside.card_calendar')    div.widget-wrap    div#calendar.widget</code></pre></li><li><p>编辑<code>themes\Butterfly\layout\includes\widget\index.pug</code>文件，在你想要显示的位置插入以下代码：</p><pre class="highlight"><code class="pug">if theme.aside.card_calendar  include ./card_calendar.pug</code></pre></li><li><p>编辑<code>butterfly.yml</code>文件，在<code>card_webinfo</code>下面添加一行<code>card_calendar: true</code></p></li><li><p>编辑<code>themes\Butterfly\languages\zh-CN.yml</code>文件(请根据你的网站语言选择)，找到<code>card_announcement: 公告</code>, 在下面添加一行<code>card_calendar: 文章日历</code>(后面的文本可自定义)</p></li><li><p>如果不想显示，直接把<code>butterfly.yml</code>文件的<code>card_calendar: true</code>改为<code>card_calendar: false</code>即可</p></li></ol><h2 id="投票系统"><a class="markdownIt-Anchor" href="#投票系统"></a> 投票系统</h2><h3 id="butterfly-主题-3"><a class="markdownIt-Anchor" href="#butterfly-主题-3"></a> Butterfly 主题</h3><ol><li><p>前往<a href="https://widgetpack.com/">widgetpack</a>注册账号</p></li><li><p>登陆后在点击左侧侧边栏<code>Rating</code>-&gt;<code>Install</code>, 你会看到如下代码，记住<code>id</code>:</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"wpac-rating"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript">wpac_init = <span class="hljs-built_in">window</span>.wpac_init || [];wpac_init.push(&#123;<span class="hljs-attr">widget</span>: <span class="hljs-string">'Rating'</span>, <span class="hljs-attr">id</span>: *****&#125;);(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">if</span> (<span class="hljs-string">'WIDGETPACK_LOADED'</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">window</span>) <span class="hljs-keyword">return</span>;    WIDGETPACK_LOADED = <span class="hljs-literal">true</span>;    <span class="hljs-keyword">var</span> mc = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'script'</span>);    mc.type = <span class="hljs-string">'text/javascript'</span>;    mc.async = <span class="hljs-literal">true</span>;    mc.src = <span class="hljs-string">'https://embed.widgetpack.com/widget.js'</span>;    <span class="hljs-keyword">var</span> s = <span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">'script'</span>)[<span class="hljs-number">0</span>]; s.parentNode.insertBefore(mc, s.nextSibling);&#125;)();</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://widgetpack.com"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"wpac-cr"</span>&gt;</span>Star Rating WIDGET PACK<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></li><li><p>在<code>博客根目录/themes/Butterfly/layout/includes/post/</code>目录内新建文件<code>rate.pug</code>, 内容如下：</p><pre class="highlight"><code class="pug">#wpac-ratingscript.  wpac_init = window.wpac_init || [];  wpac_init.push(&#123;widget: 'Rating', id: #&#123;theme.rate.id&#125;&#125;);  (function() &#123;    if ('WIDGETPACK_LOADED' in window) return;    WIDGETPACK_LOADED = true;    var mc = document.createElement('script');    mc.type = 'text/javascript';    mc.async = true;    mc.src = '//embed.widgetpack.com/widget.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling);  &#125;)();style.  #wpac-rating &#123;    margin-top: 20px;    text-align: center;  &#125;</code></pre></li><li><p>编辑<code>博客根目录/themes/Butterfly/layout/post.pug</code>文件，在<code>!=partial('includes/post/reward', &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</code>下方添加：</p><pre class="highlight"><code class="pug">if theme.rate.enable  include includes/post/rate.pug</code></pre><p><strong>注意缩进<code>if</code>与上面的<code>if</code>对齐</strong></p></li><li><p>在<code>Butterfly.yml</code>文件内添加：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">rate:</span>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">id:</span> <span class="hljs-comment">#上面记住的id</span></code></pre></li></ol><h3 id="其他主题-3"><a class="markdownIt-Anchor" href="#其他主题-3"></a> 其他主题</h3><p>将第 2 步生成的代码插入到需要显示的位置。</p><h2 id="加载中动画"><a class="markdownIt-Anchor" href="#加载中动画"></a> 加载中动画</h2><h3 id="butterfly-主题-4"><a class="markdownIt-Anchor" href="#butterfly-主题-4"></a> Butterfly 主题</h3><p>更新到最新版即可。</p><h3 id="其他主题-4"><a class="markdownIt-Anchor" href="#其他主题-4"></a> 其他主题</h3><ol><li><p>将以下内容添加到<code>&lt;head&gt;&lt;/head&gt;</code>标签内：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/loading.min.css"</span>&gt;</span></code></pre></li><li><p>将以下内容添加到<code>&lt;body&gt;</code>标签后面：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"loading-box"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"loading-left-bg"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"loading-right-bg"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"spinner-box"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"configure-border-1"</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"configure-core"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"configure-border-2"</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"configure-core"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"loading-word"</span>&gt;</span>加载中...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></li><li><p>将以下内容添加到<code>&lt;/body&gt;</code>标签前面：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">var</span> endLoading = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-built_in">document</span>.body.style.overflow = <span class="hljs-string">'auto'</span>;    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'loading-box'</span>).classList.add(<span class="hljs-string">"loaded"</span>);  &#125;  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">'load'</span>,endLoading);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></li></ol><h2 id="页脚跳动的"><a class="markdownIt-Anchor" href="#页脚跳动的"></a> 页脚跳动的♥</h2><h3 id="butterfly-主题-5"><a class="markdownIt-Anchor" href="#butterfly-主题-5"></a> Butterfly 主题</h3><ol><li><p>编辑<code>博客根目录/themes/Butterfly/layout/includes/footer.pug</code>文件，将<code>&amp;copy;$&#123;theme.since&#125; - $&#123;nowYear&#125; By $&#123;config.author&#125;</code>改为<code>&amp;copy;$&#123;theme.since&#125; - $&#123;nowYear + ' '&#125; &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; $&#123;config.author&#125;</code>, 将<code>&amp;copy;$&#123;nowYear&#125; By $&#123;config.author&#125;</code>改为<code>&amp;copy;$&#123;nowYear + ' '&#125; &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; $&#123;config.author&#125;</code></p></li><li><p>编辑<code>butterfly.yml</code>文件, 以下两个你<code>butterfly.yml</code>文件里有哪个就用那个，不要都用！</p><ul><li>在<code>CDN_USE-&gt;css</code>下面添加如下内容：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css</span></code></pre><ul><li>在<code>inject-&gt;head</code>下面添加如下内容：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-string">&lt;link</span> <span class="hljs-string">rel="stylesheet"</span> <span class="hljs-string">href="https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css"&gt;</span></code></pre></li></ol><h3 id="其他主题-5"><a class="markdownIt-Anchor" href="#其他主题-5"></a> 其他主题</h3><ol><li><p>将<code>&lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt;</code>添加到需要显示的位置</p></li><li><p>将以下内容添加到<code>&lt;head&gt;&lt;/head&gt;</code>标签内：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css"</span>&gt;</span></code></pre></li></ol><h2 id="页脚显示网站运行时间"><a class="markdownIt-Anchor" href="#页脚显示网站运行时间"></a> 页脚显示网站运行时间</h2><h3 id="butterfly-主题-6"><a class="markdownIt-Anchor" href="#butterfly-主题-6"></a> Butterfly 主题</h3><ul><li>编辑<code>博客根目录/themes/Butterfly/layout/includes/footer.pug</code>文件，在最后<code>span=theme.ICP.text</code>下一行添加以下内容：</li></ul><pre class="highlight"><code class="pug">  #running-time    script.      setInterval(()=&gt;&#123;let create_time=Math.round(new Date('2020-01-03 00:00:00').getTime()/1000);let timestamp=Math.round((new Date().getTime()+8*60*60*1000)/1000);let second=timestamp-create_time;let time=new Array(0,0,0,0,0);if(second&gt;=365*24*3600)&#123;time[0]=parseInt(second/(365*24*3600));second%=365*24*3600;&#125;if(second&gt;=24*3600)&#123;time[1]=parseInt(second/(24*3600));second%=24*3600;&#125;if(second&gt;=3600)&#123;time[2]=parseInt(second/3600);second%=3600;&#125;if(second&gt;=60)&#123;time[3]=parseInt(second/60);second%=60;&#125;if(second&gt;0)&#123;time[4]=second;&#125;currentTimeHtml='本站已安全运行 '+time[0]+' 年 '+time[1]+' 天 '+time[2]+' 时 '+time[3]+' 分 '+time[4]+' 秒';document.getElementById(&quot;running-time&quot;).innerHTML=currentTimeHtml;&#125;,1000);</code></pre><div class="tip inlineBlock warning">            <p>注意<code>#running-time</code>与上面的<code>if theme.ICP.enable</code>对齐！<br />要将<code>2020-01-03 00:00:00</code>改为你网站的起始时间！</p>          </div><h3 id="其他主题-6"><a class="markdownIt-Anchor" href="#其他主题-6"></a> 其他主题</h3><ul><li>将以下内容添加到需要显示的位置</li></ul><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"running-time"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">setInterval(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>&#123;<span class="hljs-keyword">let</span> create_time=<span class="hljs-built_in">Math</span>.round(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-string">'2020-01-03 00:00:00'</span>).getTime()/<span class="hljs-number">1000</span>);<span class="hljs-keyword">let</span> timestamp=<span class="hljs-built_in">Math</span>.round((<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime()+<span class="hljs-number">8</span>*<span class="hljs-number">60</span>*<span class="hljs-number">60</span>*<span class="hljs-number">1000</span>)/<span class="hljs-number">1000</span>);<span class="hljs-keyword">let</span> second=timestamp-create_time;<span class="hljs-keyword">let</span> time=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<span class="hljs-keyword">if</span>(second&gt;=<span class="hljs-number">365</span>*<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>)&#123;time[<span class="hljs-number">0</span>]=<span class="hljs-built_in">parseInt</span>(second/(<span class="hljs-number">365</span>*<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>));second%=<span class="hljs-number">365</span>*<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>;&#125;<span class="hljs-keyword">if</span>(second&gt;=<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>)&#123;time[<span class="hljs-number">1</span>]=<span class="hljs-built_in">parseInt</span>(second/(<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>));second%=<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>;&#125;<span class="hljs-keyword">if</span>(second&gt;=<span class="hljs-number">3600</span>)&#123;time[<span class="hljs-number">2</span>]=<span class="hljs-built_in">parseInt</span>(second/<span class="hljs-number">3600</span>);second%=<span class="hljs-number">3600</span>;&#125;<span class="hljs-keyword">if</span>(second&gt;=<span class="hljs-number">60</span>)&#123;time[<span class="hljs-number">3</span>]=<span class="hljs-built_in">parseInt</span>(second/<span class="hljs-number">60</span>);second%=<span class="hljs-number">60</span>;&#125;<span class="hljs-keyword">if</span>(second&gt;<span class="hljs-number">0</span>)&#123;time[<span class="hljs-number">4</span>]=second;&#125;currentTimeHtml=<span class="hljs-string">'本站已安全运行 '</span>+time[<span class="hljs-number">0</span>]+<span class="hljs-string">' 年 '</span>+time[<span class="hljs-number">1</span>]+<span class="hljs-string">' 天 '</span>+time[<span class="hljs-number">2</span>]+<span class="hljs-string">' 时 '</span>+time[<span class="hljs-number">3</span>]+<span class="hljs-string">' 分 '</span>+time[<span class="hljs-number">4</span>]+<span class="hljs-string">' 秒'</span>;<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"running-time"</span>).innerHTML=currentTimeHtml;&#125;,<span class="hljs-number">1000</span>);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><div class="tip inlineBlock warning">            <p>要将<code>2020-01-03 00:00:00</code>改为你网站的起始时间！</p>          </div><h2 id="双评论系统"><a class="markdownIt-Anchor" href="#双评论系统"></a> 双评论系统</h2><div class="tip inlineBlock warning">            <p>此方法只适用于 Butterfly 主题！</p>          </div><p>这里以同时使用<code>Valine</code>和<code>Gitalk</code>, 默认使用<code>Valine</code>为例。<br />请确认<code>Valine</code>和<code>Gitalk</code>已开启并正确配置。</p><ol><li><p>修改<code>themes/Butterfly/layout/includes/comments/index.pug</code>文件，将所有的<code>else if</code>改为<code>if</code>, 并在<code>span= ' ' + _p('comment')</code>下面添加：</p><pre class="highlight"><code class="pug">a#switch-comment(href=&quot;javascript:void(0);&quot; title=&quot;切换为Gitalk&quot; target=&quot;_self&quot;)  i.fa.fas.fa-toggle-off(aria-hidden=&quot;true&quot;)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/57bd67ce/index.pug.webp" alt="index.pug" /></p></li><li><p>隐藏一个评论，保留一个默认评论</p><ul><li>隐藏<code>valine</code>: 修改<code>themes/Butterfly/layout/includes/comments/valine.pug</code>文件，在<code>#vcomment.vcomment</code>后面添加(style=‘display:none;’)</li><li>隐藏<code>gitalk</code>: 修改<code>themes/Butterfly/layout/includes/comments/gitalk.pug</code>文件，在<code>#gitalk-container</code>后面添加(style=‘display:none;’)</li><li>隐藏其他评论系统方法与上面类似</li></ul></li><li><p>在<code>themes/Butterfly/source/js/third-party/</code>目录新建<code>switch_comments.js</code>文件，内容如下：</p><pre class="highlight"><code class="javascript">$(<span class="hljs-string">'#switch-comment'</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;  switchComment()  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>&#125;)<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">switchComment</span> (<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-keyword">const</span> title = $(<span class="hljs-string">'#switch-comment'</span>).attr(<span class="hljs-string">'title'</span>) === <span class="hljs-string">'切换为Gitalk'</span> ? <span class="hljs-string">'切换为Valine'</span> : <span class="hljs-string">'切换为Gitalk'</span>  <span class="hljs-keyword">const</span> i = $(<span class="hljs-string">'#switch-comment&gt;i'</span>)  <span class="hljs-keyword">if</span> ($(<span class="hljs-string">'#gitalk-container'</span>).css(<span class="hljs-string">'display'</span>) === <span class="hljs-string">'none'</span>) &#123;    $(<span class="hljs-string">'#vcomment'</span>).slideUp(<span class="hljs-string">'normal'</span>, () =&gt; &#123;      $(<span class="hljs-string">'#gitalk-container'</span>).slideDown(<span class="hljs-string">'normal'</span>, () =&gt; &#123;        $(<span class="hljs-string">'#switch-comment'</span>).attr(<span class="hljs-string">'title'</span>, title)        i.hasClass(<span class="hljs-string">'fa-toggle-off'</span>) ? i.removeClass(<span class="hljs-string">'fa-toggle-off'</span>).addClass(<span class="hljs-string">'fa-toggle-on'</span>) : i.removeClass(<span class="hljs-string">'fa-toggle-on'</span>).addClass(<span class="hljs-string">'fa-toggle-off'</span>)      &#125;)    &#125;)  &#125; <span class="hljs-keyword">else</span> &#123;    $(<span class="hljs-string">'#gitalk-container'</span>).slideUp(<span class="hljs-string">'normal'</span>, () =&gt; &#123;      $(<span class="hljs-string">'#vcomment'</span>).slideDown(<span class="hljs-string">'normal'</span>, () =&gt; &#123;        $(<span class="hljs-string">'#switch-comment'</span>).attr(<span class="hljs-string">'title'</span>, title)        i.hasClass(<span class="hljs-string">'fa-toggle-off'</span>) ? i.removeClass(<span class="hljs-string">'fa-toggle-off'</span>).addClass(<span class="hljs-string">'fa-toggle-on'</span>) : i.removeClass(<span class="hljs-string">'fa-toggle-on'</span>).addClass(<span class="hljs-string">'fa-toggle-off'</span>)      &#125;)    &#125;)  &#125;&#125;</code></pre></li><li><p>编辑<code>butterfly.yml</code>文件, 以下两个你<code>butterfly.yml</code>文件里有哪个就用那个，不要都用！</p><ul><li>在<code>CDN_USE-&gt;js</code>下面添加如下内容：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-string">/js/third-party/switch_comments.js</span></code></pre><ul><li>在<code>inject-&gt;bottom</code>下面添加如下内容：</li></ul><pre class="highlight"><code class="yml"><span class="hljs-bullet">-</span> <span class="hljs-string">&lt;script</span> <span class="hljs-string">src="/js/third-party/switch_comments.js"&gt;&lt;/script&gt;</span></code></pre></li></ol><div class="tip inlineBlock warning">            <p>如果你使用的其他评论系统注意替换上面的<code>切换为Gitalk</code>, <code>切换为Valine</code>, <code>#gitalk-container</code>, <code>#vcomment</code><br />切换图标使用的<code>fontawesome</code>, 兼容<code>V4</code>和<code>V5</code>, 如果你是用的其他图标库，请替换<code>fa-toggle-on</code>和<code>fa-toggle-off</code></p>          </div><h2 id="随机文章跳转"><a class="markdownIt-Anchor" href="#随机文章跳转"></a> 随机文章跳转</h2><ul><li><p>在<code>博客根目录/scripts</code>(没有请自行创建)下新建<code>random.js</code>文件，内容如下：</p><pre class="highlight"><code class="javascript">hexo.extend.generator.register(<span class="hljs-string">'random'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">locals</span>) </span>&#123;  <span class="hljs-keyword">const</span> config = hexo.config.random || &#123;&#125;  <span class="hljs-keyword">const</span> posts = []  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> post <span class="hljs-keyword">of</span> locals.posts.data) &#123;    <span class="hljs-keyword">if</span> (post.random !== <span class="hljs-literal">false</span>) posts.push(post.path)  &#125;  <span class="hljs-keyword">return</span> &#123;    <span class="hljs-attr">path</span>: config.path || <span class="hljs-string">'random/index.html'</span>,    <span class="hljs-attr">data</span>: <span class="hljs-string">`&lt;html&gt;&lt;head&gt;&lt;script&gt;var posts=<span class="hljs-subst">$&#123;<span class="hljs-built_in">JSON</span>.stringify(posts)&#125;</span>;window.open('/'+posts[Math.floor(Math.random() * posts.length)],"_self")&lt;/script&gt;&lt;/head&gt;&lt;/html&gt;`</span>  &#125;&#125;)</code></pre><p><strong>打开<code>/random/</code>就会随机跳转一篇文章</strong></p></li><li><p>可选配置</p><ul><li><p>可以在<code>_config.yml</code>添加以下配置：</p><pre class="highlight"><code class="yml"><span class="hljs-attr">random:</span>  <span class="hljs-attr">path:</span> <span class="hljs-comment"># 随机链接路径，默认"random/index.html"</span></code></pre></li><li><p>如果不想随机跳转到某篇文章，只需在这篇文章<code>Front-matter</code>添加<code>random: false</code></p></li></ul></li></ul><h2 id="文章统计图表"><a class="markdownIt-Anchor" href="#文章统计图表"></a> 文章统计图表</h2><div class="tip inlineBlock warning">            <p>从<a href="https://github.com/blinkfox/hexo-theme-matery">matery 主题</a>上看到了<code>文章发布统计图</code>、<code>标签统计图</code>和<code>文章分类统计图</code>，觉得挺好看，就扒下来做了个插件。<br />因为使用 Tag 会导致文章获取不全，所以本插件直接使用 html 标签渲染，而不是使用 Tag。由于使用了 cheerio 模块，如果你使用了 html 压缩插件，<strong>可能</strong>会出现压缩报错，暂时无解。</p>          </div><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><pre class="highlight"><code class="shell">npm install hexo-charts -S</code></pre><h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3><div class="tip inlineBlock error">            <p>注意！下面的标签可以放到<code>post</code>和不含<code>type</code>的<code>page</code>的<code>md</code>文件中，含有<code>type</code>的<code>page</code>请自行修改相应的模板文件，这个就不要来问我了，因为每个人用的主题可能都不一样，建议去问主题的作者。</p>          </div><h4 id="文章发布统计图"><a class="markdownIt-Anchor" href="#文章发布统计图"></a> 文章发布统计图</h4><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"posts-chart"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><h4 id="标签统计图"><a class="markdownIt-Anchor" href="#标签统计图"></a> 标签统计图</h4><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!-- "data-length"为显示标签个数(从多到少)，默认为10 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tags-chart"</span> <span class="hljs-attr">data-length</span>=<span class="hljs-string">"10"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><h4 id="文章分类统计图"><a class="markdownIt-Anchor" href="#文章分类统计图"></a> 文章分类统计图</h4><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"categories-chart"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><h3 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h3><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/57bd67ce/2020-05-02-201802.webp" alt="文章发布统计图" /><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/57bd67ce/2020-05-02-201849.webp" alt="标签统计图" /><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/57bd67ce/2020-05-02-201935.webp" alt="文章分类统计图" /></p><h3 id="butterfly-主题将图表添加到归档-分类-标签页面"><a class="markdownIt-Anchor" href="#butterfly-主题将图表添加到归档-分类-标签页面"></a> Butterfly 主题将图表添加到归档、分类、标签页面</h3><h4 id="将文章发布统计图添加到归档页面"><a class="markdownIt-Anchor" href="#将文章发布统计图添加到归档页面"></a> 将文章发布统计图添加到归档页面</h4><p>在<code>主题目录/Butterfly/layout/archive.pug</code>文件的<code>#archive</code>下面添加一行<code>#posts-chart</code>, 新添加的比上一行多缩进两个空格。</p><pre class="highlight"><code class="pug">block content  include ./includes/mixins/article-sort.pug  #archive    #posts-chart</code></pre><h4 id="将标签统计图和分类统计图分别添加到标签和分类页面"><a class="markdownIt-Anchor" href="#将标签统计图和分类统计图分别添加到标签和分类页面"></a> 将标签统计图和分类统计图分别添加到标签和分类页面</h4><ul><li>编辑<code>主题目录/Butterfly/layout/page.pug</code>文件，在<code>.tag-cloud</code>下面添加一行<code>#tags-chart</code>，在<code>.category-content</code>下面添加一行<code>#categories-chart</code>，新添加的比上一行多缩进两个空格。</li></ul><pre class="highlight"><code class="pug">block content  if page.type === 'tags'    .tag-cloud      #tags-chart</code></pre><pre class="highlight"><code class="pug">  else if page.type === 'categories'    .category-content      #categories-chart</code></pre><h2 id="文章二维码仅-butterfly-主题"><a class="markdownIt-Anchor" href="#文章二维码仅-butterfly-主题"></a> 文章二维码(仅 Butterfly 主题)</h2><ol><li>安装<a href="https://github.com/yscoder/hexo-helper-qrcode">hexo-helper-qrcode</a>插件:</li></ol><pre class="highlight"><code class="shell">npm install hexo-helper-qrcode -S</code></pre><ol start="2"><li>编辑<code>主题目录/Butterfly/layout/includes/header/post-info.pug</code>, 在文件最后添加以下内容：</li></ol><pre class="highlight"><code class="pug">      span.post-qrcode        span.post-meta__separator |        i.fa.fa-qrcode.post-meta__icon.fa-fw(aria-hidden=&quot;true&quot;)        a(href=&quot;javasvript:;&quot; onmouseover='document.getElementById(&quot;post-qrcode&quot;).style.display=&quot;block&quot;' onmouseout='document.getElementById(&quot;post-qrcode&quot;).style.display=&quot;none&quot;')='二维码'        div#post-qrcode.post-qrcode-img          img#post-img(src=qrcode(page.permalink))</code></pre><div class="tip inlineBlock warning">            <p>注意<code>span.post-qrcode</code>要与上面的<code>span.post-meta-commentcount</code>对齐！</p>          </div><h2 id="valine-评论添加博主等标签仅-butterfly-主题"><a class="markdownIt-Anchor" href="#valine-评论添加博主等标签仅-butterfly-主题"></a> valine 评论添加博主等标签(仅 Butterfly 主题)</h2><div class="tip inlineBlock warning">            <p>以下内容仅适用于 Butterfly 主题 &lt;= V2.3.5，其他主题可以根据本教程和<a href="/posts/409d3090/">这篇文章</a>自行修改！<br />Butterfly 主题 &gt;= V4.0 请往下翻！</p>          </div><ol><li><p>下载<a href="https://github.com/HCLonely/hexo-demo/blob/master/themes/Butterfly/layout/includes/comments/valine.pug">valine.pug</a>文件，替换<code>themes/Butterfly/layout/includes/comments/valine.pug</code></p></li><li><p>编辑<code>butterfly.yml</code>文件，找到<code>valine</code>配置，添加以下配置项:</p></li></ol><pre class="highlight"><code class="yml">  <span class="hljs-attr">master:</span> <span class="hljs-comment"># md5加密后的博主邮箱</span>    <span class="hljs-bullet">-</span> <span class="hljs-string">f8c7c3961aea2c203160e90cd3b3a26a</span>  <span class="hljs-attr">friends:</span> <span class="hljs-comment"># md5加密后的小伙伴邮箱</span>    <span class="hljs-bullet">-</span> <span class="hljs-string">5c2105bbfe6rfc02a6f6ae26dad3819c</span>    <span class="hljs-bullet">-</span> <span class="hljs-string">a0adabb31677df92a2405fb18a02ee4d</span>  <span class="hljs-attr">metaPlaceholder:</span> <span class="hljs-comment"># 输入框的背景文字</span>    <span class="hljs-attr">nick:</span> <span class="hljs-string">昵称/QQ号(必填)</span>    <span class="hljs-attr">mail:</span> <span class="hljs-string">邮箱(必填)</span>    <span class="hljs-attr">link:</span> <span class="hljs-string">网址(https://)</span>  <span class="hljs-attr">tagMeta:</span> <span class="hljs-string">'博主,小伙伴,访客'</span> <span class="hljs-comment"># 标签要显示的文字,默认'博主,小伙伴,访客'</span>  <span class="hljs-attr">verify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 评论时是否需要验证，需jQuery支持</span></code></pre><ol start="3"><li><p>编辑<code>butterfly.yml</code>文件，将<code>CDN</code>中的<code>valine</code>链接改为<code>https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js</code></p></li><li><p>改完之后<code>hexo clean</code>一下，不然不会生效</p></li></ol><hr /><div class="tip inlineBlock warning">            <p>以下内容仅适用于 Butterfly 主题 &gt;= V4.0！</p>          </div><ol><li>编辑<code>butterfly.yml</code>文件，找到<code>valine</code>配置，在<code>option</code>下添加以下配置项(注意缩进！):</li></ol><pre class="highlight"><code class="yml">  <span class="hljs-attr">option:</span>    <span class="hljs-attr">master:</span> <span class="hljs-comment"># md5加密后的博主邮箱</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">f8c7c3961aea2c203160e90cd3b3a26a</span>    <span class="hljs-attr">friends:</span> <span class="hljs-comment"># md5加密后的小伙伴邮箱</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">5c2105bbfe6rfc02a6f6ae26dad3819c</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">a0adabb31677df92a2405fb18a02ee4d</span>    <span class="hljs-attr">metaPlaceholder:</span> <span class="hljs-comment"># 输入框的背景文字</span>      <span class="hljs-attr">nick:</span> <span class="hljs-string">昵称/QQ号(必填)</span>      <span class="hljs-attr">mail:</span> <span class="hljs-string">邮箱(必填)</span>      <span class="hljs-attr">link:</span> <span class="hljs-string">网址(https://)</span>    <span class="hljs-attr">tagMeta:</span>  <span class="hljs-comment"># 标签要显示的文字,请注意顺序！</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">博主</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">小伙伴</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">访客</span></code></pre><ol start="2"><li><p>编辑<code>butterfly.yml</code>文件，将<code>CDN</code>中的<code>valine</code>链接改为<code>https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js</code></p></li><li><p>改完之后<code>hexo clean</code>一下，不然不会生效</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 日历 </tag>
            
            <tag> 美化 </tag>
            
            <tag> 小部件 </tag>
            
            <tag> 访客地图 </tag>
            
            <tag> pixiv </tag>
            
            <tag> 投票 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用 npm 包</title>
      <link href="/posts/2413eaa8/"/>
      <url>/posts/2413eaa8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>为了避免每次找模块时都要百度，这里记一下我比较常用的模块及其简单的使用。</p></blockquote><h2 id="cheerio"><a class="markdownIt-Anchor" href="#cheerio"></a> cheerio</h2><p><a href="https://github.com/cheeriojs/cheerio">cheerio</a>是 jquery 核心功能的一个快速灵活而又简洁的实现，主要是为了用在服务器端需要对 DOM 进行操作的地方。</p><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><pre class="highlight"><code class="shell">npm install cheerio</code></pre><h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3><pre class="highlight"><code class="javascript"><span class="hljs-keyword">const</span> cheerio = <span class="hljs-built_in">require</span>(<span class="hljs-string">'cheerio'</span>),$ = cheerio.load(<span class="hljs-string">'&lt;html&gt;&lt;body&gt;Hello, &lt;b&gt;world&lt;/b&gt;!&lt;/body&gt;&lt;/html&gt;'</span>);</code></pre><h2 id="axios-https-proxy-fix"><a class="markdownIt-Anchor" href="#axios-https-proxy-fix"></a> axios-https-proxy-fix</h2><p><a href="https://www.npmjs.com/package/axios-https-proxy-fix">axios-https-proxy-fix</a>是修复<a href="https://github.com/axios/axios">axios</a>代理 https 失败的分支版本。</p><h3 id="安装-2"><a class="markdownIt-Anchor" href="#安装-2"></a> 安装</h3><pre class="highlight"><code class="shell">npm install axios-https-proxy-fix</code></pre><h3 id="使用-2"><a class="markdownIt-Anchor" href="#使用-2"></a> 使用</h3><p><a href="http://www.axios-js.com/zh-cn/docs/">中文文档</a></p><h2 id="moment"><a class="markdownIt-Anchor" href="#moment"></a> moment</h2><p><a href="https://github.com/moment/moment">moment</a> 是一个 JavaScript 日期处理类库,用于解析、检验、操作、以及显示日期。</p><h3 id="安装-3"><a class="markdownIt-Anchor" href="#安装-3"></a> 安装</h3><pre class="highlight"><code class="shell">npm install moment</code></pre><h3 id="使用-3"><a class="markdownIt-Anchor" href="#使用-3"></a> 使用</h3><pre class="highlight"><code class="javascript"><span class="hljs-keyword">const</span> moment  = <span class="hljs-built_in">require</span>(<span class="hljs-string">'moment '</span>),moment().format(<span class="hljs-string">'YYYY-MM-DD HH:mm:ss'</span>);</code></pre><h2 id="lodash"><a class="markdownIt-Anchor" href="#lodash"></a> Lodash</h2><p><a href="https://github.com/lodash/lodash">Lodash</a> 是一个一致性、模块化、高性能的 JavaScript 实用工具库。</p><h3 id="安装-4"><a class="markdownIt-Anchor" href="#安装-4"></a> 安装</h3><pre class="highlight"><code class="shell">npm install lodash</code></pre><h3 id="使用-4"><a class="markdownIt-Anchor" href="#使用-4"></a> 使用</h3><p><a href="https://www.lodashjs.com/">中文文档</a></p><h2 id="ali-oss"><a class="markdownIt-Anchor" href="#ali-oss"></a> ali-oss</h2><p><a href="https://github.com/ali-sdk/ali-oss">ali-oss</a> 是使用 NodeJs 操作阿里云 OSS 官方模块。</p><h3 id="安装-5"><a class="markdownIt-Anchor" href="#安装-5"></a> 安装</h3><pre class="highlight"><code class="shell">npm install ali-oss</code></pre><h3 id="使用-5"><a class="markdownIt-Anchor" href="#使用-5"></a> 使用</h3><p><a href="https://help.aliyun.com/document_detail/32068.html">中文文档</a></p><h2 id="puppeteer"><a class="markdownIt-Anchor" href="#puppeteer"></a> Puppeteer</h2><p><a href="https://github.com/puppeteer/puppeteer">Puppeteer</a> 是一个 Node 库，它提供了一个高级 API 来通过 DevTools 协议控制 Chromium 或 Chrome。</p><h3 id="安装-6"><a class="markdownIt-Anchor" href="#安装-6"></a> 安装</h3><pre class="highlight"><code class="shell">npm i puppeteer</code></pre><h3 id="使用-6"><a class="markdownIt-Anchor" href="#使用-6"></a> 使用</h3><p><a href="https://zhaoqize.github.io/puppeteer-api-zh_CN/">中文文档</a></p><h2 id="nrm"><a class="markdownIt-Anchor" href="#nrm"></a> nrm</h2><p><a href="https://github.com/Pana/nrm">nrm</a>(npm registry manager )是 npm 的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换。</p><h3 id="安装-7"><a class="markdownIt-Anchor" href="#安装-7"></a> 安装</h3><pre class="highlight"><code class="shell">npm install -g nrm</code></pre><h3 id="使用-7"><a class="markdownIt-Anchor" href="#使用-7"></a> 使用</h3><h4 id="查看可选的源"><a class="markdownIt-Anchor" href="#查看可选的源"></a> 查看可选的源</h4><pre class="highlight"><code class="shell"><span class="hljs-meta">&gt;</span><span class="bash"> nrm ls</span>* npm -------- https://registry.npmjs.org/  yarn ------- https://registry.yarnpkg.com/  cnpm ------- http://r.cnpmjs.org/  taobao ----- https://registry.npm.taobao.org/  nj --------- https://registry.nodejitsu.com/  npmMirror -- https://skimdb.npmjs.com/registry/  edunpm ----- http://registry.enpmjs.org/</code></pre><h4 id="切换到-taobao-源"><a class="markdownIt-Anchor" href="#切换到-taobao-源"></a> 切换到 taobao 源</h4><pre class="highlight"><code class="shell"><span class="hljs-meta">&gt;</span><span class="bash"> nrm use taobao</span>  Registry has been set to: https://registry.npm.taobao.org/</code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> NodeJs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NodeJs </tag>
            
            <tag> module </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Steam 游戏库页面插件</title>
      <link href="/posts/672d4d3b/"/>
      <url>/posts/672d4d3b/</url>
      
        <content type="html"><![CDATA[<p><img src="https://nodei.co/npm/hexo-steam-games.png?downloads=true&amp;downloadRank=true&amp;stars=true" alt="" /></p><div class="badge"></div><p><img src="https://img.shields.io/github/stars/HClonely/hexo-steam-games?style=flat" alt="GitHub stars" /><img src="https://img.shields.io/github/languages/count/HCLonely/hexo-steam-games" alt="GitHub language count" /><img src="https://img.shields.io/github/languages/top/HClonely/hexo-steam-games" alt="GitHub top language" /><img src="https://img.shields.io/github/repo-size/HCLonely/hexo-steam-games" alt="GitHub repo size" /><img src="https://img.shields.io/github/languages/code-size/HClonely/hexo-steam-games" alt="GitHub code size in bytes" /><img src="https://img.shields.io/bundlephobia/min/hexo-steam-games" alt="npm bundle size" /><img src="https://img.shields.io/npm/dw/hexo-steam-games" alt="npm" /><img src="https://img.shields.io/github/issues/HClonely/hexo-steam-games" alt="GitHub issues" /><img src="https://img.shields.io/github/commit-activity/m/HClonely/hexo-steam-games" alt="GitHub commit activity" /><img src="https://img.shields.io/github/last-commit/HClonely/hexo-steam-games" alt="GitHub last commit" /><img src="https://img.shields.io/npm/v/hexo-steam-games" alt="npm" /><img src="https://img.shields.io/npm/l/hexo-steam-games" alt="NPM" /></p><div id="badge-container-HCLonely-hexo-steam-games-a6996a3" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-hexo-steam-games-a6996a3", "HCLonely", "hexo-steam-games", "a6996a3", false);</script><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p><strong>为 Hexo 添加 Steam 游戏库页面</strong></p><div class="tip inlineBlock warning">            <p>注意，本插件会和<code>hexo s</code>命令冲突，请使用<code>hexo se</code>或<code>hexo server</code>代替<code>hexo s</code>命令！</p>          </div><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><pre class="highlight"><code class="bash">$ npm install hexo-steam-games --save</code></pre><h2 id="更新"><a class="markdownIt-Anchor" href="#更新"></a> 更新</h2><pre class="highlight"><code class="bash">$ npm install hexo-steam-games --update --save</code></pre><hr /><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>将下面的配置写入站点的配置文件 <code>_config.yml</code> 里(不是主题的配置文件).</p><pre class="highlight"><code class="yaml"><span class="hljs-attr">steam:</span>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">steamId:</span> <span class="hljs-string">'*****'</span> <span class="hljs-comment">#steam 64位Id</span>  <span class="hljs-attr">path:</span>  <span class="hljs-attr">title:</span> <span class="hljs-string">Steam游戏库</span>  <span class="hljs-attr">quote:</span> <span class="hljs-string">'+1+1+1+1+1'</span>  <span class="hljs-attr">tab:</span> <span class="hljs-string">recent</span>  <span class="hljs-attr">length:</span> <span class="hljs-number">1000</span>  <span class="hljs-attr">imgUrl:</span> <span class="hljs-string">'*****'</span>  <span class="hljs-attr">proxy:</span>    <span class="hljs-attr">host:</span>    <span class="hljs-attr">port:</span></code></pre><ul><li><strong>enable</strong>: 是否启用</li><li><strong>steamId</strong>: steam 64 位 Id(需要放在引号里面，不然会有 BUG), <em><strong>需要将 steam 库设置为公开！</strong></em></li><li><strong>path</strong>: 番剧页面路径，默认<code>steamgames/index.html</code></li><li><strong>title</strong>: 该页面的标题</li><li><strong>quote</strong>: 写在页面开头的一段话,支持 html 语法</li><li><strong>tab</strong>: <code>all</code>或<code>recent</code>, <code>all: 所有游戏</code>, <code>recent: 最近游玩的游戏</code></li><li><strong>length</strong>: 要显示游戏的数量，游戏太多的话可以限制一下</li><li><strong>imgUrl</strong>: 图片链接，在<code>quote</code>下面放一张图片，图片链接到 Steam 个人资料，可留空</li><li><strong>proxy</strong>: 如果无法访问 steam 社区的话请使用代理<ul><li><strong>host</strong>: 代理 ip 或域名</li><li><strong>port</strong>: 代理端口</li></ul></li></ul><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><ol><li>在<code>hexo generate</code>或<code>hexo deploy</code>之前使用<code>hexo steam -u</code>命令更新 steam 游戏库数据！</li><li>删除游戏库数据指令:<code>hexo steam -d</code></li></ol><h2 id="手动获取游戏库数据"><a class="markdownIt-Anchor" href="#手动获取游戏库数据"></a> 手动获取游戏库数据</h2><p>如果<code>hexo steam -u</code>命令一直获取游戏库数据失败，可以用以下方法手动获取游戏库数据：</p><ol><li><p>浏览器打开<code>https://steamcommunity.com/profiles/&#123;steamId&#125;/games?tab=&#123;tab&#125;</code>, <code>&#123;steamId&#125;</code>和<code>&#123;tab&#125;</code>分别替换为上面配置中提到的<code>steamId</code>和<code>tab</code></p></li><li><p>网页加载完成后，打开浏览器控制台(按<code>F12</code>)，输入以下代码并回车：</p><pre class="highlight"><code class="javascript"><span class="hljs-keyword">let</span> script = jQuery(<span class="hljs-string">'script[language="javascript"]'</span>);<span class="hljs-keyword">var</span> games = [];<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; script.length; i++) &#123;  <span class="hljs-keyword">if</span> (script.eq(i).html().includes(<span class="hljs-string">"rgGames"</span>)) &#123;    <span class="hljs-keyword">let</span> rgGames = script.eq(i).html().match(<span class="hljs-regexp">/var.*?rgGames.*?=.*?(\[[\w\W]*?\&#125;\&#125;\]);/</span>);    <span class="hljs-keyword">if</span> (rgGames) &#123;      games = <span class="hljs-built_in">JSON</span>.parse(rgGames[<span class="hljs-number">1</span>]);      <span class="hljs-keyword">break</span>;    &#125;  &#125;&#125;<span class="hljs-built_in">document</span>.write(<span class="hljs-built_in">JSON</span>.stringify(games))</code></pre></li><li><p>将生成的内容复制到<code>博客根目录/node_modules/hexo-steam-games/data/games.json</code>文件内，如果没有对应的文件或目录，请自行创建</p></li></ol><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><p><a href="/steamgames/">示例页面</a></p><h2 id="lisense"><a class="markdownIt-Anchor" href="#lisense"></a> Lisense</h2><p><a href="https://github.com/HCLonely/hexo-steam-games/blob/master/LICENSE">Apache Licence 2.0</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> steam </tag>
            
            <tag> game </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 追番/追剧页面插件</title>
      <link href="/posts/8422e92e/"/>
      <url>/posts/8422e92e/</url>
      
        <content type="html"><![CDATA[<p><img src="https://nodei.co/npm/hexo-bilibili-bangumi.png?downloads=true&amp;downloadRank=true&amp;stars=true" alt="" /></p><div class="badge"></div><p><img src="https://img.shields.io/github/stars/HClonely/hexo-bilibili-bangumi?style=flat" alt="GitHub stars" /><img src="https://img.shields.io/github/languages/count/HCLonely/hexo-bilibili-bangumi" alt="GitHub language count" /><img src="https://img.shields.io/github/languages/top/HClonely/hexo-bilibili-bangumi" alt="GitHub top language" /><img src="https://img.shields.io/github/repo-size/HCLonely/hexo-bilibili-bangumi" alt="GitHub repo size" /><img src="https://img.shields.io/github/languages/code-size/HClonely/hexo-bilibili-bangumi" alt="GitHub code size in bytes" /><img src="https://img.shields.io/bundlephobia/min/hexo-bilibili-bangumi" alt="npm bundle size" /><img src="https://img.shields.io/npm/dw/hexo-bilibili-bangumi" alt="npm" /><img src="https://img.shields.io/github/issues/HClonely/hexo-bilibili-bangumi" alt="GitHub issues" /><img src="https://img.shields.io/github/commit-activity/m/HClonely/hexo-bilibili-bangumi" alt="GitHub commit activity" /><img src="https://img.shields.io/github/last-commit/HClonely/hexo-bilibili-bangumi" alt="GitHub last commit" /><img src="https://img.shields.io/npm/v/hexo-bilibili-bangumi" alt="npm" /><img src="https://img.shields.io/npm/l/hexo-bilibili-bangumi" alt="NPM" /></p><div id="badge-container-HCLonely-hexo-bilibili-bangumi-9a006a9" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-hexo-bilibili-bangumi-9a006a9", "HCLonely", "hexo-bilibili-bangumi", "9a006a9", false);</script><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p><strong>为 Hexo 添加追番/追剧页面，参考了<a href="https://github.com/mythsman/hexo-douban">hexo-douban</a>的部分代码</strong></p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><pre class="highlight"><code class="bash">$ npm install hexo-bilibili-bangumi --save</code></pre><hr /><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>将下面的配置写入站点的配置文件 <code>_config.yml</code> 里(不是主题的配置文件).</p><pre class="highlight"><code class="yaml"><span class="hljs-attr">bangumi:</span> <span class="hljs-comment"># 追番设置</span>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">source:</span> <span class="hljs-string">bili</span>  <span class="hljs-attr">path:</span>  <span class="hljs-attr">vmid:</span>  <span class="hljs-attr">title:</span> <span class="hljs-string">'追番列表'</span>  <span class="hljs-attr">quote:</span> <span class="hljs-string">'生命不息，追番不止！'</span>  <span class="hljs-attr">show:</span> <span class="hljs-number">1</span>  <span class="hljs-attr">loading:</span>  <span class="hljs-attr">metaColor:</span>  <span class="hljs-attr">color:</span>  <span class="hljs-attr">webp:</span>  <span class="hljs-attr">progress:</span><span class="hljs-attr">cinema:</span> <span class="hljs-comment"># 追剧设置</span>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">path:</span>  <span class="hljs-attr">vmid:</span>  <span class="hljs-attr">title:</span> <span class="hljs-string">'追番列表'</span>  <span class="hljs-attr">quote:</span> <span class="hljs-string">'生命不息，追番不止！'</span>  <span class="hljs-attr">show:</span> <span class="hljs-number">1</span>  <span class="hljs-attr">loading:</span>  <span class="hljs-attr">metaColor:</span>  <span class="hljs-attr">color:</span>  <span class="hljs-attr">webp:</span>  <span class="hljs-attr">progress:</span></code></pre><ul><li><strong>enable</strong>: 是否启用</li><li><strong>source</strong>: 数据源，仅支持番剧。<code>bili</code>: <a href="https://www.bilibili.com/">哔哩哔哩源</a>, <code>bgm</code>: <a href="https://bangumi.tv/">Bangumi源</a></li><li><strong>path</strong>: 页面路径，默认<code>bangumis/index.html</code>, <code>cinemas/index.html</code></li><li><strong>vmid</strong>: 哔哩哔哩的 <code>vmid(uid)</code>,<a href="#%E8%8E%B7%E5%8F%96uid">如何获取？</a></li><li><strong>title</strong>: 该页面的标题</li><li><strong>quote</strong>: 写在页面开头的一段话，支持 html 语法，可留空。</li><li><strong>show</strong>: 初始显示页面：<code>0: 想看</code>, <code>1: 在看</code>, <code>2: 看过</code>，默认为<code>1</code></li><li><strong>loading</strong>: 图片加载完成前的 loading 图片</li><li><strong>metaColor</strong>: meta 部分(简介上方)字体颜色</li><li><strong>color</strong>: 简介字体颜色</li><li><strong>webp</strong>: 番剧封面使用<code>webp</code>格式(此格式在<code>safari</code>浏览器下不显示，但是图片大小可以缩小 100 倍左右), 默认<code>true</code></li><li><strong>progress</strong>: 获取番剧数据时是否显示进度条，默认<code>true</code></li></ul><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><ol><li>在<code>hexo generate</code>或<code>hexo deploy</code>之前使用<code>hexo bangumi -u</code>命令更新追番数据，使用<code>hexo cinema -u</code>命令更新追剧数据！</li><li>删除数据命令:<code>hexo bangumi -d</code>/<code>hexo cinema -d</code></li></ol><h2 id="获取-uid"><a class="markdownIt-Anchor" href="#获取-uid"></a> 获取 uid</h2><p>登录哔哩哔哩后前往<a href="https://space.bilibili.com/">https://space.bilibili.com/</a>页面，网址最后的一串数字就是 <code>uid</code></p><p><em><strong>需要将追番列表设置为公开！</strong></em></p><h2 id="手动添加番剧追剧数据"><a class="markdownIt-Anchor" href="#手动添加番剧追剧数据"></a> 手动添加番剧/追剧数据</h2><p>因为某些番剧在哔哩哔哩上没有，但是又想在hexo中展示，怎么办呢？现在支持手动添加番剧数据了！</p><p>在 <code>sources/_data/</code> 目录下新建文件，命名为 <code>extra_bangumis.json</code>(追番数据)或<code>extra_cinemas.json</code>(追剧数据) ，并添加以如下内容:</p><pre class="highlight"><code class="json">&#123;  <span class="hljs-attr">"watchedExtra"</span>: [    &#123;      <span class="hljs-attr">"title"</span>: <span class="hljs-string">"缘之空"</span>,      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"番剧"</span>,      <span class="hljs-attr">"area"</span>: <span class="hljs-string">"日本"</span>,      <span class="hljs-attr">"cover"</span>: <span class="hljs-string">"https://cdn.jsdelivr.net/gh/mmdjiji/bangumis@main/Yosuga-no-Sora/cover.jpg"</span>,      <span class="hljs-attr">"totalCount"</span>: <span class="hljs-string">"全12话"</span>,      <span class="hljs-attr">"id"</span>: <span class="hljs-number">0</span>,      <span class="hljs-attr">"follow"</span>: <span class="hljs-string">"不可用"</span>,      <span class="hljs-attr">"view"</span>: <span class="hljs-string">"不可用"</span>,      <span class="hljs-attr">"danmaku"</span>: <span class="hljs-string">"不可用"</span>,      <span class="hljs-attr">"coin"</span>: <span class="hljs-string">"不可用"</span>,      <span class="hljs-attr">"score"</span>: <span class="hljs-string">"不可用"</span>,      <span class="hljs-attr">"des"</span>: <span class="hljs-string">"远离都市的田园小镇，奥木染。春日野悠带着妹妹穹，来到了这座城镇。坐落在这里的是，儿时暑假经常造访的充满回忆的已故祖父的家。双亲因意外事故而丧生，变得无依无靠..."</span>    &#125;  ]&#125;</code></pre><p><code>title</code> 是番剧的标题，<code>cover</code> 是封面图链接， <code>des</code> 是简介，上述字段均根据需要修改。</p><p>另外除了 <code>watchedExtra</code> 数组，还可以在后面添加新的数组，可用数组名如下:</p><table><thead><tr><th>可用数组名</th><th>含义</th></tr></thead><tbody><tr><td>wantWatchExtra</td><td>想看</td></tr><tr><td>watchingExtra</td><td>在看</td></tr><tr><td>watchedExtra</td><td>看过</td></tr></tbody></table><p>需要注意，在两个数组之间需要用 <code>,</code> 分隔。</p><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><p><a href="/bangumis/">示例页面</a></p><h2 id="lisense"><a class="markdownIt-Anchor" href="#lisense"></a> Lisense</h2><p><a href="https://github.com/HCLonely/hexo-bilibili-bangumi/blob/master/LICENSE">Apache Licence 2.0</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> bilibili </tag>
            
            <tag> bangumi </tag>
            
            <tag> 哔哩哔哩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>steam 一键移除脚本</title>
      <link href="/posts/6a0923b1/"/>
      <url>/posts/6a0923b1/</url>
      
        <content type="html"><![CDATA[<h2 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h2><ul><li>取关鉴赏家：取关 <span style="text-decoration: line-through;">所有</span> <span style="color: red;">选中的</span>鉴赏家(包括开发商)，因为 steam 限制鉴赏家(包括开发商)的关注上限是 100 个，所以这个功能还是常用的。</li><li>取关游戏：取关 <span style="text-decoration: line-through;">所有</span> <span style="color: red;">选中的</span>游戏（关注游戏后，可以在您的社区活动信息中查看通知）。</li><li>移除愿望单：移除 <span style="text-decoration: line-through;">所有</span> <span style="color: red;">选中的</span>愿望单里的游戏，建议给薅羊毛的小号使用，不建议大号用。</li></ul><h2 id="脚本链接"><a class="markdownIt-Anchor" href="#脚本链接"></a> 脚本链接</h2><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/Steam_remove_all.user.js">点此安装</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/372255">GreasyFork</a></li></ul><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ol><li>安装好脚本后在<a href="https://store.steampowered.com/">steam 商店页面</a>点击上面的“一键移除”；<br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/tvpFHL.webp" alt="一键移除" /><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/mRrC6v.webp" alt="界面" /></li><li>根据自己的需求获取列表；<br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/lFJhvp.webp" alt="获取列表" /></li><li>在左侧选择要取关的鉴赏家/游戏；<br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/Eu6I1a.webp" alt="选择要取关的鉴赏家/游戏" /></li><li>点击取关或移除按钮。<br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/fVAOkv.webp" alt="取关或移除" /></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Tampermonkey 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> steam </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学 JS 时搞的一些 Tampermonkey 脚本</title>
      <link href="/posts/578f9be7/"/>
      <url>/posts/578f9be7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>介绍一些我写的不那么大众的 Tampermonkey 脚本</p></blockquote><div id="badge-container-HCLonely-user_js-125d013" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-user_js-125d013", "HCLonely", "user.js", "125d013", false);</script><h2 id="steam-redeem-sub"><a class="markdownIt-Anchor" href="#steam-redeem-sub"></a> Steam Redeem Sub</h2><h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h3><ul><li>在 steam 账户页面激活 SUB（支持改区）</li><li>支持一键激活<a href="https://steamdb.info/freepackages/">https://steamdb.info/freepackages/</a>页面的 SUB</li></ul><h3 id="脚本链接"><a class="markdownIt-Anchor" href="#脚本链接"></a> 脚本链接</h3><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/Steam_Redeem_Sub.user.js">点此安装</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/388060">GreasyFork</a></li></ul><h2 id="redeem-itchio"><a class="markdownIt-Anchor" href="#redeem-itchio"></a> Redeem <a href="http://itch.io">itch.io</a></h2><h3 id="功能-2"><a class="markdownIt-Anchor" href="#功能-2"></a> 功能</h3><ul><li>检测 <a href="http://itch.io">itch.io</a> key 链接并激活</li><li>自动激活价格为 0.00 的 <a href="http://itch.io">itch.io</a> 游戏</li><li>提取当前页面的所有 itch 游戏链接并尝试激活（仅支持其乐社区）</li></ul><h3 id="脚本链接-2"><a class="markdownIt-Anchor" href="#脚本链接-2"></a> 脚本链接</h3><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/Redeem_itch.io.user.js">点此安装</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/36806">GreasyFork</a></li></ul><h2 id="alienwarearena-daily-quest-helper"><a class="markdownIt-Anchor" href="#alienwarearena-daily-quest-helper"></a> Alienwarearena Daily Quest Helper</h2><h3 id="功能-3"><a class="markdownIt-Anchor" href="#功能-3"></a> 功能</h3><ul><li><s><a href="https://eu.alienwarearena.com/">外星人论坛</a>自动投票 20 次</s>(此任务已废弃)。</li><li>自动做<a href="https://eu.alienwarearena.com/">外星人论坛</a>&quot;Daily Quest&quot;任务（更换头像框、更换徽章、添加视频、评论、分享、阅读新闻等，周末的任务需要有人发了含有答案链接的帖子才能完成）。</li></ul><h3 id="脚本链接-3"><a class="markdownIt-Anchor" href="#脚本链接-3"></a> 脚本链接</h3><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/Alienwarearena_Daily_Quest_Helper.user.js">点此安装</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/40323">GreasyFork</a></li></ul><h3 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h3><ul><li>点击任务名即可</li></ul><h2 id="bilibili-直播自定义皮肤背景"><a class="markdownIt-Anchor" href="#bilibili-直播自定义皮肤背景"></a> bilibili 直播自定义皮肤背景</h2><h3 id="功能-4"><a class="markdownIt-Anchor" href="#功能-4"></a> 功能</h3><ul><li>自定义 bilibili 直播的皮肤和背景，仅自己可见！</li></ul><h3 id="脚本链接-4"><a class="markdownIt-Anchor" href="#脚本链接-4"></a> 脚本链接</h3><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/bilive_skin_custom.user.js">点此安装</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/387120">GreasyFork</a></li></ul><h3 id="使用方法-2"><a class="markdownIt-Anchor" href="#使用方法-2"></a> 使用方法</h3><h4 id="自定义背景"><a class="markdownIt-Anchor" href="#自定义背景"></a> 自定义背景</h4><ol><li>打开 bilibili 任一直播间；</li><li>点击“更换背景”；</li><li>选择要更换的背景类型，有“纯色背景”、“自定义背景”和默认的 6 种背景供你选择；</li><li>纯色背景：输入颜色代码(<a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=%E9%A2%9C%E8%89%B2%E4%BB%A3%E7%A0%81">?</a>)点击确认就可以将直播间背景改为你选定的颜色；</li><li>自定义背景：输入背景图片链接点击确认就可以将直播间背景改为你选定的图片；</li><li>点击保存。</li></ol><h4 id="自定义皮肤"><a class="markdownIt-Anchor" href="#自定义皮肤"></a> 自定义皮肤</h4><ol><li>打开 bilibili 任一直播间；</li><li>点击“更换皮肤”；</li><li>选择要更换的皮肤类型或修改下面的参数自定义皮肤；</li><li>点击保存。</li></ol><h2 id="steam-链接已删除"><a class="markdownIt-Anchor" href="#steam-链接已删除"></a> steam 链接已删除</h2><h3 id="功能-5"><a class="markdownIt-Anchor" href="#功能-5"></a> 功能</h3><ul><li>重新显示 steam 社区显示{链接已删除}的链接</li></ul><h3 id="脚本链接-5"><a class="markdownIt-Anchor" href="#脚本链接-5"></a> 脚本链接</h3><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/Steam_link_reshow.user.js">点此安装</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/374398">GreasyFork</a></li></ul><h2 id="steam-便捷加入购物车"><a class="markdownIt-Anchor" href="#steam-便捷加入购物车"></a> Steam 便捷加入购物车</h2><h3 id="功能-6"><a class="markdownIt-Anchor" href="#功能-6"></a> 功能</h3><ul><li>可以在 Steam 商店页面直接将游戏加入购物车，不会跳转到购物车页面</li></ul><h3 id="脚本链接-6"><a class="markdownIt-Anchor" href="#脚本链接-6"></a> 脚本链接</h3><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/Steam_add_to_cart.user.js">点此安装</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/387972">GreasyFork</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Tampermonkey 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2D 看板娘脚本</title>
      <link href="/posts/f09c9fef/"/>
      <url>/posts/f09c9fef/</url>
      
        <content type="html"><![CDATA[<div class="badge"></div><p><img src="https://img.shields.io/github/languages/count/HCLonely/live2d.user.js" alt="GitHub language count" /><img src="https://img.shields.io/github/languages/top/HCLonely/live2d.user.js" alt="GitHub top language" /><img src="https://img.shields.io/github/size/HClonely/live2d.user.js/live2d.user.js" alt="GitHub file size in bytes" /><img src="https://img.shields.io/github/issues/HCLonely/live2d.user.js" alt="GitHub issues" /><img src="https://img.shields.io/github/license/HCLonely/live2d.user.js" alt="GitHub" /><img src="https://img.shields.io/github/stars/HCLonely/live2d.user.js" alt="GitHub stars" /><img src="https://img.shields.io/github/last-commit/HCLonely/live2d.user.js" alt="GitHub last commit" /></p><h2 id="模型请求统计"><a class="markdownIt-Anchor" href="#模型请求统计"></a> 模型请求统计</h2><div class="badge"></div><p><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_1" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_2" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_3" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_4" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_5" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_6" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_7" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_8" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_9" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_10" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_11" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_12" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_13" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_14" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_15" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_16" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_17" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_18" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_19" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_20" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_21" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_22" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_23" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_24" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_25" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_26" alt="jsDelivr hits (npm)" /><img src="https://img.shields.io/jsdelivr/npm/hm/l2dmodel_27" alt="jsDelivr hits (npm)" /></p><div id="badge-container-HCLonely-live2d_user_js-3e35936" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-live2d_user_js-3e35936", "HCLonely", "live2d.user.js", "3e35936", false);</script><h2 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h2><p>给网页添加一个 Live2D 看板娘。</p><h2 id="脚本链接"><a class="markdownIt-Anchor" href="#脚本链接"></a> 脚本链接</h2><ul><li><a href="https://github.com/HCLonely/live2d.user.js/raw/master/live2d.user.js">点此安装</a></li></ul><h2 id="模型预览"><a class="markdownIt-Anchor" href="#模型预览"></a> 模型预览</h2><p><a href="https://live2d.hclonely.com/preview.html">https://live2d.hclonely.com/preview.html</a></p><h2 id="详细设置"><a class="markdownIt-Anchor" href="#详细设置"></a> 详细设置</h2><h3 id="设置参数"><a class="markdownIt-Anchor" href="#设置参数"></a> 设置参数</h3><p><em>Tips： 已自带默认参数，如无特殊要求可跳过</em></p><ul><li><p>后端接口</p><ul><li><code>live2d_settings['modelAPI']</code>：看板娘 API 地址，默认值 <code>'default'</code>, 可根据<a href="https://github.com/fghrsh/live2d_api">live2d_api</a>或<a href="https://github.com/HCLonely/live2dNodeApi">live2dNodeApi</a>自建api</li><li><code>live2d_settings['staticAPI']</code>：看板娘模型 API 地址，默认值 <code>''</code>。如果 modelAPI 为 <code>'default'</code>, 则此选项无效</li><li><code>live2d_settings['tipsMessage']</code>：提示语读取路径，暂不可改</li><li><code>live2d_settings['hitokotoAPI']</code>：一言 API 接口，可选 <code>'lwl12.com'</code>，<code>'hitokoto.cn'</code>，<code>'fghrsh.net'</code>，<code>'jinrishici.com'</code> (古诗词)，<code>'rand'</code> (随机)</li></ul></li><li><p>默认模型</p><ul><li><code>live2d_settings['modelId']</code>：默认模型(分组) ID，可 <code>[F12]</code> 呼出 <code>控制台(Console)</code> 找到</li><li><code>live2d_settings['modelTexturesId']</code>：默认材质(模型) ID，可 <code>[F12]</code> 呼出 <code>控制台(Console)</code> 找到</li></ul></li><li><p>工具栏设置</p><ul><li><code>live2d_settings['showToolMenu']</code>：显示工具栏， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canCloseLive2d']</code>：关闭看板娘 按钮，<code>true</code> | <code>false</code></li><li><code>live2d_settings['canSwitchModel']</code>：切换模型 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canSwitchTextures']</code>：切换材质 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canSwitchHitokoto']</code>：切换一言 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canTakeScreenshot']</code>：看板娘截图 按钮，<code>true</code> | <code>false</code></li><li><code>live2d_settings['canTurnToHomePage']</code>：返回首页 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canTurnToAboutPage']</code>：跳转关于页 按钮，<code>true</code> | <code>false</code></li></ul></li><li><p>模型切换模式</p><ul><li><code>live2d_settings['modelStorage']</code>：记录 ID ，<code>true</code> | <code>false</code></li><li><code>live2d_settings['modelRandMode']</code>：模型切换，可选 <code>'rand'</code> (随机) | <code>'switch'</code> (顺序)</li><li><code>live2d_settings['modelTexturesRandMode']</code>：材质切换，可选 <code>'rand'</code> | <code>'switch'</code></li></ul></li><li><p>提示消息选项</p><ul><li><code>live2d_settings['showHitokoto']</code>：空闲时一言，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showF12Status']</code>：控制台显示加载状态，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showF12Message']</code>：提示消息输出到控制台，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showF12OpenMsg']</code>：控制台被打开触发提醒，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showCopyMessage']</code>：内容被复制触发提醒，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showWelcomeMessage']</code>：进入面页时显示欢迎语，<code>true</code> | <code>false</code></li></ul></li><li><p>看板娘样式设置</p><ul><li><code>live2d_settings['waifuSize']</code>：看板娘大小，例如 <code>'280x250'</code>，<code>'600x535'</code></li><li><code>live2d_settings['waifuTipsSize']</code>：提示框大小，例如 <code>'250x70'</code>，<code>'570x150'</code></li><li><code>live2d_settings['waifuFontSize']</code>：提示框字体，例如 <code>'12px'</code>，<code>'30px'</code></li><li><code>live2d_settings['waifuToolFont']</code>：工具栏字体，例如 <code>'14px'</code>，<code>'36px'</code></li><li><code>live2d_settings['waifuToolLine']</code>：工具栏行高，例如 <code>'20px'</code>，<code>'36px'</code></li><li><code>live2d_settings['waifuToolTop']</code>：工具栏顶部边距，例如 <code>'0px'</code>，<code>'-60px'</code></li><li><code>live2d_settings['waifuMinWidth']</code>：面页小于 指定宽度 隐藏看板娘，例如 <code>'disable'</code> (停用)，<code>'768px'</code></li><li><code>live2d_settings['waifuEdgeSide']</code>：看板娘贴边方向，例如 <code>'left:0'</code> (靠左 0px)，<code>'right:30'</code> (靠右 30px)</li><li><code>live2d_settings['waifuDraggable']</code>：拖拽样式，可选 <code>'disable'</code> (禁用)，<code>'axis-x'</code> (只能水平拖拽)，<code>'unlimited'</code> (自由拖拽)</li><li><code>live2d_settings['waifuDraggableRevert']</code>：松开鼠标还原拖拽位置，<code>true</code> | <code>false</code></li><li><code>live2d_settings['waifuDraggableSave']</code>：是否保存拖拽后的位置，刷新后依然生效，需要将上面的选项和下面的选项都设置为<code>false</code>，<code>true</code> | <code>false</code></li><li><code>live2d_settings['waifuDraggableClear']</code>：清空上次保存的位置，<code>true</code> | <code>false</code></li></ul></li><li><p>其他杂项设置</p><ul><li><code>live2d_settings['l2dVersion']</code>：当前版本 (无需修改)</li><li><code>live2d_settings['l2dVerDate']</code>：更新日期 (无需修改)</li><li><code>live2d_settings['homePageUrl']</code>：首页地址，可选 <code>'auto'</code> (自动)，<code>'&#123;URL 网址&#125;'</code></li><li><code>live2d_settings['aboutPageUrl']</code>：关于页地址，<code>'&#123;URL 网址&#125;'</code></li><li><code>live2d_settings['screenshotCaptureName']</code>：看板娘截图文件名，例如 <code>'live2d.png'</code></li></ul></li></ul><h3 id="定制提示语"><a class="markdownIt-Anchor" href="#定制提示语"></a> 定制提示语</h3><p><em>Tips： <code>waifu-tips.json</code> 已自带默认提示语，如无特殊要求可跳过</em></p><ul><li><code>&quot;waifu&quot;</code> 系统提示</li><li><code>&quot;console_open_msg&quot;</code> 控制台被打开提醒（支持多句随机）</li><li><code>&quot;copy_message&quot;</code> 内容被复制触发提醒（支持多句随机）</li><li><code>&quot;screenshot_message&quot;</code> 看板娘截图提示语（支持多句随机）</li><li><code>&quot;hidden_message&quot;</code> 看板娘隐藏提示语（支持多句随机）</li><li><code>&quot;load_rand_textures&quot;</code> 随机材质提示语（暂不支持多句）</li><li><code>&quot;hour_tips&quot;</code> 时间段欢迎语（支持多句随机）</li><li><code>&quot;referrer_message&quot;</code> 请求来源欢迎语（不支持多句）</li><li><code>&quot;referrer_hostname&quot;</code> 请求来源自定义名称（根据 host，支持多句随机）</li><li><code>&quot;model_message&quot;</code> 模型切换欢迎语（根据模型 ID，支持多句随机）</li><li><code>&quot;hitokoto_api_message&quot;</code>，一言 API 输出模板（不支持多句随机）</li><li><code>&quot;mouseover&quot;</code> 鼠标触发提示（根据 CSS 选择器，支持多句随机）</li><li><code>&quot;click&quot;</code> 鼠标点击触发提示（根据 CSS 选择器，支持多句随机）</li><li><code>&quot;seasons&quot;</code> 节日提示（日期段，支持多句随机）</li></ul><h3 id="模式设置"><a class="markdownIt-Anchor" href="#模式设置"></a> 模式设置</h3><p><code>模式切换</code>：英文输入法下依次按下&quot;↑↑↓↓←→←→BABA&quot;(引号不用按，注意是方向键不是 WASD)后可进入互动模式，互动模式下依次按下&quot;ESC&quot;(引号不用按，注意不是&quot;Esc&quot;键而是&quot;E&quot;“S”&quot;C&quot;这三个字母键)后可退出互动模式。<br /><code>状态切换</code>：英文输入法下依次按下&quot;hide&quot;后可隐藏看板娘，隐藏状态下依次按下&quot;show&quot;可再次显示看板娘。</p><p><em>ps:模式切换后会保存（刷新网页后还是刷新前的状态），状态切换后不会保存（刷新网页后恢复默认状态：显示状态）。</em></p><p><code>普通模式</code>：默认为普通模式，此模式下为了浏览网页体验看板娘不可操作（看板娘显示在最前但鼠标可以操作后面的元素）。<br /><code>互动模式</code>：此模式下看板娘显示在最前并且鼠标优先操作看板娘。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Tampermonkey 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> live2d </tag>
            
            <tag> 看板娘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AuTo Redeem Steamkey 脚本</title>
      <link href="/posts/71381355/"/>
      <url>/posts/71381355/</url>
      
        <content type="html"><![CDATA[<h2 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h2><p>复制网页中的 Steamkey 后自动激活。</p><h2 id="脚本链接"><a class="markdownIt-Anchor" href="#脚本链接"></a> 脚本链接</h2><ul><li><a href="https://github.com/HCLonely/user.js/raw/master/AuTo_Redeem_Steamkey.user.js">点此安装</a></li></ul><h2 id="功能介绍"><a class="markdownIt-Anchor" href="#功能介绍"></a> 功能介绍</h2><h3 id="首次使用-30-版本请先设置"><a class="markdownIt-Anchor" href="#首次使用-30-版本请先设置"></a> 首次使用 3.0+ 版本请先设置</h3><ol><li>点击 Tampermonkey 插件图标</li><li>找到 AuTo Redeemer Steamkey 下面的&quot;设置&quot;</li></ol><h3 id="功能-2"><a class="markdownIt-Anchor" href="#功能-2"></a> 功能</h3><ul><li>一键激活页面内所有 key</li><li>第一次点击 key 会给 key 添加超链接，再次点击就可以激活</li><li>复制 key 询问是否激活</li><li>选中 key 显示 steam 图标，点击图标激活</li><li>支持多 key 批量激活</li><li>若一次激活的 Key 的数量超过 9 个则会自动分批激活（等待 20 秒）</li><li>激活完成后显示未使用 key</li><li>支持 ASF 激活(3.0 新增)</li><li><a href="https://store.steampowered.com/account/licenses/">steam 账户页面</a>和<a href="https://store.steampowered.com/account/registerkey">steam 激活页面</a>支持更换国家/地区</li><li><a href="https://store.steampowered.com/account/registerkey">steam 激活页面</a>增加激活 sub,激活礼物卡或钱包充值码(测试)功能</li><li><a href="https://steamdb.info/freepackages/">https://steamdb.info/freepackages/</a>网站点击代码区域后自动复制并跳转到<a href="https://store.steampowered.com/account/licenses/">steam 账户许可页面</a>并激活，开启 ASF 功能后使用<code>!addlicense</code>功能激活</li></ul><h2 id="tampermonkey-菜单"><a class="markdownIt-Anchor" href="#tampermonkey-菜单"></a> Tampermonkey 菜单</h2><h3 id="设置"><a class="markdownIt-Anchor" href="#设置"></a> 设置</h3><h4 id="全局设置"><a class="markdownIt-Anchor" href="#全局设置"></a> 全局设置</h4><ul><li><code>新标签页激活</code>:激活 key/sub 时打开激活页面激活(同 2.X 版本)，默认关闭</li><li><code>开启复制捕捉</code>:复制的内容含有<code>AAAAA-BBBBB-CCCCC</code>格式的内容是询问是否激活，默认开启</li><li><code>开启选中捕捉</code>:选中的文本中含有<code>AAAAA-BBBBB-CCCCC</code>格式的内容是在鼠标光标右下显示 steam 图标，点击图标即激活，默认开启</li><li><code>开启点击捕捉</code>:点击的网页中<code>AAAAA-BBBBB-CCCCC</code>格式的内容是会给次内用添加一个超链接，再次点击即激活，默认开启</li></ul><h4 id="asf-设置"><a class="markdownIt-Anchor" href="#asf-设置"></a> ASF 设置</h4><ul><li><code>ASF IPC协议</code>:<code>http</code>或<code>https</code>,默认<code>http</code></li><li><code>ASF IPC地址</code>:如果是本机运行 ASF 则是<code>127.0.0.1</code>,如果是服务器运行则为服务器 ip 或域名,默认<code>127.0.0.1</code></li><li><code>ASF IPC端口</code>:默认<code>1242</code></li><li><code>ASF IPC密码</code>:你设置的 ASF IPC 密码,默认为空</li><li><code>ASF Bot名字</code>:用来激活 key 的机器人名字,留空则按你 ASF 设置的激活顺序激活,对单账号用户没影响,可留空,默认为空</li><li><code>开启ASF激活</code>:开启后全局设置中的<code>新标签页激活</code>功能无效,开启后激活 key/sub 时使用 ASF 激活，需配置好以上 ASF 配置</li></ul><h3 id="asf-连接测试"><a class="markdownIt-Anchor" href="#asf-连接测试"></a> ASF 连接测试</h3><ul><li>需开启 ASF 激活功能并配置好 ASF,尝试向 ASF 发送<code>!stats</code>命令，如果返回内存用量则为连接成功</li></ul><h3 id="执行-asf-命令"><a class="markdownIt-Anchor" href="#执行-asf-命令"></a> 执行 ASF 命令</h3><ul><li>可远程执行 ASF 命令</li><li>提供 ASF 命令查询功能</li></ul><h3 id="查看上次激活记录"><a class="markdownIt-Anchor" href="#查看上次激活记录"></a> 查看上次激活记录</h3><ul><li>可以查看最近一次激活 key 的记录</li></ul><h3 id="key-格式转换"><a class="markdownIt-Anchor" href="#key-格式转换"></a> key 格式转换</h3><ul><li>可以将 key 转换成一下两种格式：</li></ul><ol><li><code>key</code><br /><code>key</code><br /><code>key</code></li><li><code>key,key,key</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Tampermonkey 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> steam </tag>
            
            <tag> 脚本 </tag>
            
            <tag> key </tag>
            
            <tag> steam 激活码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Key 站自动任务脚本（V2.0+）</title>
      <link href="/posts/777c60d5/"/>
      <url>/posts/777c60d5/</url>
      
        <content type="html"><![CDATA[<div class="badge"></div><p><img src="https://img.shields.io/badge/code_style-standard-brightgreen.svg" alt="JavaScript Style Guide" /><img src="https://img.shields.io/badge/Chrome-%3E%3D%2058-blue" alt="Chrome &gt;= 58" /><img src="https://img.shields.io/github/license/HCLonely/auto-task" alt="GitHub" /><img src="https://img.shields.io/github/workflow/status/HCLonely/auto-task/Test" alt="GitHub Workflow Status" /><img src="https://img.shields.io/github/v/release/HCLonely/auto-task" alt="GitHub release (latest by date)" /><img src="https://img.shields.io/github/release-date/HCLonely/auto-task" alt="GitHub Release Date" /><img src="https://img.shields.io/jsdelivr/gh/hm/HCLonely/auto-task" alt="jsDelivr hits (GitHub)" /><img src="https://img.shields.io/github/languages/count/HCLonely/auto-task" alt="GitHub language count" /><img src="https://img.shields.io/github/languages/top/HCLonely/auto-task" alt="GitHub top language" /><img src="https://img.shields.io/github/size/HCLonely/auto-task/auto-task.user.js" alt="GitHub file size in bytes" /><img src="https://img.shields.io/github/languages/code-size/HCLonely/auto-task" alt="GitHub code size in bytes" /><img src="https://img.shields.io/github/repo-size/HCLonely/auto-task" alt="GitHub repo size" /><img src="https://img.shields.io/github/issues/HCLonely/auto-task" alt="GitHub issues" /><img src="https://img.shields.io/github/commit-activity/m/HCLonely/auto-task" alt="GitHub commit activity" /><img src="https://img.shields.io/github/last-commit/HCLonely/auto-task" alt="GitHub last commit" /><img src="https://img.shields.io/github/stars/HCLonely/auto-task?style=flat" alt="GitHub stars" /></p><div id="badge-container-HCLonely-auto-task-ffaf51a" class="hexo-github" style="width: 100%"></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-HCLonely-auto-task-ffaf51a", "HCLonely", "auto-task", "ffaf51a", false);</script><div class="tip inlineBlock warning">            <p>本文为 2.0+ 版本的使用文档，3.0 以上版本的使用文档<a href="https://auto-task-doc.js.org/">点此查看</a>。</p>          </div><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><ol><li>安装 <a href="https://www.tampermonkey.net/">Tampermonkey</a></li><li>安装 <a href="https://auto-task.hclonely.com/auto-task.user.js">auto-task</a> 脚本</li><li>首次使用建议先 <a href="https://auto-task.hclonely.com/setting.html">设置</a></li><li>如果弹出 <code>一个用户脚本试图访问跨源资源</code>, 请点击 <code>总是允许全部域名</code></li></ol><p><strong>如果脚本出现 BUG, 请先检查脚本是否为最新版, 如果不是请更新到最新版。</strong></p><p><strong>如果更新脚本后出现 BUG, 可以先前往 <code>https://cdn.jsdelivr.net/gh/HCLonely/auto-task@version/auto-task.user.js</code>(<em>把<code>version</code>改为上一个版本的版本号, 例: <code>https://cdn.jsdelivr.net/gh/HCLonely/auto-task@2.2.6/auto-task.user.js</code></em>) 安装之前的版本(仅支持 2.2.5 之后的版本), 然后反馈 BUG, 等待修复。</strong></p><h2 id="每个按钮功能"><a class="markdownIt-Anchor" href="#每个按钮功能"></a> 每个按钮功能</h2><ul><li><code>Fuck</code>, <code>Join</code>, <code>Verify</code>, <code>Remove</code> 按钮功能请前往<a href="https://auto-task.hclonely.com/setting.html">设置页面</a>查看</li><li><code>Showlogs</code>, <code>Hidelogs</code> 按钮: 显示/隐藏右下角日志</li><li>右下角的<code>清理缓存</code>功能: 脚本每次做完任务后会保存任务信息以便使用<code>Remove</code>功能, 如果提示<code>所有任务已完成</code>但没有做任何任务可以尝试<code>清理缓存</code>, 然后刷新一下再做任务, <code>清理缓存</code>后会导致之前做过的任务无法<code>Remove</code></li></ul><h2 id="常见问题解决办法"><a class="markdownIt-Anchor" href="#常见问题解决办法"></a> 常见问题解决办法</h2><ol><li><p><code>giveaway.su</code>网站<code>0000-0000-0000</code>问题</p><p>解决办法：用脚本做完任务后关闭脚本管理器和广告屏蔽插件，然后刷新网页手动验证任务</p></li><li><p><code>givekey.su</code>网站人机验证问题</p><p>解决办法：每次点击<code>Fuck</code>按钮前都要手动完成人机验证</p></li><li><p><code>givekey.su</code>网站 wss 连接出错</p><p>解决办法：参考<a href="https://github.com/HCLonely/auto-task/issues/8">#8</a></p></li><li><p>设置页面打不开</p><p>解决办法：CODING 服务器抽风了，挂代理或等一段时间</p></li></ol><h2 id="适用网站"><a class="markdownIt-Anchor" href="#适用网站"></a> 适用网站</h2><ul><li><a href="https://giveaway.su/">giveaway.su</a></li><li><a href="https://marvelousga.com/">marvelousga</a></li><li><a href="https://dupedornot.com/">dupedornot</a></li><li><a href="https://www.grabfreegame.com/">grabfreegame</a></li><li><a href="https://www.bananagiveaway.com/">bananagiveaway</a></li><li><s><a href="https://gamecode.win/">gamecode.win</a></s></li><li><a href="https://gamehag.com/giveaway">gamehag</a></li><li><a href="https://prys.revadike.com/">prys</a></li><li><a href="https://www.indiedb.com/giveaways">indiedb</a></li><li><a href="https://givekey.ru/">givekey</a>(需要将语言设置为&quot;English&quot;或&quot;Русский&quot;)</li><li><a href="https://takekey.ru/">takekey</a></li><li><a href="https://freegamelottery.com/">freegamelottery</a></li><li><a href="http://gleam.io/">gleam.io</a></li><li><a href="https://www.spoune.com/index.php">spoune</a></li></ul><h2 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h2><ul><li><p>自动完成 Steam 任务：</p><ul><li>加组</li><li>加愿望单</li><li>关注游戏</li><li>关注鉴赏家</li><li>关注发行商（仅限<a href="https://giveaway.su/">giveaway.su</a>）</li><li>关注开发商（仅限<a href="https://giveaway.su/">giveaway.su</a>）</li><li>点赞社区公告（仅限<a href="https://giveaway.su/">giveaway.su</a>）</li></ul></li><li><p>自动退出 Steam 任务：</p><ul><li>退组</li><li>移除愿望单</li><li>取关游戏</li><li>取关鉴赏家</li><li>取关发行商（仅限<a href="https://giveaway.su/">giveaway.su</a>）</li><li>取关开发商（仅限<a href="https://giveaway.su/">giveaway.su</a>）</li></ul></li><li><p>自动访问链接</p></li><li><p>验证任务</p></li><li><p>检测是否登录（如果需要登录）</p></li><li><p>检测是否剩余 key</p></li><li><p>没完成的任务或脚本无法完成的任务自动打开任务页面以便手动完成</p></li><li><p>自动检测更新</p></li><li><p>导出导入设置</p></li></ul><p><strong><span style="color: #ff0000;">以上功能默认情况下并不是全部开启的，详细设置请前往<a href="https://userjs.hclonely.com/setting.html">设置页面</a>，设置完别忘了保存！！！</span></strong></p><p><strong><span style="color: #ff0000;">首次使用 2.0+版本建议先设置！</span></strong></p><h2 id="反馈方式"><a class="markdownIt-Anchor" href="#反馈方式"></a> 反馈方式</h2><ol><li>在<a href="https://github.com/HCLonely/auto-task/issues/new/choose">GitHub</a>提交</li><li>前往<a href="https://keylol.com/t455167-1-1">其乐（原蒸汽动力）论坛</a>提交</li><li>本帖下方评论</li></ol><h2 id="更新公告"><a class="markdownIt-Anchor" href="#更新公告"></a> 更新公告</h2><p><a href="https://auto-task-doc.js.org/logs/">https://auto-task-doc.js.org/logs/</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Tampermonkey 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> steam </tag>
            
            <tag> 脚本 </tag>
            
            <tag> key </tag>
            
            <tag> 自动任务 </tag>
            
            <tag> steam 激活码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome 插件推荐</title>
      <link href="/posts/72a59031/"/>
      <url>/posts/72a59031/</url>
      
        <content type="html"><![CDATA[<p><strong>这里推荐一些好用的谷歌浏览器(Chrome)插件</strong></p><h2 id="adblock-最佳广告拦截工具"><a class="markdownIt-Anchor" href="#adblock-最佳广告拦截工具"></a> AdBlock — 最佳广告拦截工具</h2><p><strong>在 YouTube、Facebook、Twitch 和其他你喜爱的网站上拦截广告和弹窗。</strong></p><p>AdBlock 是最好的广告拦截工具，拥有超过 6000 万用户，也是最受欢迎的 Chrome 扩展程序之一，下载量超过 3.5 亿次！</p><p><em>功能特色：</em></p><ul><li>☆ 拦截 YouTube、Facebook、Twitch 和所有您喜爱的网站上的弹出窗口、广告和恼人的横幅广告（就连视频广告也可以移除！）</li><li>☆ 拦截第三方跟踪代码并保护您的隐私</li><li>☆ 拦截带有恶意软件、诈骗内容和加密货币挖矿代码的恶意广告，让您安全浏览</li><li>☆ 缩短页面加载时间，享受更快的网络</li><li>☆ 通过滤镜、白名单、深色模式和其他丰富多彩的主题自定义您的体验</li><li>☆ AdBlock 团队提供快速、友好的支持，以及强大的帮助中心，使您能够独立排除故障</li></ul><p><a href="https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom">安装链接</a></p><h2 id="tampermonkey"><a class="markdownIt-Anchor" href="#tampermonkey"></a> Tampermonkey</h2><p><strong>Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器，它适用于 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox。</strong></p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">安装链接</a></p><h2 id="扩展管理器extension-manager"><a class="markdownIt-Anchor" href="#扩展管理器extension-manager"></a> 扩展管理器（Extension Manager）</h2><p><strong>一键管理所有扩展，快速开启/禁用、批量闪电管理，智能排序，右键卸载、锁定、选项配置，角标提醒，大小布局随心配。快捷、简单、安全。</strong><br /><em>特征：</em></p><ul><li>一键开启/禁用扩展</li><li>闪电分组：根据场景快速开启/禁用扩展组（被锁定或主题类扩展除外）</li><li>智能排序：可根据您的使用频率智能排序（默认根据名称排序）</li><li>右键菜单：提供锁定、卸载、选项配置、主页、APP 运行等快捷功能</li><li>智能搜索：通过关键字或词组快速找到需要的扩展</li><li>角标提醒：实时显示扩展状态，用完后提醒重置，减少资源占用（被锁定或主题类扩展除外）</li><li>视图选择：提供列表视图和网格视图，符合用户习惯<br /><a href="https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco">安装链接</a></li></ul><h2 id="stylus"><a class="markdownIt-Anchor" href="#stylus"></a> Stylus</h2><p><strong>Stylus 是一个调整网页外观的用户样式管理器。它可让您轻松地为许多热门网站网站安装主题和皮肤。</strong></p><p><a href="https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne">安装链接</a></p><h2 id="checker-plus-for-gmailtm"><a class="markdownIt-Anchor" href="#checker-plus-for-gmailtm"></a> Checker Plus for Gmail™</h2><p><strong>无需打开 Gmail 或 Inbox，即可收到桌面邮件通知，方便地查看、收听或删除邮件，并且支持多账户。</strong></p><p><em>和同类扩展程序相比，优势在于:</em></p><ul><li>更多特性和选项！</li><li>更优秀的客户支持服务！我会根据你们的建议增加新特性。</li><li>更实时的更新！可参见下方的版本更新记录。</li><li>最快捷、简便的方式来管理多个电子邮件帐户</li><li>更安全 - 权限要求更少，相比其他扩展。</li><li>高评分 - 谷歌应用商店中评分最高的扩展程序之一！太赞了，感谢评分的各位用户！</li></ul><p><em>特性：</em></p><ul><li>[新增]采用 Gmail 聊天提醒中的联系人呈现方式，让您可以选择显示他们的照片或者为他们添加自定义头像</li><li>[新增]语音提醒:当收到新邮件而您正收看电影或者忙于烹制晚餐时，您可以选择让电脑大声朗读邮件，可以包括发件人、邮件标题、甚至邮件正文。例如:“Jason 发来邮件”，或者&quot;Jason 说，到我家来吃饭吧&quot;。这项功能也有益于那些视力障碍者。</li><li>[新增]扩展程序可以根据您的设置监测:所有新邮件、收件箱中的新邮件、或者有特定标签的新邮件</li><li>[新增]您可以让扩展程序即使在 Chrome 关闭时依旧在后台运行</li><li>[新增]在弹出窗口中对邮件进行缩放以显示大尺寸图片</li><li>您无需打开 Gmail 网页，可直接在弹出窗口中阅读、存档、标记已读或删除邮件（此选项也可关闭，程序将直接引导您前往 Gmail 网页进行相关操作）</li><li>当收到新邮件时，获得桌面音效或语音通知。（您甚至可以录制自己的语音通知）</li><li>支持 Gmail 和 Google 企业应用服务帐户的多重登录功能</li><li>您可以选择使用 Gmail 打开所有 mailto 链接，取代常用的邮件客户端。</li><li>扩展图标有 10 多种式样供您选择！</li><li>您可以为扩展程序添加新的语音引擎来朗读邮件</li><li>最重要的是，您拥有了最快的方式来&quot;清除&quot;收件箱中的未读邮件！</li></ul><p><a href="https://chrome.google.com/webstore/detail/checker-plus-for-gmail/oeopbcgkkoapgobdbedcemjljbihmemj">安装链接</a></p><h2 id="editthiscookie"><a class="markdownIt-Anchor" href="#editthiscookie"></a> EditThisCookie</h2><p><strong>EditThisCookie 是一个 cookie 管理器。您可以添加，删除，编辑，搜索，锁定和屏蔽 cookies！</strong></p><p><em>特性：</em></p><ul><li>★ 编辑 cookies</li><li>★ 删除 cookies</li><li>★ 添加一个新的 cookie</li><li>★ 创建 cookies</li><li>★ 搜索 cookies</li><li>★ 保护 cookies (只读 cookies)</li><li>★ 拦截 cookies (cookie 过滤器)</li><li>★ 导出 cookies 为 JSON, Netscape cookie 文档 (非常适合 wget 及 curl), Perl::LPW</li><li>★ 导入 JSON 格式 cookies</li><li>★ 限制任何 cookie 的最大有效期</li><li>★ 改进性能，移除旧的 cookies</li><li>★ 导入 cookies.txt</li></ul><p><a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg">安装链接</a></p><h2 id="enhanced-github"><a class="markdownIt-Anchor" href="#enhanced-github"></a> Enhanced GitHub</h2><p><strong>显示仓库大小，每个文件的大小，下载链接和复制文件内容的选项</strong></p><p><em>特征：</em></p><ul><li>显示仓库大小</li><li>显示每个活动分支中的每个文件大小（不适用于文件夹/符号链接）</li><li>显示每个文件的下载链接（不适用于文件夹/符号链接）</li><li>将文件内容直接复制到剪贴板（对于 markdown 文件不起作用）</li><li>在查看文件内容的同时下载文件</li></ul><p><a href="https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd">安装链接</a></p><h2 id="fehelperjson"><a class="markdownIt-Anchor" href="#fehelperjson"></a> FeHelper.JSON</h2><p><strong>JSON 自动格式化、手动格式化，支持排序、解码、下载等，更多功能可在配置页动态安装！</strong></p><p><a href="https://chrome.google.com/webstore/detail/fehelperjson/pkgccpejnmalmdinmhkkfafefagiiiad">安装链接</a></p><h2 id="git-history-browser-extension"><a class="markdownIt-Anchor" href="#git-history-browser-extension"></a> Git History Browser Extension</h2><p><strong>向 github 添加按钮以查看文件历史记录</strong></p><p><a href="https://chrome.google.com/webstore/detail/git-history-browser-exten/laghnmifffncfonaoffcndocllegejnf">安装链接</a></p><h2 id="hitup-find-top-things"><a class="markdownIt-Anchor" href="#hitup-find-top-things"></a> HitUP - Find Top Things</h2><p><strong>在新标签页中显示重要内容，例如 GitHub 仓库趋势等</strong></p><p><a href="https://chrome.google.com/webstore/detail/hitup-find-top-things/eiokaohkigpbonodjcbjpecbnccijkjb">安装链接</a></p><h2 id="octotree"><a class="markdownIt-Anchor" href="#octotree"></a> Octotree</h2><p><em>特征：</em></p><ul><li>易于浏览的代码树，就像在 IDE 中一样</li><li>使用 pjax 快速浏览文件</li><li>显示拉取请求更改</li><li>支持私有仓库</li></ul><p><em>专业功能（要求登录帐户和/或在https://www.octotree.io/上订阅）:</em></p><ul><li>增强的代码审查功能</li><li>多种语法主题支持</li><li>查看整个拉取请求已更改的文件</li><li>拉取请求，仓库，发布和文件书签</li><li>仓库缓存（提高大型仓库的性能）</li></ul><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc">安装链接</a></p><h2 id="rsshub-radar"><a class="markdownIt-Anchor" href="#rsshub-radar"></a> RSSHub Radar</h2><p><strong>RSSHub Radar 是 RSSHub 的衍生项目，她可以帮助你快速发现和订阅当前网站的 RSS 和 RSSHub</strong></p><p><a href="https://chrome.google.com/webstore/detail/rsshub-radar/kefjpfngnndepjbopdmoebkipbgkggaa">安装链接</a></p><h2 id="standardized-screenshot"><a class="markdownIt-Anchor" href="#standardized-screenshot"></a> Standardized Screenshot</h2><p><strong>标准化的屏幕截图</strong></p><p><a href="https://chrome.google.com/webstore/detail/standardized-screenshot/pabdhaakclnechgfhmnhkcbmjobeoope">安装链接</a></p><h2 id="新浪微博图床"><a class="markdownIt-Anchor" href="#新浪微博图床"></a> 新浪微博图床</h2><p><strong>简单好用的新浪微博图床,支持选择/拖拽/粘贴上传图片,并生成图片地址,HTML,UBB 和 Markdown 等格式,支持浏览和删除历史记录</strong></p><p><em>特征：</em></p><ul><li>支持点选/拖拽/本地粘贴 3 种方式上传图片至新浪微博图床</li><li>支持批量上传</li><li>支持生成图片地址,HTML,UBB 和 Markdown 四种格式</li><li>支持本地保存和删除上传历史</li><li>支持在常用在线 markdown 编辑器中使用 ctrl+v 粘贴图片，图片自动上传到微博图床。(目前已支持 github，csdn 及 zybuluo 的 markdown 在线编辑器)</li><li>支持 https 模式</li><li>支持自定义 Chrome 菜单栏图标</li></ul><p><a href="https://chrome.google.com/webstore/detail/%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/fdfdnfpdplfbbnemmmoklbfjbhecpnhf">安装链接</a></p><h2 id="aria2-for-chrome"><a class="markdownIt-Anchor" href="#aria2-for-chrome"></a> Aria2 for Chrome</h2><p><strong>Aria2 Web UI 支持手动添加和自动拦截下载任务到 Aria2。（分叉自 YAAW）</strong></p><p><a href="https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn">安装链接</a></p><h2 id="autojoin-for-steamgifts"><a class="markdownIt-Anchor" href="#autojoin-for-steamgifts"></a> AutoJoin for SteamGifts</h2><p><strong><a href="http://Steamgifts.com">Steamgifts.com</a> 自动加入抽奖和网站增强工具</strong></p><p><em>功能特色：</em></p><ul><li>自动加入抽奖</li><li>无限滚动</li><li>在首页添加加入和退出抽奖按钮</li><li>改善隐藏抽奖</li><li>隐藏所有 DLC 抽奖</li><li>夜间主题</li></ul><p><a href="https://chrome.google.com/webstore/detail/autojoin-for-steamgifts/bchhlccjhoedhhegglilngpbnldfcidc">安装链接</a></p><h2 id="steam-database"><a class="markdownIt-Anchor" href="#steam-database"></a> Steam Database</h2><p><strong>在 Steam 社区和商店中添加 Steam 数据库链接和新功能</strong></p><p><em>特征：</em></p><ul><li>在 Steam 站点之间添加到 SteamDB 的链接</li><li>在商店页面上显示史低价格</li><li>在游戏页面上显示在线统计</li><li>库存中的快速出售按钮</li><li>在商店跳过年龄检查</li><li>自动接受市场交易</li><li>删除链接过滤器链接</li><li>在 <a href="http://steamdb.info">steamdb.info</a> 上突出显示您拥有的游戏，DLC 和软件包</li><li>其他许多较小的调整和功能</li></ul><p><a href="https://chrome.google.com/webstore/detail/steam-database/kdbmhfkmnlmbkgbabkdealhhbfhlmmon">安装链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 浏览器插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
            <tag> 插件 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aria2 WebUI 界面搭建</title>
      <link href="/posts/4b4a0e66/"/>
      <url>/posts/4b4a0e66/</url>
      
        <content type="html"><![CDATA[<p><strong>Aria2 是没有图形界面的，这里介绍几款 WebUI 界面。</strong></p><h2 id="webui-aria2"><a class="markdownIt-Anchor" href="#webui-aria2"></a> WebUI-Aria2</h2><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/joDMRI.webp" alt="WebUI-Aria2" /></p><h3 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h3><ol><li>运行 Aria2 并开启 RPC 模式(配置文件中开启)</li><li>打开<a href="https://aria2.hclonely.com/WebUI-Aria2/index.html">Demo 网址</a>或自己搭建的网址</li><li>点击“设置”→“链接设置”配置好 Aria2 RPC 主机和端口并保存</li><li>右上角提示“通过 RPC 连接到 Aria2 成功！”就可以了</li></ol><h3 id="搭建到本地或服务器"><a class="markdownIt-Anchor" href="#搭建到本地或服务器"></a> 搭建到本地或服务器</h3><ol><li><p>下载源码</p><ul><li><a href="https://github.com/ziahamza/webui-aria2">GitHub 官方下载</a></li><li><a href="https://aria2.hclonely.com/download/WebUI-Aria2.zip">备用下载</a></li></ul></li><li><p>将下载的压缩文件里的 docs 文件夹解压到本地或服务器</p></li><li><p>搭建到本地的话直接浏览器打开 docs 文件夹里的 index.html 即可</p></li><li><p>搭建到服务器的话根据你解压的目录打开相应的网址即可</p></li></ol><h2 id="ariang"><a class="markdownIt-Anchor" href="#ariang"></a> AriaNg</h2><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/eUyzCN.webp" alt="AriaNg" /></p><h3 id="使用方法-2"><a class="markdownIt-Anchor" href="#使用方法-2"></a> 使用方法</h3><ol><li>运行 Aria2 并开启 RPC 模式(配置文件中开启)</li><li>打开<a href="https://aria2.hclonely.com/AriaNg/index.html">Demo 网址</a>或自己搭建的网址</li><li>点击“AriaNg 设置”→“RPC(******:6800)”配置好 Aria2 RPC 主机和端口并保存</li><li>右上角提示“localhost:6800 连接成功”就可以了</li></ol><h3 id="搭建到本地或服务器-2"><a class="markdownIt-Anchor" href="#搭建到本地或服务器-2"></a> 搭建到本地或服务器</h3><ol><li><p>下载 releases（本地搭建建议下载&quot;AllInOne&quot;版本）</p><ul><li><a href="https://github.com/mayswind/AriaNg/releases">GitHub 官方下载</a></li><li><a href="https://aria2.hclonely.com/download/AriaNg.zip">备用下载 1</a></li><li><a href="https://aria2.hclonely.com/download/AriaNg-AllInOne.zip">备用下载 2(AllInOne)</a></li></ul></li><li><p>将下载的压缩文件解压到本地或服务器</p></li><li><p>搭建到本地的话直接浏览器打开&quot;index.html&quot;即可</p></li><li><p>搭建到服务器的话根据你解压的目录打开相应的网址即可</p></li></ol><h2 id="yaaw"><a class="markdownIt-Anchor" href="#yaaw"></a> YAAW</h2><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/jqMOPs.webp" alt="YAAW" /></p><h3 id="使用方法-3"><a class="markdownIt-Anchor" href="#使用方法-3"></a> 使用方法</h3><ol><li>运行 Aria2 并开启 RPC 模式(配置文件中开启)</li><li>打开<a href="https://aria2.hclonely.com/yaaw/index.html">Demo 网址</a>或自己搭建的网址；</li><li>点击右上角“?”配置好 Aria2 RPC 主机和端口并保存（不支持 RPC 密钥）</li><li>提示“Saved!”就可以了</li></ol><h3 id="搭建到本地或服务器-3"><a class="markdownIt-Anchor" href="#搭建到本地或服务器-3"></a> 搭建到本地或服务器</h3><ol><li><p>下载源码</p><ul><li><a href="https://github.com/ghostry/yaaw">GitHub 官方下载</a></li><li><a href="https://aria2.hclonely.com/download/yaaw.zip">备用下载</a></li></ul></li><li><p>将下载的压缩文件解压到本地或服务器</p></li><li><p>搭建到本地的话直接浏览器打开&quot;index.html&quot;即可</p></li><li><p>搭建到服务器的话根据你解压的目录打开相应的网址即可</p></li></ol><h2 id="photon-webui"><a class="markdownIt-Anchor" href="#photon-webui"></a> Photon-WebUI</h2><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/N1MlhE.webp" alt="Photon-WebUI" /></p><h3 id="使用方法-4"><a class="markdownIt-Anchor" href="#使用方法-4"></a> 使用方法</h3><ol><li>运行 Aria2 并开启 RPC 模式(配置文件中开启)</li><li>打开<a href="https://aria2.hclonely.com/Photon-WebUI/index.html">Demo 网址</a>或自己搭建的网址</li><li>点击“设置”配置好 Aria2 RPC 主机和端口</li><li>状态显示“已连接”就可以了</li></ol><h3 id="搭建到本地或服务器-4"><a class="markdownIt-Anchor" href="#搭建到本地或服务器-4"></a> 搭建到本地或服务器</h3><ol><li><p>下载源码</p><ul><li><a href="https://github.com/alanzhangzm/Photon-WebUI">GitHub 官方下载</a></li><li><a href="http://aria2.hclonely.com/download/Photon-WebUI-0.2.0.zip">备用下载</a></li></ul></li><li><p>将下载的压缩文件里的”docs”文件夹解压到本地或服务器</p></li><li><p>搭建到本地的话直接浏览器打开”docs”文件夹里的”index.html”即可</p></li><li><p>搭建到服务器的话根据你解压的目录打开相应的网址即可</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Aria2 </tag>
            
            <tag> WebUI </tag>
            
            <tag> 图形界面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJs 读取某目录下所有目录和文件名</title>
      <link href="/posts/a3dcda7b/"/>
      <url>/posts/a3dcda7b/</url>
      
        <content type="html"><![CDATA[<p><strong>代码如下：</strong></p><pre class="highlight"><code class="javascript"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">"path"</span>);<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">"fs"</span>);<span class="hljs-keyword">const</span> pathName = <span class="hljs-string">"./"</span>;<span class="hljs-comment">//要读取的文件夹路径，windows系统路径"\"要转义，如："C:\\Users\\user\\Desktop"</span>fs.readdir(pathName, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, files</span>)</span>&#123;    <span class="hljs-keyword">let</span> fileArr = [];    <span class="hljs-keyword">let</span> dirArr = [];    <span class="hljs-keyword">let</span> otherArr = [];    (<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">iterator</span>(<span class="hljs-params">i</span>)</span>&#123;        <span class="hljs-keyword">if</span>(i == files.length) &#123;<span class="hljs-comment">//读取完成输出</span>            <span class="hljs-built_in">console</span>.log(&#123;<span class="hljs-string">"files"</span>:fileArr,<span class="hljs-string">"dirs"</span>:dirArr,<span class="hljs-string">"others"</span>:otherArr&#125;);            <span class="hljs-keyword">return</span> ;        &#125;        fs.stat(path.join(pathName, files[i]), <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>)</span>&#123;            <span class="hljs-keyword">if</span>(data.isFile())&#123;<span class="hljs-comment">//判断是否为文件</span>                fileArr.push(path.extname(files[i]));            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data.isDirectory())&#123;<span class="hljs-comment">//判断是否为文件夹/目录</span>                dirArr.push(files[i]);            &#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-comment">//其他类型，如快捷方式</span>                otherArr.push(files[i]);            &#125;            iterator(i+<span class="hljs-number">1</span>);        &#125;);    &#125;)(<span class="hljs-number">0</span>);&#125;);</code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> NodeJs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NodeJs </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用 bat 脚本</title>
      <link href="/posts/d92292e2/"/>
      <url>/posts/d92292e2/</url>
      
        <content type="html"><![CDATA[<h2 id="将所有子文件夹里的文件上移一层"><a class="markdownIt-Anchor" href="#将所有子文件夹里的文件上移一层"></a> 将所有子文件夹里的文件上移一层</h2><h3 id="覆盖同名文件"><a class="markdownIt-Anchor" href="#覆盖同名文件"></a> 覆盖同名文件</h3><pre class="highlight"><code class="bash">@<span class="hljs-built_in">echo</span> off(<span class="hljs-keyword">for</span> /f <span class="hljs-string">"delims="</span> %%a <span class="hljs-keyword">in</span> (<span class="hljs-string">'dir /b /s /ad'</span>) <span class="hljs-keyword">do</span> (        move /y <span class="hljs-string">"%%a\*.*"</span> <span class="hljs-string">"%%a\.."</span>&amp;&amp;rd %%a))&gt;nul 2&gt;nul<span class="hljs-keyword">for</span> /f <span class="hljs-string">"delims="</span> %%i <span class="hljs-keyword">in</span> (<span class="hljs-string">'dir /ad /b /s^|sort /r'</span>) <span class="hljs-keyword">do</span> rd /q <span class="hljs-string">"%%i"</span> 2&gt;nulpause</code></pre><h3 id="选择是否覆盖同名文件"><a class="markdownIt-Anchor" href="#选择是否覆盖同名文件"></a> 选择是否覆盖同名文件</h3><pre class="highlight"><code class="bash">@<span class="hljs-built_in">echo</span> off(<span class="hljs-keyword">for</span> /f <span class="hljs-string">"delims="</span> %%a <span class="hljs-keyword">in</span> (<span class="hljs-string">'dir /b /s /ad'</span>) <span class="hljs-keyword">do</span> (        move /-y <span class="hljs-string">"%%a\*.*"</span> <span class="hljs-string">"%%a\.."</span>&amp;&amp;rd %%a))&gt;nul 2&gt;nul<span class="hljs-keyword">for</span> /f <span class="hljs-string">"delims="</span> %%i <span class="hljs-keyword">in</span> (<span class="hljs-string">'dir /ad /b /s^|sort /r'</span>) <span class="hljs-keyword">do</span> rd /q <span class="hljs-string">"%%i"</span> 2&gt;nulpause</code></pre><h2 id="将当前文件夹里子文件夹里的文件移动到all文件夹"><a class="markdownIt-Anchor" href="#将当前文件夹里子文件夹里的文件移动到all文件夹"></a> 将当前文件夹里子文件夹里的文件移动到<code>all</code>文件夹</h2><pre class="highlight"><code class="bash"><span class="hljs-keyword">for</span> /f <span class="hljs-string">"delims="</span> %%p <span class="hljs-keyword">in</span> (<span class="hljs-string">'dir /b/ad'</span>) <span class="hljs-keyword">do</span> move %%p\*.* all\pause</code></pre>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux ownCloud 私有云搭建</title>
      <link href="/posts/c733a53b/"/>
      <url>/posts/c733a53b/</url>
      
        <content type="html"><![CDATA[<p><strong>关于 ownCloud<br />  ownCloud 是一个开源免费专业的私有云存储项目，它能帮你快速在个人电脑或服务器上架设一套专属的私有云文件同步网盘，可以像 百度云那样实现文件跨平台同步、共享、版本控制、团队协作等等。ownCloud 能让你将所有的文件掌握在自己的手中，只要你的设备性能和空间充足，那么用起来几乎没有任何限制。<br />  ownCloud 支持 <em>Windows</em>、<em>Mac</em>、<em>Android</em>、<em>iOS</em>、<em>Linux</em> 等平台，而且还提供了网页版和 WebDAV 形式访问，因此你可以在任何电脑、手机上都能轻松获取你的文件。<br />  本篇文章主要介绍了如何在 LNMP 环境下搭建 ownCloud.</strong></p><h2 id="需求环境括号内为博主使用的环境基于宝塔面板安装"><a class="markdownIt-Anchor" href="#需求环境括号内为博主使用的环境基于宝塔面板安装"></a> 需求环境(括号内为博主使用的环境，基于宝塔面板安装)</h2><ul><li>系统: CentOS Linux 7+(CentOS Linux 7.2.1511 64bit)</li><li>web 服务器: Nginx 1.16+(Nginx 1.16.1)</li><li>数据库: MySQL 5.5+(MySQL 5.5.62)</li><li>PHP: 5.6&lt;PHP&lt;7.3(PHP 7.2)<ul><li>额外 PHP 扩展(括号内为建议安装):acpu,redis,fileinfo(opcache,memcache,memcached)</li></ul></li></ul><h2 id="安装-owncloud"><a class="markdownIt-Anchor" href="#安装-owncloud"></a> 安装 ownCloud</h2><ol><li><p>安装<em>dnf</em>包(系统内已安装可跳过此步骤):</p><p><code>yum install dnf</code></p></li><li><p>安装<em>dnf config-manager</em>命令(系统内已安装可跳过此步骤):</p><p><code>dnf install 'dnf-command(config-manager)'</code></p></li><li><p>添加新的 ownCloud 软件源:</p><p><code>rpm --import https://download.owncloud.org/download/repositories/production/CentOS_7/repodata/repomd.xml.key</code></p></li><li><p>安装 ownCloud-files:</p><pre class="highlight"><code class="shell">dnf config-manager --add-repo  http://download.owncloud.org/download/repositories/production/CentOS_7/ce:stable.repodnf clean alldnf install owncloud-files</code></pre></li><li><p>检查是否安装成功:</p><p>如果<code>/var/www/html</code>文件夹内有<code>owncloud</code>文件夹，说明安装成功。</p></li><li><p>修改根目录(可选)</p><p>直接复制<code>owncloud</code>文件夹到目标文件夹即可(<strong>要保留一份后面可能会用到</strong>)</p></li></ol><h2 id="添加网站"><a class="markdownIt-Anchor" href="#添加网站"></a> 添加网站</h2><p>将网站根目录指向<code>.../owncloud</code>即可:</p><pre class="highlight"><code class="conf">server&#123;    listen 80;    server_name 你的服务器ip或域名;    index index.php index.html index.htm default.php default.htm default.html;    root .../owncloud/;    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则    #error_page 404/404.html;    #SSL-END    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改    #error_page 404 /404.html;    #error_page 502 /502.html;    #ERROR-PAGE-END    #PHP-INFO-START  PHP引用配置，可以注释或修改    include enable-php-72.conf;    #PHP-INFO-END    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效    include /www/server/panel/vhost/rewrite/your.conf;    #REWRITE-END    #禁止访问的文件或目录    location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)    &#123;        return 404;    &#125;    #防盗链配置    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$    &#123;        expires      30d;        error_log off;        access_log /dev/null;    &#125;    location ~ .*\.(js|css)?$    &#123;        expires      12h;        error_log off;        access_log /dev/null;    &#125;    access_log  /www/wwwlogs/your.log;    error_log  /www/wwwlogs/your.error.log;&#125;</code></pre><h2 id="创建数据库"><a class="markdownIt-Anchor" href="#创建数据库"></a> 创建数据库</h2><p>创建数据库并记住数<code>据库名</code>,<code>用户名</code>,<code>密码</code>。</p><h2 id="配置数据库及管理员帐号"><a class="markdownIt-Anchor" href="#配置数据库及管理员帐号"></a> 配置数据库及管理员帐号</h2><p>访问你的网站(ip 或域名)看到如下内容(报错请给根目录&quot;775&quot;或&quot;777&quot;权限):</p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g7ldu7hya4j31460l0hcf.webp" alt="初次访问" /></p><ul><li>输入管理员帐号密码(需要记住)</li><li>数据目录可不修改</li><li>数据库选择<em>MySQL/MariaDB</em>并输入数据库名、帐号、密码、主机名及端口号(默认 localhost:3306)</li></ul><p>填完上述内容后点击安装完成可看到如下内容:</p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g7ldzu1721j31460l01kx.webp" alt="登录" /></p><p>输入之前输入的<strong>管理员帐号密码</strong>登录即可。</p><h2 id="安全及设置警告"><a class="markdownIt-Anchor" href="#安全及设置警告"></a> 安全及设置警告</h2><ol><li><p>PHP 似乎没有设置好查询的系统环境变量。 用 getenv(“PATH”) 测试只返回一个空值。请检查 PHP 配置说明和服务器的 PHP 配置 安装文档 ↗，使用 PHP-FPM 时尤其注意。</p><p><strong>找到<code>/www/server/php/72/etc</code>目录，编辑<code>php-fpm.conf</code>文件，找到如下内容(没有则添加如下内容)</strong></p><pre class="highlight"><code class="conf">;env[HOSTNAME] = $HOSTNAME;env[PATH] = /usr/local/bin:/usr/bin:/bin;env[TMP] = /tmp;env[TMPDIR] = /tmp;env[TEMP] = /tmp</code></pre><p><strong>去掉前面的’;'并保存。</strong></p></li><li><p>事务文件锁定应配置为使用基于内存的锁定，而不是默认的基于慢速数据库的锁定。有关详细信息，请参阅 文档 ↗。</p><p><strong>编辑<code>.../owncloud/config/</code>目录下的<code>config.php</code>文件，添加如下内容(需安装前面提到的额外 PHP 扩展)：</strong></p><pre class="highlight"><code class="php"><span class="hljs-string">'memcache.local'</span> =&gt; <span class="hljs-string">'\\OC\\Memcache\\APCu'</span>,<span class="hljs-string">'memcache.locking'</span> =&gt; <span class="hljs-string">'\\OC\\Memcache\\Redis'</span>,<span class="hljs-string">'redis'</span> =&gt;<span class="hljs-keyword">array</span> (  <span class="hljs-string">'host'</span> =&gt; <span class="hljs-string">'localhost'</span>,  <span class="hljs-string">'port'</span> =&gt; <span class="hljs-number">6379</span>,),</code></pre><p><strong>保存即可。</strong></p></li><li><p>我们建议启用系统 cron，任何其他 cron 方法可能对性能和可靠性有影响。</p><p>添加计划任务:</p><ul><li>任务类型:Shell 脚本</li><li>任务名称:随便取一个</li><li>执行周期:N 分钟 15 分</li><li>脚本内容:<code>sudo -u www /www/server/php/72/bin/php -f .../owncloud/cron.php</code><strong>(&quot;…&quot;要根据自己的实际情况修改)</strong></li></ul><p>设置中计划任务改为<code>Cron</code></p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g7lf0g13exj31460l00us.webp" alt="计划任务" /></p></li><li><p>您正在通过 HTTP 访问该站点，我们强烈建议您按照安全提示配置服务器强制使用 HTTPS。</p><p>给网站配置 SSL 证书，启用 HTTPS 即可。</p></li><li><p>HTTP 严格传输安全（Strict-Transport-Security）报头未配置到至少“15552000”秒。处于增强安全性考虑，我们推荐按照安全提示启用 HSTS。</p><p>编辑网站配置文件，添加如下代码:<br /><code>add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;;</code></p></li><li><p>你的数据目录和你的文件可能从互联网被访问到。.htaccess 文件不工作。我们强烈建议你配置你的网页服务器，使数据目录不再可访问，或者将数据目录移动到网页服务器根文档目录之外。</p><p>编辑网站配置文件，添加如下代码:</p><pre class="highlight"><code class="conf">location ~ ^/(data|config|\.ht|db_structure\.xml|README) &#123;    deny all;&#125;</code></pre></li><li><p>PHP 无法访问 /dev/urandom, 由于安全原因, 这是强烈不推荐的.</p><p>编辑<code>.../owncloud</code>目录下的<code>.user.ini</code>文件，改为如下内容:</p><pre class="highlight"><code class="ini"><span class="hljs-attr">upload_max_filesize</span>=<span class="hljs-number">513</span>M<span class="hljs-attr">post_max_size</span>=<span class="hljs-number">513</span>M<span class="hljs-attr">memory_limit</span>=<span class="hljs-number">512</span>M<span class="hljs-attr">mbstring.func_overload</span>=<span class="hljs-number">0</span><span class="hljs-attr">always_populate_raw_post_data</span>=-<span class="hljs-number">1</span><span class="hljs-attr">default_charset</span>=<span class="hljs-string">'UTF-8'</span><span class="hljs-attr">output_buffering</span>=<span class="hljs-number">0</span></code></pre></li><li><p>一些文件没有通过完整性检查。如何解决此问题的详细信息可以查看我们的 文档. (无效文件列表…/重新扫描…)</p><p>跟之前保留的<code>owncloud</code>文件夹里的内容比较一下，看看有哪些文件不同替换过来就行(<strong>注意隐藏文件</strong>)</p></li></ol><h2 id="邮箱配置"><a class="markdownIt-Anchor" href="#邮箱配置"></a> 邮箱配置</h2><ul><li>在<code>设置 &gt; 个人 &gt; 常规</code>中设置好管理员邮箱地址并保存</li><li>按下图配置好<strong>电子邮件服务器</strong>(以 QQ 邮箱为例，<strong>不要和上面使用同一个邮箱</strong>)<a href="https://www.baidu.com/s?ie=utf-8&amp;f=3&amp;rsv_bp=1&amp;ch=&amp;tn=baidu&amp;bar=&amp;wd=qq%E9%82%AE%E7%AE%B1smtp%E8%AE%BE%E7%BD%AE&amp;oq=smtp%25E8%25AE%25BE%25E7%25BD%25AE&amp;rsv_pq=9a0979000000eac7&amp;rsv_t=f83a3KFhWkpW6TId%2FD2Iw5tyFH5uV0QQiVmc%2FNTC0kVZ3KZoC%2BSrhsjUJsY&amp;rqlang=cn&amp;rsv_enter=1&amp;prefixsug=smtp%25E8%25AE%25BE%25E7%25BD%25AE&amp;rsp=2&amp;rsv_dl=ts_2">如何配置？</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g7lz7j7bk5j31460l0766.webp" alt="邮箱配置" /></p><ul><li>配置完成后点击下面的***发送邮件***发送测试邮件，如果之前设置的管理员邮箱可以收到测试邮件说明配置成功。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ownCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 挂载硬盘</title>
      <link href="/posts/f096f3bc/"/>
      <url>/posts/f096f3bc/</url>
      
        <content type="html"><![CDATA[<p><strong>需求: Linux 新增加一块硬盘 sdb，将 sdb 分区，只分一个区，格式化，挂载到目录<code>/ssd</code>下。</strong></p><h2 id="查看现在已有的分区状态"><a class="markdownIt-Anchor" href="#查看现在已有的分区状态"></a> 查看现在已有的分区状态</h2><p><code># df -l</code></p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g6za4jlnj0j30fi03kmxo.webp" alt="分区状态" /></p><p>图中显示，没有看到 sdb 硬盘</p><h2 id="查看服务器安装的硬盘状态包括格式化和未格式化"><a class="markdownIt-Anchor" href="#查看服务器安装的硬盘状态包括格式化和未格式化"></a> 查看服务器安装的硬盘状态（包括格式化和未格式化）</h2><p><code># fdisk -l</code><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g6za5t76eqj30fi0cgdi4.webp" alt="硬盘状态" /></p><p>图中显示，有 sdb 硬盘，但是没有分区。</p><h2 id="添加新分区"><a class="markdownIt-Anchor" href="#添加新分区"></a> 添加新分区</h2><p><code># fdisk /dev/sdb</code><br />按照以下红框输入</p><ul><li><kbd>N</kbd> → <kbd>Enter</kbd></li><li><kbd>P</kbd> → <kbd>Enter</kbd></li><li><kbd>1</kbd> → <kbd>Enter</kbd></li><li><kbd>Enter</kbd></li><li><kbd>Enter</kbd></li><li><kbd>W</kbd> → <kbd>Enter</kbd></li></ul><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g6za9rpt8kj30fi057gm5.webp" alt="添加新分区" /></p><p>用以下命令查看分区<br /><code># fdisk -l</code></p><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g6zaacq8drj30fi0500tl.webp" alt="分区" /></p><p>图中红框显示已多出了一个分区，但是还没有格式化。</p><h2 id="格式化分区"><a class="markdownIt-Anchor" href="#格式化分区"></a> 格式化分区</h2><p><code># mkfs -t ext4 -c /dev/sdb1</code></p><ul><li><code>-t</code> 制定要把磁盘格式化成什么类型</li><li><code>-c</code> 在建立文件系统之前检查坏道，可能会很费时间，新硬盘一般不需要</li></ul><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g6zabokpgpj30fi0b2mza.webp" alt="格式化分区" /></p><h2 id="挂载新硬盘"><a class="markdownIt-Anchor" href="#挂载新硬盘"></a> 挂载新硬盘</h2><ul><li>在根目录下，建一个文件夹，待会将分区挂载在这个文件夹上，以后要往新硬盘存东西就存在新建文件夹下就可以了。<br /><code># mkdir /ssd</code></li><li>挂载硬盘<br /><code># mount /dev/sdb1 /ssd</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/006brDXlly1g6zad9p990j30fi02baab.webp" alt="挂载硬盘" /></p><h2 id="让系统开机自动挂载这块硬盘"><a class="markdownIt-Anchor" href="#让系统开机自动挂载这块硬盘"></a> 让系统开机自动挂载这块硬盘</h2><p>编辑<code>/etc/fstaba</code>文件，在最末尾增加如下代码：<br /><code>/dev/sda1 /ssd ext4 defaults 0 0</code></p><blockquote><p>本文转自 <a href="https://www.cnblogs.com/ddbear/p/7009736.html">linux 新添加的硬盘格式化并挂载到目录下</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 硬盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 下 aria2 的安装与配置</title>
      <link href="/posts/b9ab9265/"/>
      <url>/posts/b9ab9265/</url>
      
        <content type="html"><![CDATA[<p><strong>这里来介绍一下 linux 系统下 aria2 的安装与配置</strong></p><h2 id="ubuntu"><a class="markdownIt-Anchor" href="#ubuntu"></a> Ubuntu</h2><p>ubuntu 的用户可以直接使用下面命令完成 aria2 的安装:<br /><code>sudo apt-get install aria2</code></p><h2 id="centos"><a class="markdownIt-Anchor" href="#centos"></a> CentOS</h2><h3 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h3><ul><li>到 githup 上获取源码：<a href="https://github.com/aria2/aria2/releases">https://github.com/aria2/aria2/releases</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2-1.35.0.tar.gz">备用下载</a><br />我使用的是这个版本:<br /><a href="https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz">https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz</a></li><li>定位到 aria2 目录并输入以下命令下载:<br /><code>cd /ssd/aria2 &amp;&amp; wget https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz</code></li></ul><h3 id="升级-gcc"><a class="markdownIt-Anchor" href="#升级-gcc"></a> 升级 gcc</h3><p>编译 aria2 需要升级一下 gcc，最低要求 gcc &gt;= 4.8.2，使用<code>gcc --version</code>查看当前 gcc 版本，<strong>如果你的 gcc 已经在符合这个要求就可以跳到下一步了</strong><br />复制下面代码，保存为：update_gcc.sh</p><pre class="highlight"><code class="bash"><span class="hljs-comment"># 添加一个源</span><span class="hljs-built_in">cd</span> /etc/yum.repos.dwget http://people.centos.org/tru/devtools-2/devtools-2.repo<span class="hljs-comment"># 安装所需包</span>yum install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++<span class="hljs-comment"># 保存原来的版本</span>mv /usr/bin/gcc /usr/bin/gcc-4.4.7mv /usr/bin/g++ /usr/bin/g++-4.4.7mv /usr/bin/c++ /usr/bin/c++-4.4.7<span class="hljs-comment"># 链接到新版本的gcc</span>ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/gccln -s /opt/rh/devtoolset-2/root/usr/bin/c++ /usr/bin/c++ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++<span class="hljs-comment"># 查看当前gcc版本</span>gcc --version</code></pre><p>给予<code>update_gcc.sh</code>文件可执行权限并执行<br /><code>chmod 754 update_gcc.sh &amp;&amp; ./update_gcc.sh</code><br /><em><strong>在执行之前需要确保安装了 wget，如果没有 wget 的话，脚本执行会报错!!!</strong></em><br />等待完成!!!</p><h3 id="解压并开始编译安装"><a class="markdownIt-Anchor" href="#解压并开始编译安装"></a> 解压并开始编译安装</h3><p><code>tar zxvf aria2-1.34.0.tar.gz &amp;&amp; cd aria2-1.34.0 &amp;&amp; mkdir build &amp;&amp; cd build &amp;&amp; ../configure &amp;&amp; make &amp;&amp; make install</code><br /><em>比较长时间的等待~~</em></p><h3 id="创建目录与配置文件"><a class="markdownIt-Anchor" href="#创建目录与配置文件"></a> 创建目录与配置文件</h3><pre class="highlight"><code class="bash"><span class="hljs-comment"># 这一步需要切换到root下进行</span><span class="hljs-comment"># 需要 su  一下</span><span class="hljs-built_in">cd</span> /ssd/www &amp;&amp; mkdir aria2 &amp;&amp; <span class="hljs-built_in">cd</span> aria2 &amp;&amp; touch aria2.conf &amp;&amp; touch aria2.session</code></pre><p>编辑<code>aria2.conf</code>文件内容，内容如下:</p><pre class="highlight"><code class="bash"><span class="hljs-comment"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span><span class="hljs-comment">#dir=~/download</span><span class="hljs-comment"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span>disk-cache=5M<span class="hljs-comment"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span><span class="hljs-comment"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span><span class="hljs-comment"># falloc和trunc则需要文件系统和内核支持, NTFS建议使用falloc, EXT3/4建议trunc</span>file-allocation=none<span class="hljs-comment"># 断点续传</span><span class="hljs-built_in">continue</span>=<span class="hljs-literal">true</span><span class="hljs-comment">## 下载连接相关 ##</span><span class="hljs-comment"># 最大同时下载任务数, 运行时可修改, 默认:5</span>max-concurrent-downloads=5<span class="hljs-comment"># 同一服务器连接数, 添加时可指定, 默认:1</span>max-connection-per-server=15<span class="hljs-comment"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span><span class="hljs-comment"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span>min-split-size=10M<span class="hljs-comment"># 单个任务最大线程数, 添加时可指定, 默认:5</span>split=5<span class="hljs-comment"># 整体下载速度限制, 运行时可修改, 默认:0</span><span class="hljs-comment">#max-overall-download-limit=0</span><span class="hljs-comment"># 单个任务下载速度限制, 默认:0</span><span class="hljs-comment">#max-download-limit=0</span><span class="hljs-comment"># 整体上传速度限制, 运行时可修改, 默认:0</span>max-overall-upload-limit=20kb<span class="hljs-comment"># 单个任务上传速度限制, 默认:0</span>max-upload-limit=5kb<span class="hljs-comment"># 禁用IPv6, 默认:false</span><span class="hljs-built_in">disable</span>-ipv6=<span class="hljs-literal">true</span><span class="hljs-comment"># 禁用https证书检查</span>check-certificate=<span class="hljs-literal">false</span><span class="hljs-comment">#运行覆盖已存在文件</span>allow-overwrite=<span class="hljs-literal">true</span><span class="hljs-comment">#自动重命名</span>auto-file-renaming<span class="hljs-comment">## 进度保存相关 ##</span><span class="hljs-comment"># 从会话文件中读取下载任务</span>input-file=/etc/aria2/aria2.session<span class="hljs-comment"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span>save-session=/etc/aria2/aria2.session<span class="hljs-comment"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span>save-session-interval=30<span class="hljs-comment">## RPC相关设置 ##</span><span class="hljs-comment"># 启用RPC, 默认:false</span><span class="hljs-built_in">enable</span>-rpc=<span class="hljs-literal">true</span><span class="hljs-comment"># 允许所有来源, 默认:false</span>rpc-allow-origin-all=<span class="hljs-literal">true</span><span class="hljs-comment"># 允许非外部访问, 默认:false</span>rpc-listen-all=<span class="hljs-literal">true</span><span class="hljs-comment"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span><span class="hljs-comment">#event-poll=select</span><span class="hljs-comment"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span>rpc-listen-port=6800<span class="hljs-comment"># 保存上传的种子文件</span>rpc-save-upload-metadata=<span class="hljs-literal">false</span><span class="hljs-comment">## BT/PT下载相关 ##</span><span class="hljs-comment"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span><span class="hljs-comment">#follow-torrent=true</span><span class="hljs-comment"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span>listen-port=51413<span class="hljs-comment"># 单个种子最大连接数, 默认:55</span><span class="hljs-comment">#bt-max-peers=55</span><span class="hljs-comment"># 打开DHT功能, PT需要禁用, 默认:true</span><span class="hljs-built_in">enable</span>-dht=<span class="hljs-literal">true</span><span class="hljs-comment"># 打开IPv6 DHT功能, PT需要禁用</span><span class="hljs-built_in">enable</span>-dht6=<span class="hljs-literal">false</span><span class="hljs-comment"># DHT网络监听端口, 默认:6881-6999</span><span class="hljs-comment">#dht-listen-port=6881-6999</span><span class="hljs-comment"># 本地节点查找, PT需要禁用, 默认:false</span>bt-enable-lpd=<span class="hljs-literal">true</span><span class="hljs-comment"># 种子交换, PT需要禁用, 默认:true</span><span class="hljs-built_in">enable</span>-peer-exchange=<span class="hljs-literal">true</span><span class="hljs-comment"># 每个种子限速, 对少种的PT很有用, 默认:50K</span><span class="hljs-comment">#bt-request-peer-speed-limit=50K</span><span class="hljs-comment"># 客户端伪装, PT需要</span>peer-id-prefix=-UT341-user-agent=uTorrent/341(109279400)(30888)<span class="hljs-comment"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span>seed-ratio=1.0<span class="hljs-comment"># 强制保存会话, 话即使任务已经完成, 默认:false</span><span class="hljs-comment"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span><span class="hljs-comment">#force-save=false</span><span class="hljs-comment"># BT校验相关, 默认:true</span><span class="hljs-comment">#bt-hash-check-seed=true</span><span class="hljs-comment"># 继续之前的BT任务时, 无需再次校验, 默认:false</span>bt-seed-unverified=<span class="hljs-literal">true</span><span class="hljs-comment"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span><span class="hljs-comment">#bt-save-metadata=false</span><span class="hljs-comment">#仅下载种子文件</span>bt-metadata-only=<span class="hljs-literal">true</span><span class="hljs-comment">#通过网上的种子文件下载，种子保存在内存</span>follow-torrent=mem</code></pre><h3 id="设置环境变量"><a class="markdownIt-Anchor" href="#设置环境变量"></a> 设置环境变量</h3><ul><li>编辑<code>~/.bashrc</code>文件,加入下面内容<br /><code>export PATH=/usr/local/src/aria2-1.33.0/build/src:$PATH</code></li><li>执行下面命令，使环境变量设置生效：<br /><code>source ~/.bashrc</code></li><li>完成这一系列操作后，输入 aria  并可以补全的话就说明 aria2 已经安装成功了!!!<br />然后，你就可以使用 aria2 下载你的 bt 种子或磁力链了，执行<code>aria2c -h</code>查看<strong>使用说明</strong></li></ul><h3 id="处理-aria2-下载-bt-种子或磁力链无速度或速度慢的情况添加-tracker"><a class="markdownIt-Anchor" href="#处理-aria2-下载-bt-种子或磁力链无速度或速度慢的情况添加-tracker"></a> 处理 aria2 下载 bt 种子或磁力链无速度或速度慢的情况，添加 tracker</h3><p>在<code>aria2c.conf</code>文件中添加下面内容:</p><pre class="highlight"><code class="text">bt-tracker=tracker url.....例如:bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.open-internet.nl:6969/announce,udp://tracker.leechers-paradise.org:6969/announce,udp://tracker.opentrackr.org:1337/announce,http://tracker.internetwarriors.net:1337/announce,udp://9.rarbg.to:2710/announce,udp://exodus.desync.com:6969/announce,http://tracker3.itzmx.com:6961/announce,udp://explodie.org:6969/announce,udp://ipv4.tracker.harry.lu:80/announce,udp://denis.stalker.upeer.me:6969/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.port443.xyz:6969/announce,udp://thetracker.org:80/announce,udp://open.stealth.si:80/announce,udp://open.demonii.si:1337/announce,udp://bt.xxx-tracker.com:2710/announce,udp://tracker1.wasabii.com.tw:6969/announce,udp://tracker.torrent.eu.org:451/announce</code></pre><p>tracker 地址自行到这里取最新的添加，每个地址之间以逗号分开:<br /><a href="https://github.com/ngosang/trackerslist">https://github.com/ngosang/trackerslist</a></p><h3 id="使用以下命令后台启动"><a class="markdownIt-Anchor" href="#使用以下命令后台启动"></a> 使用以下命令后台启动</h3><p><code>aria2c --conf-path=/ssd/www/aria2/aria2.conf -D</code></p><blockquote><p>本文转自 <a href="https://www.cnblogs.com/LiQingsong/p/10293142.html">linux 下 aria2 的安装与配置</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aria2 </tag>
            
            <tag> Linux </tag>
            
            <tag> 下载软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 配置 Aria2 教程</title>
      <link href="/posts/5579cd4b/"/>
      <url>/posts/5579cd4b/</url>
      
        <content type="html"><![CDATA[<p><strong>  Aria2 是一个多平台轻量级，支持 HTTP、FTP、BitTorrent 等多协议、多来源的命令行下载工具。Aria2 可以从多个来源、多个协议下载资源，最大的程度上利用了你的带宽。Aria2 有着非常小的资源占用，在关闭磁盘缓存的情况下，物理内存占用通常为 4M（正常 HTTP/FTP 下载的情况下），BitTorrent 下载每秒 2.8M/S 的情况下，CPU 占有率约为 6%。Aria2 支持 JSON-RPC 和 XML-RPC 接口远程调用。</strong></p><h2 id="安装前准备文件"><a class="markdownIt-Anchor" href="#安装前准备文件"></a> 安装前准备文件</h2><ul><li>Aria2 主程序：<ul><li><a href="https://github.com/aria2/aria2/releases">官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2-1.35.0-win-32bit-build1.zip">备用下载(32 位)</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2-1.35.0-win-64bit-build1.zip">备用下载(64 位)</a></li></ul></li><li>Aria2 配置文件：<ul><li><a href="https://github.com/jasmine102/Aria2-config/raw/master/aria2_conf.zip">官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2_conf.zip">备用下载</a></li></ul></li><li>Aria2 控制脚本：<ul><li><a href="https://github.com/jasmine102/Aria2-config/raw/master/aria2_bat.zip">官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2_bat.zip">备用下载</a></li></ul></li></ul><h2 id="安装步骤"><a class="markdownIt-Anchor" href="#安装步骤"></a> 安装步骤</h2><h3 id="将aria2主程序aria2配置文件和aria2控制脚本解压到同一目录"><a class="markdownIt-Anchor" href="#将aria2主程序aria2配置文件和aria2控制脚本解压到同一目录"></a> 将<code>Aria2主程序</code>,<code>Aria2配置文件</code>和<code>Aria2控制脚本</code>解压到同一目录</h3><h3 id="编辑aria2conf文件"><a class="markdownIt-Anchor" href="#编辑aria2conf文件"></a> 编辑<code>aria2.conf</code>文件</h3><p><strong><code>ari2.conf</code>里已自带默认参数 ，也可根据自己的需要设置<code>ari2.conf</code>文件里的参数：</strong></p><pre class="highlight"><code class="yaml"><span class="hljs-comment">## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</span><span class="hljs-comment">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span><span class="hljs-comment">## 文件保存相关 ##</span><span class="hljs-comment"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span><span class="hljs-string">dir=Download</span><span class="hljs-comment"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span><span class="hljs-string">disk-cache=32M</span><span class="hljs-comment"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span><span class="hljs-comment"># 预分配所需时间: none &lt; falloc &lt; trunc &lt; prealloc</span><span class="hljs-comment"># NTFS建议使用falloc</span><span class="hljs-string">file-allocation=none</span><span class="hljs-comment"># 断点续传</span><span class="hljs-string">continue=true</span><span class="hljs-comment">## 下载连接相关 ##</span><span class="hljs-comment"># 最大同时下载任务数, 运行时可修改, 默认:5</span><span class="hljs-string">max-concurrent-downloads=10</span><span class="hljs-comment"># 同一服务器连接数, 添加时可指定, 默认:1</span><span class="hljs-string">max-connection-per-server=5</span><span class="hljs-comment"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span><span class="hljs-comment"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span><span class="hljs-string">min-split-size=10M</span><span class="hljs-comment"># 单个任务最大线程数, 添加时可指定, 默认:5</span><span class="hljs-string">split=20</span><span class="hljs-comment"># 整体下载速度限制, 运行时可修改, 默认:0</span><span class="hljs-comment">#max-overall-download-limit=0</span><span class="hljs-comment"># 单个任务下载速度限制, 默认:0</span><span class="hljs-comment">#max-download-limit=0</span><span class="hljs-comment"># 整体上传速度限制, 运行时可修改, 默认:0</span><span class="hljs-string">max-overall-upload-limit=1M</span><span class="hljs-comment"># 单个任务上传速度限制, 默认:0</span><span class="hljs-comment">#max-upload-limit=1000</span><span class="hljs-comment"># 禁用IPv6, 默认:false</span><span class="hljs-string">disable-ipv6=false</span><span class="hljs-comment">## 进度保存相关 ##</span><span class="hljs-comment"># 从会话文件中读取下载任务</span><span class="hljs-string">input-file=aria2.session</span><span class="hljs-comment"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span><span class="hljs-string">save-session=aria2.session</span><span class="hljs-comment"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span><span class="hljs-comment">#save-session-interval=60</span><span class="hljs-comment">## RPC相关设置 ##</span><span class="hljs-comment"># 启用RPC, 默认:false</span><span class="hljs-string">enable-rpc=true</span><span class="hljs-comment"># 允许所有来源, 默认:false</span><span class="hljs-string">rpc-allow-origin-all=true</span><span class="hljs-comment"># 允许非外部访问, 默认:false</span><span class="hljs-string">rpc-listen-all=true</span><span class="hljs-comment"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span><span class="hljs-comment">#event-poll=select</span><span class="hljs-comment"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span><span class="hljs-comment">#rpc-listen-port=6800</span><span class="hljs-comment"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span><span class="hljs-comment">#rpc-secret=mivm.cn</span><span class="hljs-comment"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><span class="hljs-comment">#rpc-user=&lt;USER&gt;</span><span class="hljs-comment"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><span class="hljs-comment">#rpc-passwd=&lt;PASSWD&gt;</span><span class="hljs-comment">## BT/PT下载相关 ##</span><span class="hljs-comment"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span><span class="hljs-string">follow-torrent=true</span><span class="hljs-comment"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span><span class="hljs-string">listen-port=51413</span><span class="hljs-comment"># 单个种子最大连接数, 默认:55</span><span class="hljs-comment">#bt-max-peers=55</span><span class="hljs-comment"># 打开DHT功能, PT需要禁用, 默认:true</span><span class="hljs-string">enable-dht=true</span><span class="hljs-comment"># 打开IPv6 DHT功能, PT需要禁用</span><span class="hljs-comment">#enable-dht6=false</span><span class="hljs-comment"># DHT网络监听端口, 默认:6881-6999</span><span class="hljs-comment">#dht-listen-port=6881-6999</span><span class="hljs-comment"># 本地节点查找, PT需要禁用, 默认:false</span><span class="hljs-comment">#bt-enable-lpd=true</span><span class="hljs-comment"># 种子交换, PT需要禁用, 默认:true</span><span class="hljs-string">enable-peer-exchange=true</span><span class="hljs-comment"># 每个种子限速, 对少种的PT很有用, 默认:50K</span><span class="hljs-comment">#bt-request-peer-speed-limit=50K</span><span class="hljs-comment"># 客户端伪装, PT需要</span><span class="hljs-string">peer-id-prefix=-TR2770-</span><span class="hljs-string">user-agent=Transmission/2.77</span><span class="hljs-comment"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span><span class="hljs-string">seed-ratio=0.1</span><span class="hljs-comment"># 强制保存会话, 即使任务已经完成, 默认:false</span><span class="hljs-comment"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span><span class="hljs-comment">#force-save=false</span><span class="hljs-comment"># BT校验相关, 默认:true</span><span class="hljs-comment">#bt-hash-check-seed=true</span><span class="hljs-comment"># 继续之前的BT任务时, 无需再次校验, 默认:false</span><span class="hljs-string">bt-seed-unverified=true</span><span class="hljs-comment"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span><span class="hljs-comment">#bt-save-metadata=true</span></code></pre><h3 id="双击运行startbat前台运行或startvbs后台运行首次运行会弹出防火墙提示选择允许即可"><a class="markdownIt-Anchor" href="#双击运行startbat前台运行或startvbs后台运行首次运行会弹出防火墙提示选择允许即可"></a> 双击运行<code>Start.bat</code>(前台运行)或<code>Start.vbs</code>(后台运行)，首次运行会弹出防火墙提示，选择允许即可</h3><h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><ul><li>GitHub 源码： <a href="https://github.com/aria2/aria2">https://github.com/aria2/aria2</a></li><li>官方文档： <a href="https://aria2.github.io/">https://aria2.github.io/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aria2 </tag>
            
            <tag> WebUI </tag>
            
            <tag> 下载软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给网页添加一个 Live2D 看板娘（前端）</title>
      <link href="/posts/e1f9f17c/"/>
      <url>/posts/e1f9f17c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇文章教大家如何给自己的网页添加一个类似右下角的 Live2D 看板娘。</p></blockquote><blockquote><p>如果你的模型是<code>moc3</code>格式的，请参考<a href="https://blog.hclonely.com/posts/8a7f7919/">给你的网页添加一个 moc3 格式的 Live2d 模型</a></p></blockquote><h2 id="使用插件"><a class="markdownIt-Anchor" href="#使用插件"></a> 使用插件</h2><p><strong>如果你的博客使用了<code>WordPress</code>,<code>Typecho</code>,<code>Emlog</code>或<code>Z-Blog</code>等框架，可以直接下载大佬们的插件使用</strong></p><ul><li>WordPress<ul><li>小白-白酱的插件（22&amp;33 模型）： <a href="https://moedog.org/946.html">https://moedog.org/946.html</a></li><li>DaiDR 酱的插件（Pio 模型）： <a href="https://daidr.me/archives/code-176.html">https://daidr.me/archives/code-176.html</a></li></ul></li><li>Typecho<ul><li>泽泽酱的插件（22&amp;33 模型）： <a href="https://qqdie.com/archives/l2d233.html">https://qqdie.com/archives/l2d233.html</a></li><li>保罗酱的插件（Pio 模型）： <a href="https://paugram.com/coding/add-poster-girl-with-plugin.html">https://paugram.com/coding/add-poster-girl-with-plugin.html</a></li></ul></li><li>Emlog<ul><li>广树酱的插件（伊斯特瓦尔模型）： <a href="https://www.wikimoe.com/?post=75">https://www.wikimoe.com/?post=75</a></li></ul></li><li>Z-Blog<ul><li>FGHRSH 酱的插件（Pio&amp;Tia 模型）： <a href="https://www.fghrsh.net/post/123.html">https://www.fghrsh.net/post/123.html</a></li></ul></li></ul><h2 id="不使用插件"><a class="markdownIt-Anchor" href="#不使用插件"></a> 不使用插件</h2><p><strong>如果你的网站没有使用有现成插件的框架，可以直接将代码写入 html</strong></p><h3 id="依赖类库"><a class="markdownIt-Anchor" href="#依赖类库"></a> 依赖类库</h3><ul><li>JQuery (<code>waifu-tips.js</code>)</li><li>JQuery UI (仅实现 <em>拖拽效果</em> 需要)</li></ul><h3 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h3><h4 id="下载源码"><a class="markdownIt-Anchor" href="#下载源码"></a> 下载源码</h4><ul><li><a href="https://github.com/fghrsh/live2d_demo">GitHub 官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/live2d_demo-master.zip">备用下载</a></li></ul><h4 id="将-assets-文件夹解压到网站目录这里以解压到根目录为例"><a class="markdownIt-Anchor" href="#将-assets-文件夹解压到网站目录这里以解压到根目录为例"></a> 将 assets 文件夹解压到网站目录（这里以解压到根目录为例）</h4><h4 id="引入-css-及-js-文件"><a class="markdownIt-Anchor" href="#引入-css-及-js-文件"></a> 引入 css 及 js 文件</h4><ul><li>autoload.js 引入<ul><li>在 <code>&quot;&lt;/body&gt;&quot;</code> 前引入 <code>autoload.js</code></li></ul></li><li>常规方式引入<ul><li>在 <code>&quot;&lt;/head&gt;&quot;</code> 前引入 <code>waifu.css</code> 样式表</li><li>在 <code>&quot;&lt;/body&gt;&quot;</code> 前引入 <code>waifu-tips.js</code> 和 <code>live2d.js</code></li><li>在 <code>&quot;&lt;/body&gt;&quot;</code> 前插入 初始化 JS，可在 初始化前 设置参数</li></ul></li></ul><pre class="highlight"><code class="HTML"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>        · · ·   · · ·    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.example.com/path/to/waifu.css"</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>        · · ·   · · ·    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"waifu"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"waifu-tips"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"live2d"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"live2d"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"waifu-tool"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fui-home"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fui-chat"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fui-eye"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fui-user"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fui-photo"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fui-info-circle"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fui-cross"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"path/to/waifu-tips.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"path/to/live2d.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="actionscript">        live2d_settings[<span class="hljs-string">'modelId'</span>] = <span class="hljs-number">1</span>;        live2d_settings[<span class="hljs-string">'modelTexturesId'</span>] = <span class="hljs-number">87</span>;    initModel(<span class="hljs-string">"https://www.example.com/path/to/waifu-tips.json"</span>)    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><h4 id="定制属于你的看板娘"><a class="markdownIt-Anchor" href="#定制属于你的看板娘"></a> 定制属于你的看板娘</h4><ul><li>修改 <code>waifu-tips.js</code> 顶部的设置参数(或初始化前设置)</li><li>修改 <code>waifu-tips.json</code>，定制看板娘提示语，打造专属看板娘</li></ul><h3 id="设置参数"><a class="markdownIt-Anchor" href="#设置参数"></a> 设置参数</h3><p><em>Tips： <code>waifu-tips.js</code> 已自带默认参数，如无特殊要求可跳过</em></p><ul><li>后端接口<ul><li><code>live2d_settings['modelAPI']</code> 看板娘 API 地址，默认值 <code>'//live2d.fghrsh.net/api/'</code></li><li><code>live2d_settings['tipsMessage']</code> 提示语读取路径，默认值 <code>'waifu-tips.json'</code> (一般在 <code>initModel</code> 时指定)</li><li><code>live2d_settings['hitokotoAPI']</code> 一言 API 接口，可选 <code>'lwl12.com'</code>，<code>'hitokoto.cn'</code>，<code>'jinrishici.com'</code> (古诗词)</li></ul></li><li>默认模型<ul><li><code>live2d_settings['modelId']</code> 默认模型(分组) ID，可在 Demo 页 <code>[F12]</code> 呼出 <code>控制台(Console)</code> 找到</li><li><code>live2d_settings['modelTexturesId']</code> 默认材质(模型) ID，可在 Demo 页 <code>[F12]</code> 呼出 <code>控制台(Console)</code> 找到</li></ul></li><li>工具栏设置<ul><li><code>live2d_settings['showToolMenu']</code>， 显示工具栏， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canCloseLive2d']</code>， 关闭看板娘 按钮，<code>true</code> | <code>false</code></li><li><code>live2d_settings['canSwitchModel']</code>， 切换模型 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canSwitchTextures']</code>， 切换材质 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canSwitchHitokoto']</code>， 切换一言 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canTakeScreenshot']</code>， 看板娘截图 按钮，<code>true</code> | <code>false</code></li><li><code>live2d_settings['canTurnToHomePage']</code>， 返回首页 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings['canTurnToAboutPage']</code>，跳转关于页 按钮，<code>true</code> | <code>false</code></li></ul></li><li>模型切换模式<ul><li><code>live2d_settings['modelStorage']</code>，记录 ID (刷新后恢复)，<code>true</code> | <code>false</code></li><li><code>live2d_settings['modelRandMode']</code>，模型切换，可选 <code>'rand'</code> (随机) | <code>'switch'</code> (顺序)</li><li><code>live2d_settings['modelTexturesRandMode']</code>，材质切换，可选 <code>'rand'</code> | <code>'switch'</code></li></ul></li><li>提示消息选项<ul><li><code>live2d_settings['showHitokoto']</code>，空闲时一言，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showF12Status']</code>，控制台显示加载状态，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showF12Message']</code>，提示消息输出到控制台，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showF12OpenMsg']</code>，控制台被打开触发提醒，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showCopyMessage']</code>，内容被复制触发提醒，<code>true</code> | <code>false</code></li><li><code>live2d_settings['showWelcomeMessage']</code>，进入面页时显示欢迎语，<code>true</code> | <code>false</code></li></ul></li><li>看板娘样式设置<ul><li><code>live2d_settings['waifuSize']</code>，看板娘大小，例如 <code>'280x250'</code>，<code>'600x535'</code></li><li><code>live2d_settings['waifuTipsSize']</code>，提示框大小，例如 <code>'250x70'</code>，<code>'570x150'</code></li><li><code>live2d_settings['waifuFontSize']</code>，提示框字体，例如 <code>'12px'</code>，<code>'30px'</code></li><li><code>live2d_settings['waifuToolFont']</code>，工具栏字体，例如 <code>'14px'</code>，<code>'36px'</code></li><li><code>live2d_settings['waifuToolLine']</code>，工具栏行高，例如 <code>'20px'</code>，<code>'36px'</code></li><li><code>live2d_settings['waifuToolTop']</code>，工具栏顶部边距，例如 <code>'0px'</code>，<code>'-60px'</code></li><li><code>live2d_settings['waifuMinWidth']</code> 面页小于 指定宽度 隐藏看板娘，例如 <code>'disable'</code> (停用)，<code>'768px'</code></li><li><code>live2d_settings['waifuEdgeSide']</code> 看板娘贴边方向，例如 <code>'left:0'</code> (靠左 0px)，<code>'right:30'</code> (靠右 30px)</li><li><code>live2d_settings['waifuDraggable']</code> 拖拽样式，可选 <code>'disable'</code> (禁用)，<code>'axis-x'</code> (只能水平拖拽)，<code>'unlimited'</code> (自由拖拽)</li><li><code>live2d_settings['waifuDraggableRevert']</code>，松开鼠标还原拖拽位置，<code>true</code> | <code>false</code></li></ul></li><li>其他杂项设置<ul><li><code>live2d_settings['l2dVersion']</code>，当前版本 (无需修改)</li><li><code>live2d_settings['l2dVerDate']</code>，更新日期 (无需修改)</li><li><code>live2d_settings['homePageUrl']</code>，首页地址，可选 <code>'auto'</code> (自动)，<code>'&#123;URL 网址&#125;'</code></li><li><code>live2d_settings['aboutPageUrl']</code>，关于页地址，<code>'&#123;URL 网址&#125;'</code></li><li><code>live2d_settings['screenshotCaptureName']</code>，看板娘截图文件名，例如 <code>'live2d.png'</code></li></ul></li></ul><h3 id="定制提示语"><a class="markdownIt-Anchor" href="#定制提示语"></a> 定制提示语</h3><p><em>Tips： <code>waifu-tips.json</code> 已自带默认提示语，如无特殊要求可跳过</em></p><ul><li><code>&quot;waifu&quot;</code> 系统提示<ul><li><code>&quot;console_open_msg&quot;</code> 控制台被打开提醒（支持多句随机）</li><li><code>&quot;copy_message&quot;</code> 内容被复制触发提醒（支持多句随机）</li><li><code>&quot;screenshot_message&quot;</code> 看板娘截图提示语（支持多句随机）</li><li><code>&quot;hidden_message&quot;</code> 看板娘隐藏提示语（支持多句随机）</li><li><code>&quot;load_rand_textures&quot;</code> 随机材质提示语（暂不支持多句）</li><li><code>&quot;hour_tips&quot;</code> 时间段欢迎语（支持多句随机）</li><li><code>&quot;referrer_message&quot;</code> 请求来源欢迎语（不支持多句）</li><li><code>&quot;referrer_hostname&quot;</code> 请求来源自定义名称（根据 host，支持多句随机）</li><li><code>&quot;model_message&quot;</code> 模型切换欢迎语（根据模型 ID，支持多句随机）</li><li><code>&quot;hitokoto_api_message&quot;</code>，一言 API 输出模板（不支持多句随机）</li></ul></li><li><code>&quot;mouseover&quot;</code> 鼠标触发提示（根据 CSS 选择器，支持多句随机）</li><li><code>&quot;click&quot;</code> 鼠标点击触发提示（根据 CSS 选择器，支持多句随机）</li><li><code>&quot;seasons&quot;</code> 节日提示（日期段，支持多句随机）</li></ul><h2 id="使用浏览器插件在任何网页上都显示"><a class="markdownIt-Anchor" href="#使用浏览器插件在任何网页上都显示"></a> 使用浏览器插件在任何网页上都显示</h2><h3 id="安装插件-httpswwwtampermonkeynet"><a class="markdownIt-Anchor" href="#安装插件-httpswwwtampermonkeynet"></a> 安装插件： <a href="https://www.tampermonkey.net/">https://www.tampermonkey.net/</a></h3><h3 id="安装脚本-live2d-看板娘"><a class="markdownIt-Anchor" href="#安装脚本-live2d-看板娘"></a> 安装脚本： <a href="https://github.com/HCLonely/live2d.user.js/raw/master/live2d.user.js">live2D 看板娘</a></h3><h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><ul><li>GitHub 源码： <a href="https://github.com/fghrsh/live2d_demo">https://github.com/fghrsh/live2d_demo</a></li><li>参考文档：<ul><li><a href="https://github.com/fghrsh/live2d_demo/blob/master/README.md">Live2D demo</a></li><li><a href="https://www.fghrsh.net/post/123.html">网页添加 Live2D 看板娘</a></li><li><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02">给博客添加能动的看板娘(Live2D)-将其添加到网页上吧</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2d </tag>
            
            <tag> 看板娘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP签名档制作</title>
      <link href="/posts/b48b8704/"/>
      <url>/posts/b48b8704/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何生成像下图一样的IP签名档。</strong></p><p><img src="https://xhboke.com/news/" alt="签名档" /></p><h3 id="下载源码"><a class="markdownIt-Anchor" href="#下载源码"></a> 下载源码</h3><ul><li><a href="https://github.com/xhboke/IP">GitHub官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/IP-master.zip">备用下载</a></li></ul><h3 id="将下载的源码解压到你的网站目录里建议新建一个目录不要放在根目录"><a class="markdownIt-Anchor" href="#将下载的源码解压到你的网站目录里建议新建一个目录不要放在根目录"></a> 将下载的源码解压到你的网站目录里（建议新建一个目录，不要放在根目录）</h3><h3 id="访问http域名目录就可以了"><a class="markdownIt-Anchor" href="#访问http域名目录就可以了"></a> 访问<code>http://域名/目录/</code>就可以了</h3><ul><li><p>可以用以下代码插入到网页</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"http://域名/目录/"</span> /&gt;</span></code></pre></li><li><p>也可以用以下短代码插入到论坛<br /><code>[img]http://域名/目录/[/img]</code></p></li></ul><h3 id="如果想在图片上添加一句个性签名请使用-http域名目录s个性签名base64编码例如httpsxhbokecomnewsssgvsbg8gv29ybgqh"><a class="markdownIt-Anchor" href="#如果想在图片上添加一句个性签名请使用-http域名目录s个性签名base64编码例如httpsxhbokecomnewsssgvsbg8gv29ybgqh"></a> 如果想在图片上添加一句个性签名，请使用 <code>http://域名/目录/?s=个性签名Base64编码</code>，例如：<code>https://xhboke.com/news/?s=SGVsbG8gV29ybGQh</code></h3><p><img src="https://xhboke.com/news/?s=SGVsbG8gV29ybGQh" alt="个性签名示例" /></p><h3 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h3><ul><li>作者博客： <a href="https://xhboke.com/index.php">https://xhboke.com//index.php</a></li><li>GitHub源码： <a href="https://github.com/xhboke/IP">https://github.com/xhboke/IP</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ip </tag>
            
            <tag> 图片签名档 </tag>
            
            <tag> 签名档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给网页添加社会主义核心价值观鼠标点击特效</title>
      <link href="/posts/dd3e8958/"/>
      <url>/posts/dd3e8958/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个像本页面一样鼠标点击显示富强,民主, 文明, 和谐,自由, 平等, 公正,法治, 爱国, 敬业,诚信, 友善的特效。</strong></p><h2 id="原生-js-实现代码"><a class="markdownIt-Anchor" href="#原生-js-实现代码"></a> 原生 JS 实现代码</h2><pre class="highlight"><code class="javascript"><span class="hljs-built_in">window</span>.onload=<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>&#123;    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;<span class="hljs-comment">//定义获取词语下标</span>    <span class="hljs-keyword">let</span> body=<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"body"</span>)[<span class="hljs-number">0</span>];    body.onclick=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-comment">//点击body时触发事件</span>        <span class="hljs-keyword">const</span> a=[<span class="hljs-string">"富强"</span>,<span class="hljs-string">"民主"</span>, <span class="hljs-string">"文明"</span>, <span class="hljs-string">"和谐"</span>,<span class="hljs-string">"自由"</span>, <span class="hljs-string">"平等"</span>, <span class="hljs-string">"公正"</span>,<span class="hljs-string">"法治"</span>, <span class="hljs-string">"爱国"</span>, <span class="hljs-string">"敬业"</span>,<span class="hljs-string">"诚信"</span>, <span class="hljs-string">"友善"</span>];<span class="hljs-comment">//需要显示的词语</span>        <span class="hljs-keyword">let</span> span=<span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"span"</span>);<span class="hljs-comment">//创建span标签</span>        span.innerText=a[(i++)%a.length];<span class="hljs-comment">//设置词语给span标签</span>        <span class="hljs-keyword">let</span> x = e.pageX;<span class="hljs-comment">//获取x指针坐标</span>        <span class="hljs-keyword">let</span> y = e.pageY;<span class="hljs-comment">//获取y指针坐标</span>        span.style.cssText=<span class="hljs-string">"z-index:999999999999999999999999;top:"</span>+(y - <span class="hljs-number">20</span>)+<span class="hljs-string">"px;left:"</span>+x+<span class="hljs-string">"px;position:absolute;font-weight:bold;color:#ff6651;"</span>;<span class="hljs-comment">//在鼠标的指针的位置给span标签添加css样式</span>        body.appendChild(span);<span class="hljs-comment">//在body添加这个span标签</span>        animate(span, &#123;<span class="hljs-string">"top"</span> : y - <span class="hljs-number">180</span>,<span class="hljs-string">"opacity"</span> : <span class="hljs-number">0</span>&#125;, <span class="hljs-number">15</span>, <span class="hljs-number">0.01</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;    body.removeChild(span);<span class="hljs-comment">//时间到了自动删除</span>&#125;)    &#125;    <span class="hljs-comment">//animate函数执行 CSS 属性集的自定义动画。</span>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animate</span>(<span class="hljs-params">obj, json, interval, sp, fn</span>) </span>&#123;        clearInterval(obj.timer);        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getStyle</span>(<span class="hljs-params">obj, arr</span>) </span>&#123;            <span class="hljs-keyword">if</span>(obj.currentStyle)&#123;                <span class="hljs-keyword">return</span> obj.currentStyle[arr];<span class="hljs-comment">//针对ie</span>            &#125; <span class="hljs-keyword">else</span> &#123;                <span class="hljs-keyword">return</span> <span class="hljs-built_in">document</span>.defaultView.getComputedStyle(obj, <span class="hljs-literal">null</span>)[arr].replace(<span class="hljs-regexp">/px/g</span>,<span class="hljs-string">""</span>);            &#125;        &#125;        obj.timer = setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;            <span class="hljs-keyword">var</span> flag = <span class="hljs-literal">true</span>;            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> arr <span class="hljs-keyword">in</span> json) &#123;                <span class="hljs-keyword">var</span> icur = <span class="hljs-number">0</span>;                <span class="hljs-keyword">if</span>(arr == <span class="hljs-string">"opacity"</span>) &#123;                    icur = <span class="hljs-built_in">Math</span>.round(<span class="hljs-built_in">parseFloat</span>(getStyle(obj, arr))*<span class="hljs-number">100</span>);                &#125; <span class="hljs-keyword">else</span> &#123;                    icur = <span class="hljs-built_in">parseInt</span>(getStyle(obj, arr));                &#125;                <span class="hljs-keyword">var</span> speed = (json[arr] - icur) * sp;                speed = speed &gt; <span class="hljs-number">0</span> ? <span class="hljs-built_in">Math</span>.ceil(speed): <span class="hljs-built_in">Math</span>.floor(speed);                <span class="hljs-keyword">if</span>(icur != json[arr])&#123;                    flag = <span class="hljs-literal">false</span>;                &#125;                <span class="hljs-keyword">if</span>(arr == <span class="hljs-string">"opacity"</span>)&#123;                    obj.style.filter = <span class="hljs-string">"alpha(opacity : '+(icur + speed)+' )"</span>;                    obj.style.opacity = (icur + speed)/<span class="hljs-number">100</span>;                &#125;<span class="hljs-keyword">else</span> &#123;                    obj.style[arr] = icur + speed + <span class="hljs-string">"px"</span>;                &#125;            &#125;            <span class="hljs-keyword">if</span>(flag)&#123;                clearInterval(obj.timer);                <span class="hljs-keyword">if</span>(fn)&#123;                    fn();                &#125;            &#125;        &#125;,interval);    &#125;&#125;</code></pre><h2 id="jquery-实现代码"><a class="markdownIt-Anchor" href="#jquery-实现代码"></a> jQuery 实现代码</h2><pre class="highlight"><code class="javascript">jQuery(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">$</span>) </span>&#123;    <span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;<span class="hljs-comment">//定义获取词语下标</span>    $(<span class="hljs-string">"body"</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<span class="hljs-comment">//点击body时触发事件</span>        <span class="hljs-keyword">let</span> a = [<span class="hljs-string">"富强"</span>,<span class="hljs-string">"民主"</span>, <span class="hljs-string">"文明"</span>, <span class="hljs-string">"和谐"</span>,<span class="hljs-string">"自由"</span>, <span class="hljs-string">"平等"</span>, <span class="hljs-string">"公正"</span>,<span class="hljs-string">"法治"</span>, <span class="hljs-string">"爱国"</span>, <span class="hljs-string">"敬业"</span>,<span class="hljs-string">"诚信"</span>, <span class="hljs-string">"友善"</span>];<span class="hljs-comment">//需要显示的词语</span>        <span class="hljs-keyword">let</span> $i = $(<span class="hljs-string">"&lt;span/&gt;"</span>).text(a[(i++)%a.length]);<span class="hljs-comment">//设置词语给span标签</span>        <span class="hljs-keyword">let</span> x = e.pageX;        <span class="hljs-keyword">let</span> y = e.pageY;<span class="hljs-comment">//获取x和y的指针坐标</span>        $i.css(&#123;<span class="hljs-string">"z-index"</span> : <span class="hljs-number">9999999999999999999</span>,                <span class="hljs-string">"top"</span> : y - <span class="hljs-number">20</span>,                <span class="hljs-string">"left"</span> : x,                <span class="hljs-string">"position"</span> : <span class="hljs-string">"absolute"</span>,                <span class="hljs-string">"font-weight"</span> : <span class="hljs-string">"bold"</span>,                <span class="hljs-string">"color"</span> : <span class="hljs-string">"#ff6651"</span>               &#125;);<span class="hljs-comment">//在鼠标的指针的位置给$i定义的span标签添加css样式</span>        $(<span class="hljs-string">"body"</span>).append($i);<span class="hljs-comment">//在body添加这个标签</span><span class="hljs-comment">/*nimate() 方法执行 CSS 属性集的自定义动画。  *该方法通过CSS样式将元素从一个状态改变为另一个状态。CSS属性值是逐渐改变的，这样就可以创建动画效果。 *详情请看http://www.w3school.com.cn/jquery/effect_animate.asp         */</span>        $i.animate(&#123;            <span class="hljs-string">"top"</span> : y - <span class="hljs-number">180</span>,<span class="hljs-comment">//将原来的位置向上移动180</span>            <span class="hljs-string">"opacity"</span> : <span class="hljs-number">0</span>            <span class="hljs-comment">//1500动画的速度</span>        &#125;, <span class="hljs-number">1500</span>, ()=&gt;&#123;            $i.remove();<span class="hljs-comment">//时间到了自动删除</span>        &#125;);    &#125;);&#125;);</code></pre><h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><ul><li>参考文档：<ul><li><a href="https://blog.techauch.com/get/detail/54116">HTML+CSS+JS 实现鼠标点击特效富强/民主/文明方法</a></li><li><a href="https://www.jb51.net/article/90929.htm">原生 js 实现 jquery 函数 animate()动画效果的简单实例</a></li></ul></li></ul><script>jQuery(document).ready(function($) {    let i=0;//定义获取词语下标    $("body").click(function(e) {//点击body时触发事件        let a = ["富强","民主", "文明", "和谐","自由", "平等", "公正","法治", "爱国", "敬业","诚信", "友善"];//需要显示的词语        let $i = $("<span/>").text(a[(i++)%a.length]);//设置词语给span标签        let x = e.pageX;        let y = e.pageY;//获取x和y的指针坐标        $i.css({"z-index" : 9999999999999999999,                "top" : y - 20,                "left" : x,                "position" : "absolute",                "font-weight" : "bold",                "color" : "#ff6651"               });//在鼠标的指针的位置给$i定义的span标签添加css样式        $("body").append($i);//在body添加这个标签/*nimate() 方法执行 CSS 属性集的自定义动画。  *该方法通过CSS样式将元素从一个状态改变为另一个状态。CSS属性值是逐渐改变的，这样就可以创建动画效果。 *详情请看http://www.w3school.com.cn/jquery/effect_animate.asp         */        $i.animate({            "top" : y - 180,//将原来的位置向上移动180            "opacity" : 0            //1500动画的速度        }, 1500, ()=>{            $i.remove();//时间到了自动删除        });    });});</script>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鼠标特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个社交分享插件</title>
      <link href="/posts/9522d51b/"/>
      <url>/posts/9522d51b/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个如页面底部和左下的社交分享插件。</strong></p><h2 id="使用说明"><a class="markdownIt-Anchor" href="#使用说明"></a> 使用说明</h2><h3 id="注册"><a class="markdownIt-Anchor" href="#注册"></a> <a href="https://www.addthis.com/register?next=/dashboard#tool-config">注册</a>一个帐号或<a href="https://www.addthis.com/login?next=/dashboard">登录</a>（已注册）</h3><h3 id="登录成功后点击上方导航栏中的-get-the-code"><a class="markdownIt-Anchor" href="#登录成功后点击上方导航栏中的-get-the-code"></a> 登录成功后点击上方导航栏中的 Get The Code</h3><h3 id="找到如下代码复制到你的网页"><a class="markdownIt-Anchor" href="#找到如下代码复制到你的网页"></a> 找到如下代码复制到你的网页</h3><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!-- Go to www.addthis.com/dashboard to customize your tools --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//s7.addthis.com/js/300/addthis_widget.js#pubid=***************"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h3 id="点击上方导航栏中的-tools"><a class="markdownIt-Anchor" href="#点击上方导航栏中的-tools"></a> 点击上方导航栏中的 Tools</h3><h3 id="点击右面的-add-new-tool-按钮"><a class="markdownIt-Anchor" href="#点击右面的-add-new-tool-按钮"></a> 点击右面的 ADD NEW TOOL 按钮</h3><h3 id="选择一个你想添加的工具这里以关注按钮follow-buttons为例"><a class="markdownIt-Anchor" href="#选择一个你想添加的工具这里以关注按钮follow-buttons为例"></a> 选择一个你想添加的工具，这里以关注按钮（Follow Buttons）为例</h3><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/cR3sYg.webp" alt="Follow Buttons" /></p><h3 id="在左边选择按钮显示位置这里以内联inline为例可以在右边查看效果"><a class="markdownIt-Anchor" href="#在左边选择按钮显示位置这里以内联inline为例可以在右边查看效果"></a> 在左边选择按钮显示位置，这里以内联（Inline）为例，可以在右边查看效果</h3><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/rRI7vU.webp" alt="Inline" /></p><h3 id="选择要添加哪些关注按钮长按可以调整顺序"><a class="markdownIt-Anchor" href="#选择要添加哪些关注按钮长按可以调整顺序"></a> 选择要添加哪些关注按钮，长按可以调整顺序</h3><p><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/LUdIAT.webp" alt="Select Button" /></p><h3 id="其他几个选项可以设置按钮样式-位置等大家可以自行探索最后点击-update-tool-或-activate-tool-就可以了"><a class="markdownIt-Anchor" href="#其他几个选项可以设置按钮样式-位置等大家可以自行探索最后点击-update-tool-或-activate-tool-就可以了"></a> 其他几个选项可以设置按钮样式、位置等，大家可以自行探索，最后点击 Update Tool 或 Activate Tool 就可以了</h3><p><strong>注意：使用“ 内联 ”时将页面拉到下面可以看到如下内容：</strong><br /><img src="https://cdn.jsdelivr.net/gh/HCLonely/images@latest/post/old/Ts9ic7.webp" alt="Inline Tool" /></p><p><strong>不要忘了将内联代码复制到要显示的位置。</strong></p><h3 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h3><ul><li>插件官网： <a href="https://www.addthis.com/">https://www.addthis.com</a></li></ul><div class="addthis_inline_follow_toolbox"></div><script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5d493e6a5c0d421f"></script>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> addThis </tag>
            
            <tag> 分享 </tag>
            
            <tag> 社交 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加字体闪烁（变色）特效</title>
      <link href="/posts/8f55ce4c/"/>
      <url>/posts/8f55ce4c/</url>
      
        <content type="html"><![CDATA[<p style="color:#0693e3;font-weight:700">本篇文章教大家如何给自己的网页添加一个字体<font class="magic-color">闪烁（变色）</font>特效。  </p><script>function magicColor(mode,t){    t=t||10;    let elem=document.getElementsByClassName("magic-color");    if(!elem){        setTimeout(function(){            magicColor(mode,t-1);        },400);        return;    }    if(window.mcHandler==undefined){        window.mcHandler={elements:[]};        window.mcHandler.colorIndex=0;        window.mcHandler.run=function(mode){            let color=mode=="random"?("rgb("+Math.floor(Math.random()*256)+","+Math.floor(Math.random()*256)+","+Math.floor(Math.random()*256)+",1)"):["#CC0000","#9999CC","#CC3366","#669999","#FFCC00","#00CCCC","#CC00CC"][(window.mcHandler.colorIndex++)%7];            for(var i=0,L=window.mcHandler.elements.length;i<L;i++)window.mcHandler.elements[i].style.color=color;        }    }    window.mcHandler.elements=elem;    if(window.mcHandler.timer==undefined){        window.mcHandler.timer=setInterval(()=>{window.mcHandler.run(mode)},500);    }}magicColor("");</script><h2 id="添加步骤"><a class="markdownIt-Anchor" href="#添加步骤"></a> 添加步骤</h2><h3 id="给要添加特效的元素添加class-magic-color"><a class="markdownIt-Anchor" href="#给要添加特效的元素添加class-magic-color"></a> 给要添加特效的元素添加class: <code>magic-color</code></h3><h3 id="将以下代码复制到元素后面多个元素则放到最后一个元素后面"><a class="markdownIt-Anchor" href="#将以下代码复制到元素后面多个元素则放到最后一个元素后面"></a> 将以下代码复制到元素后面（多个元素则放到最后一个元素后面）</h3><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">magicColor</span>(<span class="hljs-params">mode,t</span>)</span>&#123;    t=t||<span class="hljs-number">10</span>;    <span class="hljs-keyword">let</span> elem=<span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"magic-color"</span>);    <span class="hljs-keyword">if</span>(!elem)&#123;        setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;            magicColor(mode,t<span class="hljs-number">-1</span>);        &#125;,<span class="hljs-number">400</span>);        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.mcHandler==<span class="hljs-literal">undefined</span>)&#123;        <span class="hljs-built_in">window</span>.mcHandler=&#123;<span class="hljs-attr">elements</span>:[]&#125;;        <span class="hljs-built_in">window</span>.mcHandler.colorIndex=<span class="hljs-number">0</span>;        <span class="hljs-built_in">window</span>.mcHandler.run=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">mode</span>)</span>&#123;            <span class="hljs-keyword">let</span> color=mode==<span class="hljs-string">"random"</span>?(<span class="hljs-string">"rgb("</span>+<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">256</span>)+<span class="hljs-string">","</span>+<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">256</span>)+<span class="hljs-string">","</span>+<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">256</span>)+<span class="hljs-string">",1)"</span>):[<span class="hljs-string">"#CC0000"</span>,<span class="hljs-string">"#9999CC"</span>,<span class="hljs-string">"#CC3366"</span>,<span class="hljs-string">"#669999"</span>,<span class="hljs-string">"#FFCC00"</span>,<span class="hljs-string">"#00CCCC"</span>,<span class="hljs-string">"#CC00CC"</span>][(<span class="hljs-built_in">window</span>.mcHandler.colorIndex++)%<span class="hljs-number">7</span>];            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>,L=<span class="hljs-built_in">window</span>.mcHandler.elements.length;i&lt;L;i++)<span class="hljs-built_in">window</span>.mcHandler.elements[i].style.color=color;        &#125;    &#125;    <span class="hljs-built_in">window</span>.mcHandler.elements=elem;    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.mcHandler.timer==<span class="hljs-literal">undefined</span>)&#123;        <span class="hljs-built_in">window</span>.mcHandler.timer=setInterval(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>&#123;<span class="hljs-built_in">window</span>.mcHandler.run(mode)&#125;,<span class="hljs-number">500</span>);    &#125;&#125;magicColor(random);<span class="hljs-comment">//random为随机颜色，否则为固定颜色随机；上方“闪烁（变色）”字样为固定颜色随机</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个一言插件</title>
      <link href="/posts/3562b7af/"/>
      <url>/posts/3562b7af/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个一言插件。</strong></p><h2 id="什么是一言"><a class="markdownIt-Anchor" href="#什么是一言"></a> 什么是一言</h2><p>简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。</p><div>例如：<p id="hitokoto" style="font-size:13px">:D 获取中...</p></div><script src="https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto" defer=""></script><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><p><strong>将下方代码插入到你想让一言显示的位置即可</strong></p><pre class="highlight"><code class="html">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"hitokoto"</span>&gt;</span>:D 获取中...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 以下写法，选取一种即可 --&gt;</span>    <span class="hljs-comment">&lt;!-- 现代写法，推荐 --&gt;</span>    <span class="hljs-comment">&lt;!-- 兼容低版本浏览器 (包括 IE)，可移除 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-comment">&lt;!--End--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">      fetch(<span class="hljs-string">'https://v1.hitokoto.cn'</span>)        .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>)</span>&#123;          <span class="hljs-keyword">return</span> res.json();        &#125;)        .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;          <span class="hljs-keyword">var</span> hitokoto = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'hitokoto'</span>);          hitokoto.innerText = data.hitokoto;        &#125;)        .catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;          <span class="hljs-built_in">console</span>.error(err);        &#125;)    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 老式写法，兼容性最忧 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">      <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();      xhr.open(<span class="hljs-string">'get'</span>, <span class="hljs-string">'https://v1.hitokoto.cn'</span>);      xhr.onreadystatechange = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span> (xhr.readyState === <span class="hljs-number">4</span>) &#123;          <span class="hljs-keyword">var</span> data = <span class="hljs-built_in">JSON</span>.parse(xhr.responseText);          <span class="hljs-keyword">var</span> hitokoto = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'hitokoto'</span>);          hitokoto.innerText = data.hitokoto;        &#125;      &#125;      xhr.send();    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 新 API 方法， 十分简洁 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto"</span> <span class="hljs-attr">defer</span>=<span class="hljs-string">""</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h2 id="其他参数设置"><a class="markdownIt-Anchor" href="#其他参数设置"></a> 其他参数设置</h2><h3 id="请求地址"><a class="markdownIt-Anchor" href="#请求地址"></a> 请求地址</h3><table class="apitable" border="0" cellspacing="0" cellpadding="0">  <tbody>    <tr>      <th><b>请求地址</b></th>      <th><b>请求方式</b></th>      <th><b>说明</b></th>    </tr>    <tr>      <td>https://v1.hitokoto.cn/</td>      <td>GET/POST</td>      <td>1、已启用 HSTS， 并已加入 HSTS Preload List 计划<br>2、站点QPS限制：10，超过有可能会被屏蔽<br>3、线路：大陆+海外</td>    </tr>    <tr>      <td>https://international.v1.hitokoto.cn/</td>      <td>GET/POST</td>      <td>1、已启用 HSTS， 并已加入 HSTS Preload List 计划<br>2、站点QPS限制：25，超过有可能会被屏蔽<br>3、线路：海外</td>    </tr>  </tbody></table><h3 id="请求方式"><a class="markdownIt-Anchor" href="#请求方式"></a> 请求方式</h3><table class="apitable" border="0" cellspacing="0" cellpadding="0">  <tbody>    <tr>      <th width="100"><b>参数名称</b></th>      <th width="100"><b>类型</b></th>      <th colspan="4"><b>描述</b></th>    </tr>    <tr style="text-align: center;">      <td rowspan="9">c</td>      <td rowspan="9">可选</td>      <td colspan="4">Cat，即类型。提交不同的参数代表不同的类别，具体：</td>    </tr>    <tr>      <td>a</td>      <td colspan="3">Anime - 动画</td>    </tr>    <tr>      <td>b</td>      <td colspan="3">Comic – 漫画</td>    </tr>    <tr>      <td>c</td>      <td colspan="3">Game – 游戏</td>    </tr>    <tr>      <td>d</td>      <td colspan="3">Novel – 小说</td>    </tr>    <tr>      <td>e</td>      <td colspan="3">Myself – 原创</td>    </tr>    <tr>      <td>f</td>      <td colspan="3">Internet – 来自网络</td>    </tr>    <tr>      <td>g</td>      <td colspan="3">Other – 其他</td>    </tr>    <tr>      <td>其他不存在参数</td>      <td colspan="3">任意类型随机取得</td>    </tr>    <tr>      <td rowspan="5" style="text-align: center;">encode</td>      <td rowspan="5" style="text-align: center;">可选</td>    </tr>    <tr>      <td>text</td>      <td colspan="3">返回纯净文本</td>   </tr>    <tr>      <td>json</td>      <td colspan="3">返回不进行unicode转码的json文本</td>    </tr>    <tr>      <td>js</td>      <td colspan="3">返回指定选择器(默认.hitokoto)的同步执行函数。</td>    </tr>    <tr>      <td>其他不存在参数</td>      <td colspan="3">返回unicode转码的json文本</td>    </tr>    <tr>      <td rowspan="3" style="text-align: center;">charset</td>      <td rowspan="3" style="text-align: center;">可选</td>    </tr>    <tr>      <td>utf-8</td>      <td colspan="3">返回 UTF-8 编码的内容，支持与异步函数同用。</td>    </tr>    <tr>      <td>gbk</td>      <td colspan="3">返回 GBK 编码的内容，不支持与异步函数同用。</td>    </tr>    <tr>      <td rowspan="3" style="text-align: center;">callback</td>      <td rowspan="3" style="text-align: center;">可选</td>    </tr>    <tr>      <td>回调函数</td>      <td colspan="3">将返回的内容传参给指定的异步函数。</td>    </tr>  </tbody></table><h3 id="返回数据默认-json-格式"><a class="markdownIt-Anchor" href="#返回数据默认-json-格式"></a> 返回数据（默认 json 格式）</h3><table class="apitable" border="0" cellspacing="0" cellpadding="0">  <tbody>    <tr>      <th><b>返回参数名称</b></th>      <th><b>描述</b></th>    </tr>    <tr>      <td>id</td>      <td>本条一言的id。<br>可以链接到https://hitokoto.cn?id=[id]查看这个一言的完整信息。</td>    </tr>    <tr>      <td>hitokoto</td>      <td>一言正文。编码方式unicode。使用utf-8。</td>    </tr>    <tr>      <td>type</td>      <td>类型。请参考第三节参数的表格。</td>    </tr>    <tr>      <td>from</td>      <td>一言的出处。</td>    </tr>    <tr>      <td>creator</td>      <td>添加者。</td>    </tr>    <tr>      <td>created_at</td>      <td>添加时间。</td>    </tr>    <tr>      <td colspan="2">注意：如果encode参数为text，那么输出的只有一言正文。</td>    </tr>  </tbody></table><h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><ul><li>插件官网：<a href="https://hitokoto.cn/">https://hitokoto.cn/</a></li><li>参考说明文档：<a href="https://hitokoto.cn/api">一言 API 使用说明</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个天气插件</title>
      <link href="/posts/4d6ecc07/"/>
      <url>/posts/4d6ecc07/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个类似右上角的天气预报插件。</strong></p><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><h3 id="注册中国天气网帐号"><a class="markdownIt-Anchor" href="#注册中国天气网帐号"></a> <a href="http://u2.weather.com.cn/web/sso/regist-ui.do">注册中国天气网帐号</a>或<a href="http://u2.weather.com.cn/web/sso/login-ui.do">登录</a>（已有帐号）</h3><h3 id="登陆后打开天气插件网页-httpscjweathercomcnpluginpc"><a class="markdownIt-Anchor" href="#登陆后打开天气插件网页-httpscjweathercomcnpluginpc"></a> 登陆后打开天气插件网页： <a href="https://cj.weather.com.cn/plugin/pc">https://cj.weather.com.cn/plugin/pc</a></h3><h3 id="根据自己的需要自定义插件样式"><a class="markdownIt-Anchor" href="#根据自己的需要自定义插件样式"></a> 根据自己的需要自定义插件样式</h3><h3 id="自定义样式完成后输入自定义插件名称点击生成代码会看到类似下方代码"><a class="markdownIt-Anchor" href="#自定义样式完成后输入自定义插件名称点击生成代码会看到类似下方代码"></a> 自定义样式完成后输入自定义插件名称，点击生成代码，会看到类似下方代码</h3><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!-- test --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="actionscript">WIDGET = &#123;FID: <span class="hljs-string">'**********'</span>&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://apip.weatherdt.com/float/static/js/r.js?v=1111"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h3 id="将生成的代码复制到-html-文件里即可"><a class="markdownIt-Anchor" href="#将生成的代码复制到-html-文件里即可"></a> 将生成的代码复制到 html 文件里即可</h3><h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><ul><li>插件官网： <a href="https://cj.weather.com.cn/">https://cj.weather.com.cn/</a></li></ul><script type="text/javascript">    WIDGET = {FID: 'JJmkkElHWp'}</script><script type="text/javascript" src="https://apip.weatherdt.com/float/static/js/r.js?v=1111"></script>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 天气 </tag>
            
            <tag> 网页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个音乐播放器插件</title>
      <link href="/posts/a6b0234c/"/>
      <url>/posts/a6b0234c/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个音乐播放器。</strong></p><h2 id="新版方法"><a class="markdownIt-Anchor" href="#新版方法"></a> 新版方法</h2><h3 id="在-head-标签引入以下文件"><a class="markdownIt-Anchor" href="#在-head-标签引入以下文件"></a> 在 head 标签引入以下文件</h3><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!-- require APlayer --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- require MetingJS --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h3 id="在-body-合适的地方插入以下内容"><a class="markdownIt-Anchor" href="#在-body-合适的地方插入以下内容"></a> 在 body 合适的地方插入以下内容</h3><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!--此处为示例---&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meting-js</span><span class="hljs-attr">server</span>=<span class="hljs-string">"netease"</span><span class="hljs-attr">type</span>=<span class="hljs-string">"playlist"</span><span class="hljs-attr">id</span>=<span class="hljs-string">"60198"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">meting-js</span>&gt;</span></code></pre><h3 id="选项"><a class="markdownIt-Anchor" href="#选项"></a> 选项</h3><table><thead><tr><th style="text-align:left">option</th><th style="text-align:center">default</th><th style="text-align:left">description</th></tr></thead><tbody><tr><td style="text-align:left">id</td><td style="text-align:center"><strong>必须</strong></td><td style="text-align:left">歌曲 id/歌单 id/专辑 id/搜索关键词</td></tr><tr><td style="text-align:left">server</td><td style="text-align:center"><strong>必须</strong></td><td style="text-align:left">音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td style="text-align:left">type</td><td style="text-align:center"><strong>必须</strong></td><td style="text-align:left"><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td style="text-align:left">auto</td><td style="text-align:center">options</td><td style="text-align:left">音乐链接, 支持以下平台: <code>netease</code>, <code>tencent</code>, <code>xiami</code></td></tr><tr><td style="text-align:left">fixed</td><td style="text-align:center"><code>false</code></td><td style="text-align:left">开启吸底模式, <a href="https://aplayer.js.org/#/home?id=fixed-mode">详情</a></td></tr><tr><td style="text-align:left">mini</td><td style="text-align:center"><code>false</code></td><td style="text-align:left">开启迷你模式, <a href="https://aplayer.js.org/#/home?id=mini-mode">详情</a></td></tr><tr><td style="text-align:left">autoplay</td><td style="text-align:center"><code>false</code></td><td style="text-align:left">音频自动播放</td></tr><tr><td style="text-align:left">theme</td><td style="text-align:center"><code>#2980b9</code></td><td style="text-align:left">主题色</td></tr><tr><td style="text-align:left">loop</td><td style="text-align:center"><code>all</code></td><td style="text-align:left">音频循环播放, 可选值: ‘all’, ‘one’, ‘none’</td></tr><tr><td style="text-align:left">order</td><td style="text-align:center"><code>list</code></td><td style="text-align:left">音频循环顺序, 可选值: ‘list’, ‘random’</td></tr><tr><td style="text-align:left">preload</td><td style="text-align:center"><code>auto</code></td><td style="text-align:left">预加载，可选值: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td style="text-align:left">volume</td><td style="text-align:center"><code>0.7</code></td><td style="text-align:left">默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</td></tr><tr><td style="text-align:left">mutex</td><td style="text-align:center"><code>true</code></td><td style="text-align:left">互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</td></tr><tr><td style="text-align:left">lrc-type</td><td style="text-align:center"><code>0</code></td><td style="text-align:left"><a href="https://aplayer.js.org/#/home?id=lrc">详情</a></td></tr><tr><td style="text-align:left">list-folded</td><td style="text-align:center"><code>false</code></td><td style="text-align:left">列表默认折叠</td></tr><tr><td style="text-align:left">list-max-height</td><td style="text-align:center"><code>340px</code></td><td style="text-align:left">列表最大高度</td></tr><tr><td style="text-align:left">storage-name</td><td style="text-align:center"><code>metingjs</code></td><td style="text-align:left">存储播放器设置的 localStorage key</td></tr></tbody></table><h2 id="旧版方法不稳定"><a class="markdownIt-Anchor" href="#旧版方法不稳定"></a> 旧版方法（不稳定）</h2><h3 id="在-head-标签引入-css-样式文件"><a class="markdownIt-Anchor" href="#在-head-标签引入-css-样式文件"></a> 在 head 标签引入 css 样式文件</h3><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.css"</span>&gt;</span></code></pre><h3 id="在-body-标签内加入-div-标签并引入-js-文件"><a class="markdownIt-Anchor" href="#在-body-标签内加入-div-标签并引入-js-文件"></a> 在 body 标签内加入 div 标签并引入 js 文件</h3><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h3 id="加载播放器"><a class="markdownIt-Anchor" href="#加载播放器"></a> 加载播放器</h3><pre class="highlight"><code class="javascript"><span class="hljs-keyword">const</span> ap = <span class="hljs-keyword">new</span> APlayer(&#123;    <span class="hljs-attr">container</span>: <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'aplayer'</span>),    <span class="hljs-attr">fixed</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//开启吸底模式</span>    <span class="hljs-attr">autoplay</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//自动播放</span>    <span class="hljs-attr">lrcType</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//歌词加载方式</span>    <span class="hljs-attr">audio</span>: audioArr,<span class="hljs-comment">//歌曲列表</span>&#125;);<span class="hljs-comment">//更多详细参数请前往https://aplayer.js.org/#/zh-Hans/查看</span></code></pre><h3 id="引入-autoplayjs-自动加载网易云音乐可选需-jquery-支持"><a class="markdownIt-Anchor" href="#引入-autoplayjs-自动加载网易云音乐可选需-jquery-支持"></a> 引入 autoPlay.js 自动加载网易云音乐（可选，需 jQuery 支持）</h3><pre class="highlight"><code class="javascript"><span class="hljs-keyword">try</span> &#123;    $.ajax(&#123;<span class="hljs-attr">url</span>: <span class="hljs-string">"https://cdn.bootcss.com/bluebird/3.5.5/bluebird.min.js"</span>, <span class="hljs-attr">dataType</span>:<span class="hljs-string">"script"</span>, <span class="hljs-attr">cache</span>: <span class="hljs-literal">true</span>,   <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;        $.ajax(&#123;<span class="hljs-attr">url</span>: <span class="hljs-string">"https://cdn.bootcss.com/fetch/2.0.4/fetch.min.js"</span>, <span class="hljs-attr">dataType</span>:<span class="hljs-string">"script"</span>, <span class="hljs-attr">cache</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fetch163Playlist</span>(<span class="hljs-params">playlist_id</span>) </span>&#123;                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">ok, err</span>) </span>&#123;                    fetch(<span class="hljs-string">"https://v1.hitokoto.cn/nm/playlist/"</span> + playlist_id)                    .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;                        <span class="hljs-keyword">return</span> response.json();                    &#125;)                    .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;                        <span class="hljs-keyword">var</span> arr = [];                        data.playlist.tracks.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>&#123;                            arr.push(value.id);                        &#125;);                        <span class="hljs-keyword">return</span> arr;                    &#125;)                    .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">ids</span>) </span>&#123;                        <span class="hljs-keyword">return</span> fetch163Songs(ids);                    &#125;)                    .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;                        ok(data);                    &#125;)                    .catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;                        err(e);                    &#125;);                &#125;)            &#125;            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fetch163Songs</span>(<span class="hljs-params">IDS</span>) </span>&#123;                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">ok, err</span>) </span>&#123;                    <span class="hljs-keyword">var</span> ids;                    <span class="hljs-keyword">switch</span> (<span class="hljs-keyword">typeof</span> IDS) &#123;                        <span class="hljs-keyword">case</span> <span class="hljs-string">'number'</span>:                            ids = [IDS];                            <span class="hljs-keyword">break</span>;                        <span class="hljs-keyword">case</span> <span class="hljs-string">'object'</span>:                            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">Array</span>.isArray(IDS)) &#123;                                err(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">"Please enter array or number"</span>));                            &#125;                            ids = IDS;                            <span class="hljs-keyword">break</span>;                        <span class="hljs-keyword">default</span>:                            err(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">"Please enter array or number"</span>));                            <span class="hljs-keyword">break</span>;                    &#125;                    fetch(<span class="hljs-string">"https://v1.hitokoto.cn/nm/summary/"</span> + ids.join(<span class="hljs-string">","</span>) + <span class="hljs-string">"?lyric=true&amp;common=true"</span>)                        .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;                        <span class="hljs-keyword">return</span> response.json();                    &#125;)                        .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;                        <span class="hljs-keyword">var</span> songs = [];                        data.songs.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">song</span>) </span>&#123;                            songs.push(&#123;                                <span class="hljs-attr">name</span>: song.name,                                <span class="hljs-attr">url</span>: song.url,                                <span class="hljs-attr">artist</span>: song.artists.join(<span class="hljs-string">"/"</span>),                                <span class="hljs-attr">album</span>: song.album.name,                                <span class="hljs-attr">pic</span>: song.album.picture,                                <span class="hljs-attr">lrc</span>: song.lyric                            &#125;);                        &#125;);                        <span class="hljs-keyword">return</span> songs;                    &#125;)                        .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) </span>&#123;                        ok(result);                    &#125;)                        .catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;                        err(e);                    &#125;);                &#125;);            &#125;            <span class="hljs-comment">/****加载多个网易云音乐单曲****/</span>            fetch163Songs(songArr)<span class="hljs-comment">//此处"songArr"为网易云音乐id数组</span>                .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;                <span class="hljs-keyword">let</span> audioArr=[];                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;data.length;i++)&#123;                    audioArr.push(&#123;<span class="hljs-string">'name'</span>:data[i].name,<span class="hljs-string">'artist'</span>:data[i].artist,<span class="hljs-string">'url'</span>:data[i].url,<span class="hljs-string">'cover'</span>:data[i].pic,<span class="hljs-string">'lrc'</span>:data[i].lrc.base&#125;);                &#125;                <span class="hljs-keyword">const</span> ap = <span class="hljs-keyword">new</span> APlayer(&#123;                    <span class="hljs-attr">container</span>: <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'aplayer'</span>),                    <span class="hljs-attr">fixed</span>: <span class="hljs-literal">true</span>,                    <span class="hljs-attr">autoplay</span>: <span class="hljs-literal">true</span>,                    <span class="hljs-attr">lrcType</span>: <span class="hljs-number">1</span>,                    <span class="hljs-attr">audio</span>: audioArr,                &#125;);            &#125;)                .catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;                <span class="hljs-built_in">console</span>.error(<span class="hljs-string">'网易云音乐获取失败！'</span>+err);            &#125;)            <span class="hljs-comment">/****加载网易云音乐歌单****/</span>            fetch163Playlist(listId)<span class="hljs-comment">//此处"listId"为网易云音乐歌单id</span>                .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;                <span class="hljs-keyword">let</span> audioArr=[];                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;data.length;i++)&#123;                    audioArr.push(&#123;<span class="hljs-string">'name'</span>:data[i].name,<span class="hljs-string">'artist'</span>:data[i].artist,<span class="hljs-string">'url'</span>:data[i].url,<span class="hljs-string">'cover'</span>:data[i].pic,<span class="hljs-string">'lrc'</span>:data[i].lrc.base&#125;);                &#125;                <span class="hljs-keyword">const</span> ap = <span class="hljs-keyword">new</span> APlayer(&#123;                    <span class="hljs-attr">container</span>: <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'aplayer'</span>),                    <span class="hljs-attr">fixed</span>: <span class="hljs-literal">true</span>,                    <span class="hljs-attr">autoplay</span>: <span class="hljs-literal">true</span>,                    <span class="hljs-attr">lrcType</span>: <span class="hljs-number">1</span>,                    <span class="hljs-attr">audio</span>: audioArr,                &#125;);            &#125;)                .catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;                <span class="hljs-built_in">console</span>.error(<span class="hljs-string">'网易云音乐获取失败！'</span>+err);            &#125;)        &#125;&#125;);    &#125;&#125;);&#125; <span class="hljs-keyword">catch</span>(err) &#123; <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"[Error]"</span>+err) &#125;</code></pre><h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><ul><li>插件官网：<a href="http://aplayer.js.org">http://aplayer.js.org</a></li><li>插件 GitHub：<a href="https://github.com/MoePlayer/APlayer">https://github.com/MoePlayer/APlayer</a></li><li>中文说明文档： <a href="https://aplayer.js.org/#/zh-Hans/">https://aplayer.js.org/#/zh-Hans/</a></li><li>CDN 支持：<a href="https://www.bootcdn.cn/">BootCDN</a></li><li>网易云音乐 API： <a href="https://github.com/a632079/teng-koa">https://github.com/a632079/teng-koa</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APlayer </tag>
            
            <tag> 音乐播放器 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
